// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// LIEF bindings.
class LIEF {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LIEF(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LIEF.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void __va_start(
    ffi.Pointer<va_list> arg0,
  ) {
    return ___va_start(
      arg0,
    );
  }

  late final ___va_startPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<va_list>)>>(
          '__va_start');
  late final ___va_start =
      ___va_startPtr.asFunction<void Function(ffi.Pointer<va_list>)>();

  void __security_init_cookie() {
    return ___security_init_cookie();
  }

  late final ___security_init_cookiePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          '__security_init_cookie');
  late final ___security_init_cookie =
      ___security_init_cookiePtr.asFunction<void Function()>();

  void __security_check_cookie(
    int _StackCookie,
  ) {
    return ___security_check_cookie(
      _StackCookie,
    );
  }

  late final ___security_check_cookiePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          '__security_check_cookie');
  late final ___security_check_cookie =
      ___security_check_cookiePtr.asFunction<void Function(int)>();

  void __report_gsfailure(
    int _StackCookie,
  ) {
    return ___report_gsfailure(
      _StackCookie,
    );
  }

  late final ___report_gsfailurePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          '__report_gsfailure');
  late final ___report_gsfailure =
      ___report_gsfailurePtr.asFunction<void Function(int)>();

  late final ffi.Pointer<ffi.UintPtr> ___security_cookie =
      _lookup<ffi.UintPtr>('__security_cookie');

  int get __security_cookie => ___security_cookie.value;

  set __security_cookie(int value) => ___security_cookie.value = value;

  void _invalid_parameter_noinfo() {
    return __invalid_parameter_noinfo();
  }

  late final __invalid_parameter_noinfoPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          '_invalid_parameter_noinfo');
  late final __invalid_parameter_noinfo =
      __invalid_parameter_noinfoPtr.asFunction<void Function()>();

  void _invalid_parameter_noinfo_noreturn() {
    return __invalid_parameter_noinfo_noreturn();
  }

  late final __invalid_parameter_noinfo_noreturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          '_invalid_parameter_noinfo_noreturn');
  late final __invalid_parameter_noinfo_noreturn =
      __invalid_parameter_noinfo_noreturnPtr.asFunction<void Function()>();

  void _invoke_watson(
    ffi.Pointer<ffi.WChar> _Expression,
    ffi.Pointer<ffi.WChar> _FunctionName,
    ffi.Pointer<ffi.WChar> _FileName,
    int _LineNo,
    int _Reserved,
  ) {
    return __invoke_watson(
      _Expression,
      _FunctionName,
      _FileName,
      _LineNo,
      _Reserved,
    );
  }

  late final __invoke_watsonPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.WChar>,
              ffi.UnsignedInt,
              ffi.UintPtr)>>('_invoke_watson');
  late final __invoke_watson = __invoke_watsonPtr.asFunction<
      void Function(ffi.Pointer<ffi.WChar>, ffi.Pointer<ffi.WChar>,
          ffi.Pointer<ffi.WChar>, int, int)>();

  int imaxabs(
    int _Number,
  ) {
    return _imaxabs(
      _Number,
    );
  }

  late final _imaxabsPtr =
      _lookup<ffi.NativeFunction<intmax_t Function(intmax_t)>>('imaxabs');
  late final _imaxabs = _imaxabsPtr.asFunction<int Function(int)>();

  imaxdiv_t imaxdiv(
    int _Numerator,
    int _Denominator,
  ) {
    return _imaxdiv(
      _Numerator,
      _Denominator,
    );
  }

  late final _imaxdivPtr =
      _lookup<ffi.NativeFunction<imaxdiv_t Function(intmax_t, intmax_t)>>(
          'imaxdiv');
  late final _imaxdiv = _imaxdivPtr.asFunction<imaxdiv_t Function(int, int)>();

  int strtoimax(
    ffi.Pointer<ffi.Char> _String,
    ffi.Pointer<ffi.Pointer<ffi.Char>> _EndPtr,
    int _Radix,
  ) {
    return _strtoimax(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtoimaxPtr = _lookup<
      ffi.NativeFunction<
          intmax_t Function(ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Int)>>('strtoimax');
  late final _strtoimax = _strtoimaxPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<ffi.Char>>, int)>();

  int _strtoimax_l(
    ffi.Pointer<ffi.Char> _String,
    ffi.Pointer<ffi.Pointer<ffi.Char>> _EndPtr,
    int _Radix,
    _locale_t _Locale,
  ) {
    return __strtoimax_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoimax_lPtr = _lookup<
      ffi.NativeFunction<
          intmax_t Function(
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Int,
              _locale_t)>>('_strtoimax_l');
  late final __strtoimax_l = __strtoimax_lPtr.asFunction<
      int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<ffi.Char>>,
          int, _locale_t)>();

  int strtoumax(
    ffi.Pointer<ffi.Char> _String,
    ffi.Pointer<ffi.Pointer<ffi.Char>> _EndPtr,
    int _Radix,
  ) {
    return _strtoumax(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _strtoumaxPtr = _lookup<
      ffi.NativeFunction<
          uintmax_t Function(ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>, ffi.Int)>>('strtoumax');
  late final _strtoumax = _strtoumaxPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<ffi.Char>>, int)>();

  int _strtoumax_l(
    ffi.Pointer<ffi.Char> _String,
    ffi.Pointer<ffi.Pointer<ffi.Char>> _EndPtr,
    int _Radix,
    _locale_t _Locale,
  ) {
    return __strtoumax_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __strtoumax_lPtr = _lookup<
      ffi.NativeFunction<
          uintmax_t Function(
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Int,
              _locale_t)>>('_strtoumax_l');
  late final __strtoumax_l = __strtoumax_lPtr.asFunction<
      int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<ffi.Char>>,
          int, _locale_t)>();

  int wcstoimax(
    ffi.Pointer<ffi.WChar> _String,
    ffi.Pointer<ffi.Pointer<ffi.WChar>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoimax(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoimaxPtr = _lookup<
      ffi.NativeFunction<
          intmax_t Function(ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.Pointer<ffi.WChar>>, ffi.Int)>>('wcstoimax');
  late final _wcstoimax = _wcstoimaxPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.WChar>, ffi.Pointer<ffi.Pointer<ffi.WChar>>, int)>();

  int _wcstoimax_l(
    ffi.Pointer<ffi.WChar> _String,
    ffi.Pointer<ffi.Pointer<ffi.WChar>> _EndPtr,
    int _Radix,
    _locale_t _Locale,
  ) {
    return __wcstoimax_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoimax_lPtr = _lookup<
      ffi.NativeFunction<
          intmax_t Function(
              ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.Pointer<ffi.WChar>>,
              ffi.Int,
              _locale_t)>>('_wcstoimax_l');
  late final __wcstoimax_l = __wcstoimax_lPtr.asFunction<
      int Function(ffi.Pointer<ffi.WChar>, ffi.Pointer<ffi.Pointer<ffi.WChar>>,
          int, _locale_t)>();

  int wcstoumax(
    ffi.Pointer<ffi.WChar> _String,
    ffi.Pointer<ffi.Pointer<ffi.WChar>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoumax(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoumaxPtr = _lookup<
      ffi.NativeFunction<
          uintmax_t Function(ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.Pointer<ffi.WChar>>, ffi.Int)>>('wcstoumax');
  late final _wcstoumax = _wcstoumaxPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.WChar>, ffi.Pointer<ffi.Pointer<ffi.WChar>>, int)>();

  int _wcstoumax_l(
    ffi.Pointer<ffi.WChar> _String,
    ffi.Pointer<ffi.Pointer<ffi.WChar>> _EndPtr,
    int _Radix,
    _locale_t _Locale,
  ) {
    return __wcstoumax_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoumax_lPtr = _lookup<
      ffi.NativeFunction<
          uintmax_t Function(
              ffi.Pointer<ffi.WChar>,
              ffi.Pointer<ffi.Pointer<ffi.WChar>>,
              ffi.Int,
              _locale_t)>>('_wcstoumax_l');
  late final __wcstoumax_l = __wcstoumax_lPtr.asFunction<
      int Function(ffi.Pointer<ffi.WChar>, ffi.Pointer<ffi.Pointer<ffi.WChar>>,
          int, _locale_t)>();

  /// @brief Wrapper on LIEF::MachO::Parser::parse
  ffi.Pointer<ffi.Pointer<Macho_Binary_t>> macho_parse(
    ffi.Pointer<ffi.Char> file,
  ) {
    return _macho_parse(
      file,
    );
  }

  late final _macho_parsePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Pointer<Macho_Binary_t>> Function(
              ffi.Pointer<ffi.Char>)>>('macho_parse');
  late final _macho_parse = _macho_parsePtr.asFunction<
      ffi.Pointer<ffi.Pointer<Macho_Binary_t>> Function(
          ffi.Pointer<ffi.Char>)>();

  void macho_binaries_destroy(
    ffi.Pointer<ffi.Pointer<Macho_Binary_t>> binaries,
  ) {
    return _macho_binaries_destroy(
      binaries,
    );
  }

  late final _macho_binaries_destroyPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Pointer<Macho_Binary_t>>)>>(
      'macho_binaries_destroy');
  late final _macho_binaries_destroy = _macho_binaries_destroyPtr
      .asFunction<void Function(ffi.Pointer<ffi.Pointer<Macho_Binary_t>>)>();

  ffi.Pointer<ffi.Char> LOAD_COMMAND_TYPES_to_string(
    int e,
  ) {
    return _LOAD_COMMAND_TYPES_to_string(
      e,
    );
  }

  late final _LOAD_COMMAND_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'LOAD_COMMAND_TYPES_to_string');
  late final _LOAD_COMMAND_TYPES_to_string = _LOAD_COMMAND_TYPES_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> MACHO_TYPES_to_string(
    int e,
  ) {
    return _MACHO_TYPES_to_string(
      e,
    );
  }

  late final _MACHO_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'MACHO_TYPES_to_string');
  late final _MACHO_TYPES_to_string = _MACHO_TYPES_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> FILE_TYPES_to_string(
    int e,
  ) {
    return _FILE_TYPES_to_string(
      e,
    );
  }

  late final _FILE_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'FILE_TYPES_to_string');
  late final _FILE_TYPES_to_string = _FILE_TYPES_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> CPU_TYPES_to_string(
    int e,
  ) {
    return _CPU_TYPES_to_string(
      e,
    );
  }

  late final _CPU_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'CPU_TYPES_to_string');
  late final _CPU_TYPES_to_string =
      _CPU_TYPES_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> HEADER_FLAGS_to_string(
    int e,
  ) {
    return _HEADER_FLAGS_to_string(
      e,
    );
  }

  late final _HEADER_FLAGS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'HEADER_FLAGS_to_string');
  late final _HEADER_FLAGS_to_string = _HEADER_FLAGS_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> MACHO_SECTION_TYPES_to_string(
    int e,
  ) {
    return _MACHO_SECTION_TYPES_to_string(
      e,
    );
  }

  late final _MACHO_SECTION_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'MACHO_SECTION_TYPES_to_string');
  late final _MACHO_SECTION_TYPES_to_string = _MACHO_SECTION_TYPES_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> MACHO_SYMBOL_TYPES_to_string(
    int e,
  ) {
    return _MACHO_SYMBOL_TYPES_to_string(
      e,
    );
  }

  late final _MACHO_SYMBOL_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'MACHO_SYMBOL_TYPES_to_string');
  late final _MACHO_SYMBOL_TYPES_to_string = _MACHO_SYMBOL_TYPES_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> N_LIST_TYPES_to_string(
    int e,
  ) {
    return _N_LIST_TYPES_to_string(
      e,
    );
  }

  late final _N_LIST_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'N_LIST_TYPES_to_string');
  late final _N_LIST_TYPES_to_string = _N_LIST_TYPES_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> SYMBOL_DESCRIPTIONS_to_string(
    int e,
  ) {
    return _SYMBOL_DESCRIPTIONS_to_string(
      e,
    );
  }

  late final _SYMBOL_DESCRIPTIONS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'SYMBOL_DESCRIPTIONS_to_string');
  late final _SYMBOL_DESCRIPTIONS_to_string = _SYMBOL_DESCRIPTIONS_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Int> _errno() {
    return __errno();
  }

  late final __errnoPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int> Function()>>('_errno');
  late final __errno = __errnoPtr.asFunction<ffi.Pointer<ffi.Int> Function()>();

  int _set_errno(
    int _Value,
  ) {
    return __set_errno(
      _Value,
    );
  }

  late final __set_errnoPtr =
      _lookup<ffi.NativeFunction<errno_t Function(ffi.Int)>>('_set_errno');
  late final __set_errno = __set_errnoPtr.asFunction<int Function(int)>();

  int _get_errno(
    ffi.Pointer<ffi.Int> _Value,
  ) {
    return __get_errno(
      _Value,
    );
  }

  late final __get_errnoPtr =
      _lookup<ffi.NativeFunction<errno_t Function(ffi.Pointer<ffi.Int>)>>(
          '_get_errno');
  late final __get_errno =
      __get_errnoPtr.asFunction<int Function(ffi.Pointer<ffi.Int>)>();

  int __threadid() {
    return ___threadid();
  }

  late final ___threadidPtr =
      _lookup<ffi.NativeFunction<ffi.UnsignedLong Function()>>('__threadid');
  late final ___threadid = ___threadidPtr.asFunction<int Function()>();

  int __threadhandle() {
    return ___threadhandle();
  }

  late final ___threadhandlePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function()>>('__threadhandle');
  late final ___threadhandle = ___threadhandlePtr.asFunction<int Function()>();

  /// Wrapper on LIEF::PE::Parser::parse
  ffi.Pointer<Pe_Binary_t> pe_parse(
    ffi.Pointer<ffi.Char> file,
  ) {
    return _pe_parse(
      file,
    );
  }

  late final _pe_parsePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<Pe_Binary_t> Function(
              ffi.Pointer<ffi.Char>)>>('pe_parse');
  late final _pe_parse = _pe_parsePtr
      .asFunction<ffi.Pointer<Pe_Binary_t> Function(ffi.Pointer<ffi.Char>)>();

  void pe_binary_destroy(
    ffi.Pointer<Pe_Binary_t> binary,
  ) {
    return _pe_binary_destroy(
      binary,
    );
  }

  late final _pe_binary_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<Pe_Binary_t>)>>(
          'pe_binary_destroy');
  late final _pe_binary_destroy = _pe_binary_destroyPtr
      .asFunction<void Function(ffi.Pointer<Pe_Binary_t>)>();

  ffi.Pointer<ffi.Char> PE_TYPES_to_string(
    int e,
  ) {
    return _PE_TYPES_to_string(
      e,
    );
  }

  late final _PE_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'PE_TYPES_to_string');
  late final _PE_TYPES_to_string =
      _PE_TYPES_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> MACHINE_TYPES_to_string(
    int e,
  ) {
    return _MACHINE_TYPES_to_string(
      e,
    );
  }

  late final _MACHINE_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'MACHINE_TYPES_to_string');
  late final _MACHINE_TYPES_to_string = _MACHINE_TYPES_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> SUBSYSTEM_to_string(
    int e,
  ) {
    return _SUBSYSTEM_to_string(
      e,
    );
  }

  late final _SUBSYSTEM_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'SUBSYSTEM_to_string');
  late final _SUBSYSTEM_to_string =
      _SUBSYSTEM_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  /// @brief Wrapper for LIEF::ELF::Parser::parse
  ffi.Pointer<Elf_Binary_t> elf_parse(
    ffi.Pointer<ffi.Char> file,
  ) {
    return _elf_parse(
      file,
    );
  }

  late final _elf_parsePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<Elf_Binary_t> Function(
              ffi.Pointer<ffi.Char>)>>('elf_parse');
  late final _elf_parse = _elf_parsePtr
      .asFunction<ffi.Pointer<Elf_Binary_t> Function(ffi.Pointer<ffi.Char>)>();

  void elf_binary_destroy(
    ffi.Pointer<Elf_Binary_t> binary,
  ) {
    return _elf_binary_destroy(
      binary,
    );
  }

  late final _elf_binary_destroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<Elf_Binary_t>)>>(
          'elf_binary_destroy');
  late final _elf_binary_destroy = _elf_binary_destroyPtr
      .asFunction<void Function(ffi.Pointer<Elf_Binary_t>)>();

  /// @brief Update LIEF::ELF::Header object
  int elf_binary_save_header(
    ffi.Pointer<Elf_Binary_t> binary,
  ) {
    return _elf_binary_save_header(
      binary,
    );
  }

  late final _elf_binary_save_headerPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<Elf_Binary_t>)>>(
          'elf_binary_save_header');
  late final _elf_binary_save_header = _elf_binary_save_headerPtr
      .asFunction<int Function(ffi.Pointer<Elf_Binary_t>)>();

  ffi.Pointer<ffi.Char> SYMBOL_BINDINGS_to_string(
    int e,
  ) {
    return _SYMBOL_BINDINGS_to_string(
      e,
    );
  }

  late final _SYMBOL_BINDINGS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'SYMBOL_BINDINGS_to_string');
  late final _SYMBOL_BINDINGS_to_string = _SYMBOL_BINDINGS_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> E_TYPE_to_string(
    int e,
  ) {
    return _E_TYPE_to_string(
      e,
    );
  }

  late final _E_TYPE_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'E_TYPE_to_string');
  late final _E_TYPE_to_string =
      _E_TYPE_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> VERSION_to_string(
    int e,
  ) {
    return _VERSION_to_string(
      e,
    );
  }

  late final _VERSION_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'VERSION_to_string');
  late final _VERSION_to_string =
      _VERSION_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ARCH_to_string(
    int e,
  ) {
    return _ARCH_to_string(
      e,
    );
  }

  late final _ARCH_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ARCH_to_string');
  late final _ARCH_to_string =
      _ARCH_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> SEGMENT_TYPES_to_string(
    int e,
  ) {
    return _SEGMENT_TYPES_to_string(
      e,
    );
  }

  late final _SEGMENT_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'SEGMENT_TYPES_to_string');
  late final _SEGMENT_TYPES_to_string = _SEGMENT_TYPES_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> DYNAMIC_TAGS_to_string(
    int e,
  ) {
    return _DYNAMIC_TAGS_to_string(
      e,
    );
  }

  late final _DYNAMIC_TAGS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'DYNAMIC_TAGS_to_string');
  late final _DYNAMIC_TAGS_to_string = _DYNAMIC_TAGS_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ELF_SECTION_TYPES_to_string(
    int e,
  ) {
    return _ELF_SECTION_TYPES_to_string(
      e,
    );
  }

  late final _ELF_SECTION_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ELF_SECTION_TYPES_to_string');
  late final _ELF_SECTION_TYPES_to_string = _ELF_SECTION_TYPES_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ELF_SECTION_FLAGS_to_string(
    int e,
  ) {
    return _ELF_SECTION_FLAGS_to_string(
      e,
    );
  }

  late final _ELF_SECTION_FLAGS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ELF_SECTION_FLAGS_to_string');
  late final _ELF_SECTION_FLAGS_to_string = _ELF_SECTION_FLAGS_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ELF_SYMBOL_TYPES_to_string(
    int e,
  ) {
    return _ELF_SYMBOL_TYPES_to_string(
      e,
    );
  }

  late final _ELF_SYMBOL_TYPES_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ELF_SYMBOL_TYPES_to_string');
  late final _ELF_SYMBOL_TYPES_to_string = _ELF_SYMBOL_TYPES_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ELF_CLASS_to_string(
    int e,
  ) {
    return _ELF_CLASS_to_string(
      e,
    );
  }

  late final _ELF_CLASS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ELF_CLASS_to_string');
  late final _ELF_CLASS_to_string =
      _ELF_CLASS_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> ELF_DATA_to_string(
    int e,
  ) {
    return _ELF_DATA_to_string(
      e,
    );
  }

  late final _ELF_DATA_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'ELF_DATA_to_string');
  late final _ELF_DATA_to_string =
      _ELF_DATA_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> OS_ABI_to_string(
    int e,
  ) {
    return _OS_ABI_to_string(
      e,
    );
  }

  late final _OS_ABI_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'OS_ABI_to_string');
  late final _OS_ABI_to_string =
      _OS_ABI_to_stringPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> DYNAMIC_FLAGS_to_string(
    int e,
  ) {
    return _DYNAMIC_FLAGS_to_string(
      e,
    );
  }

  late final _DYNAMIC_FLAGS_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'DYNAMIC_FLAGS_to_string');
  late final _DYNAMIC_FLAGS_to_string = _DYNAMIC_FLAGS_to_stringPtr.asFunction<
      ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> DYNAMIC_FLAGS_1_to_string(
    int e,
  ) {
    return _DYNAMIC_FLAGS_1_to_string(
      e,
    );
  }

  late final _DYNAMIC_FLAGS_1_to_stringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'DYNAMIC_FLAGS_1_to_string');
  late final _DYNAMIC_FLAGS_1_to_string = _DYNAMIC_FLAGS_1_to_stringPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  /// @brief Check if the given file is an ELF one.
  int is_elf(
    ffi.Pointer<ffi.Char> file,
  ) {
    return _is_elf(
      file,
    );
  }

  late final _is_elfPtr =
      _lookup<ffi.NativeFunction<bool Function(ffi.Pointer<ffi.Char>)>>(
          'is_elf');
  late final _is_elf =
      _is_elfPtr.asFunction<int Function(ffi.Pointer<ffi.Char>)>();

  /// @brief Disable the logging module
  void lief_logging_disable() {
    return _lief_logging_disable();
  }

  late final _lief_logging_disablePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('lief_logging_disable');
  late final _lief_logging_disable =
      _lief_logging_disablePtr.asFunction<void Function()>();

  /// @brief Enable the logging module globally
  void lief_logging_enable() {
    return _lief_logging_enable();
  }

  late final _lief_logging_enablePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('lief_logging_enable');
  late final _lief_logging_enable =
      _lief_logging_enablePtr.asFunction<void Function()>();

  /// @brief Update logging level
  void lief_logging_set_level(
    int level,
  ) {
    return _lief_logging_set_level(
      level,
    );
  }

  late final _lief_logging_set_levelPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Uint32)>>(
          'lief_logging_set_level');
  late final _lief_logging_set_level =
      _lief_logging_set_levelPtr.asFunction<void Function(int)>();
}

typedef va_list = ffi.Pointer<ffi.Char>;

final class __crt_locale_data_public extends ffi.Struct {
  external ffi.Pointer<ffi.UnsignedShort> _locale_pctype;

  @ffi.Int()
  external int _locale_mb_cur_max;

  @ffi.UnsignedInt()
  external int _locale_lc_codepage;
}

final class __crt_locale_pointers extends ffi.Struct {
  external ffi.Pointer<__crt_locale_data> locinfo;

  external ffi.Pointer<__crt_multibyte_data> mbcinfo;
}

final class __crt_locale_data extends ffi.Opaque {}

final class __crt_multibyte_data extends ffi.Opaque {}

final class _Mbstatet extends ffi.Struct {
  @ffi.UnsignedLong()
  external int _Wchar;

  @ffi.UnsignedShort()
  external int _Byte;

  @ffi.UnsignedShort()
  external int _State;
}

final class _Lldiv_t extends ffi.Struct {
  @intmax_t()
  external int quot;

  @intmax_t()
  external int rem;
}

typedef intmax_t = ffi.LongLong;
typedef Dartintmax_t = int;
typedef imaxdiv_t = _Lldiv_t;
typedef _locale_t = ffi.Pointer<__crt_locale_pointers>;
typedef uintmax_t = ffi.UnsignedLongLong;
typedef Dartuintmax_t = int;

abstract class LIEF_MACHO_MACHO_TYPES {
  static const int LIEF_MACHO_MH_MAGIC = -17958194;
  static const int LIEF_MACHO_MH_CIGAM = -822415874;
  static const int LIEF_MACHO_MH_MAGIC_64 = -17958193;
  static const int LIEF_MACHO_MH_CIGAM_64 = -805638658;
  static const int LIEF_MACHO_FAT_MAGIC = -889275714;
  static const int LIEF_MACHO_FAT_CIGAM = -1095041334;
}

abstract class LIEF_MACHO_FILE_TYPES {
  static const int LIEF_MACHO_MH_OBJECT = 1;
  static const int LIEF_MACHO_MH_EXECUTE = 2;
  static const int LIEF_MACHO_MH_FVMLIB = 3;
  static const int LIEF_MACHO_MH_CORE = 4;
  static const int LIEF_MACHO_MH_PRELOAD = 5;
  static const int LIEF_MACHO_MH_DYLIB = 6;
  static const int LIEF_MACHO_MH_DYLINKER = 7;
  static const int LIEF_MACHO_MH_BUNDLE = 8;
  static const int LIEF_MACHO_MH_DYLIB_STUB = 9;
  static const int LIEF_MACHO_MH_DSYM = 10;
  static const int LIEF_MACHO_MH_KEXT_BUNDLE = 11;
}

abstract class LIEF_MACHO_HEADER_FLAGS {
  static const int LIEF_MACHO_MH_NOUNDEFS = 1;
  static const int LIEF_MACHO_MH_INCRLINK = 2;
  static const int LIEF_MACHO_MH_DYLDLINK = 4;
  static const int LIEF_MACHO_MH_BINDATLOAD = 8;
  static const int LIEF_MACHO_MH_PREBOUND = 16;
  static const int LIEF_MACHO_MH_SPLIT_SEGS = 32;
  static const int LIEF_MACHO_MH_LAZY_INIT = 64;
  static const int LIEF_MACHO_MH_TWOLEVEL = 128;
  static const int LIEF_MACHO_MH_FORCE_FLAT = 256;
  static const int LIEF_MACHO_MH_NOMULTIDEFS = 512;
  static const int LIEF_MACHO_MH_NOFIXPREBINDING = 1024;
  static const int LIEF_MACHO_MH_PREBINDABLE = 2048;
  static const int LIEF_MACHO_MH_ALLMODSBOUND = 4096;
  static const int LIEF_MACHO_MH_SUBSECTIONS_VIA_SYMBOLS = 8192;
  static const int LIEF_MACHO_MH_CANONICAL = 16384;
  static const int LIEF_MACHO_MH_WEAK_DEFINES = 32768;
  static const int LIEF_MACHO_MH_BINDS_TO_WEAK = 65536;
  static const int LIEF_MACHO_MH_ALLOW_STACK_EXECUTION = 131072;
  static const int LIEF_MACHO_MH_ROOT_SAFE = 262144;
  static const int LIEF_MACHO_MH_SETUID_SAFE = 524288;
  static const int LIEF_MACHO_MH_NO_REEXPORTED_DYLIBS = 1048576;
  static const int LIEF_MACHO_MH_PIE = 2097152;
  static const int LIEF_MACHO_MH_DEAD_STRIPPABLE_DYLIB = 4194304;
  static const int LIEF_MACHO_MH_HAS_TLV_DESCRIPTORS = 8388608;
  static const int LIEF_MACHO_MH_NO_HEAP_EXECUTION = 16777216;
  static const int LIEF_MACHO_MH_APP_EXTENSION_SAFE = 33554432;
}

abstract class LIEF_MACHO_LOAD_COMMAND_TYPES {
  static const int LIEF_MACHO_LC_SEGMENT = 1;
  static const int LIEF_MACHO_LC_SYMTAB = 2;
  static const int LIEF_MACHO_LC_SYMSEG = 3;
  static const int LIEF_MACHO_LC_THREAD = 4;
  static const int LIEF_MACHO_LC_UNIXTHREAD = 5;
  static const int LIEF_MACHO_LC_LOADFVMLIB = 6;
  static const int LIEF_MACHO_LC_IDFVMLIB = 7;
  static const int LIEF_MACHO_LC_IDENT = 8;
  static const int LIEF_MACHO_LC_FVMFILE = 9;
  static const int LIEF_MACHO_LC_PREPAGE = 10;
  static const int LIEF_MACHO_LC_DYSYMTAB = 11;
  static const int LIEF_MACHO_LC_LOAD_DYLIB = 12;
  static const int LIEF_MACHO_LC_ID_DYLIB = 13;
  static const int LIEF_MACHO_LC_LOAD_DYLINKER = 14;
  static const int LIEF_MACHO_LC_ID_DYLINKER = 15;
  static const int LIEF_MACHO_LC_PREBOUND_DYLIB = 16;
  static const int LIEF_MACHO_LC_ROUTINES = 17;
  static const int LIEF_MACHO_LC_SUB_FRAMEWORK = 18;
  static const int LIEF_MACHO_LC_SUB_UMBRELLA = 19;
  static const int LIEF_MACHO_LC_SUB_CLIENT = 20;
  static const int LIEF_MACHO_LC_SUB_LIBRARY = 21;
  static const int LIEF_MACHO_LC_TWOLEVEL_HINTS = 22;
  static const int LIEF_MACHO_LC_PREBIND_CKSUM = 23;
  static const int LIEF_MACHO_LC_LOAD_WEAK_DYLIB = -2147483624;
  static const int LIEF_MACHO_LC_SEGMENT_64 = 25;
  static const int LIEF_MACHO_LC_ROUTINES_64 = 26;
  static const int LIEF_MACHO_LC_UUID = 27;
  static const int LIEF_MACHO_LC_RPATH = -2147483620;
  static const int LIEF_MACHO_LC_CODE_SIGNATURE = 29;
  static const int LIEF_MACHO_LC_SEGMENT_SPLIT_INFO = 30;
  static const int LIEF_MACHO_LC_REEXPORT_DYLIB = -2147483617;
  static const int LIEF_MACHO_LC_LAZY_LOAD_DYLIB = 32;
  static const int LIEF_MACHO_LC_ENCRYPTION_INFO = 33;
  static const int LIEF_MACHO_LC_DYLD_INFO = 34;
  static const int LIEF_MACHO_LC_DYLD_INFO_ONLY = -2147483614;
  static const int LIEF_MACHO_LC_LOAD_UPWARD_DYLIB = -2147483613;
  static const int LIEF_MACHO_LC_VERSION_MIN_MACOSX = 36;
  static const int LIEF_MACHO_LC_VERSION_MIN_IPHONEOS = 37;
  static const int LIEF_MACHO_LC_FUNCTION_STARTS = 38;
  static const int LIEF_MACHO_LC_DYLD_ENVIRONMENT = 39;
  static const int LIEF_MACHO_LC_MAIN = -2147483608;
  static const int LIEF_MACHO_LC_DATA_IN_CODE = 41;
  static const int LIEF_MACHO_LC_SOURCE_VERSION = 42;
  static const int LIEF_MACHO_LC_DYLIB_CODE_SIGN_DRS = 43;
  static const int LIEF_MACHO_LC_ENCRYPTION_INFO_64 = 44;
  static const int LIEF_MACHO_LC_LINKER_OPTION = 45;
  static const int LIEF_MACHO_LC_LINKER_OPTIMIZATION_HINT = 46;
  static const int LIEF_MACHO_LC_VERSION_MIN_TVOS = 47;
  static const int LIEF_MACHO_LC_VERSION_MIN_WATCHOS = 48;
  static const int LIEF_MACHO_LC_NOTE = 49;
  static const int LIEF_MACHO_LC_BUILD_VERSION = 50;
  static const int LIEF_MACHO_LC_DYLD_EXPORTS_TRIE = -2147483597;
  static const int LIEF_MACHO_LC_DYLD_CHAINED_FIXUPS = -2147483596;
  static const int LIEF_MACHO_LC_FILESET_ENTRY = -2147483595;
}

abstract class LIEF_MACHO_MACHO_SEGMENTS_FLAGS {
  static const int LIEF_MACHO_SG_HIGHVM = 1;
  static const int LIEF_MACHO_SG_FVMLIB = 2;
  static const int LIEF_MACHO_SG_NORELOC = 4;
  static const int LIEF_MACHO_SG_PROTECTED_VERSION_1 = 8;
}

abstract class LIEF_MACHO_SECTION_FLAGS_HELPER {
  static const int LIEF_MACHO_SECTION_TYPE_MASK = 255;
  static const int LIEF_MACHO_SECTION_FLAGS_MASK = -256;
  static const int LIEF_MACHO_SECTION_FLAGS_USR_MASK = -16777216;
  static const int LIEF_MACHO_SECTION_FLAGS_SYS_MASK = 16776960;
}

/// @brief These are the section type and attributes fields. A MachO section can
/// have only one Type, but can have any of the attributes specified.
abstract class LIEF_MACHO_MACHO_SECTION_TYPES {
  static const int LIEF_MACHO_S_REGULAR = 0;
  static const int LIEF_MACHO_S_ZEROFILL = 1;
  static const int LIEF_MACHO_S_CSTRING_LITERALS = 2;
  static const int LIEF_MACHO_S_4BYTE_LITERALS = 3;
  static const int LIEF_MACHO_S_8BYTE_LITERALS = 4;
  static const int LIEF_MACHO_S_LITERAL_POINTERS = 5;
  static const int LIEF_MACHO_S_NON_LAZY_SYMBOL_POINTERS = 6;
  static const int LIEF_MACHO_S_LAZY_SYMBOL_POINTERS = 7;
  static const int LIEF_MACHO_S_SYMBOL_STUBS = 8;
  static const int LIEF_MACHO_S_MOD_INIT_FUNC_POINTERS = 9;
  static const int LIEF_MACHO_S_MOD_TERM_FUNC_POINTERS = 10;
  static const int LIEF_MACHO_S_COALESCED = 11;
  static const int LIEF_MACHO_S_GB_ZEROFILL = 12;
  static const int LIEF_MACHO_S_INTERPOSING = 13;
  static const int LIEF_MACHO_S_16BYTE_LITERALS = 14;
  static const int LIEF_MACHO_S_DTRACE_DOF = 15;
  static const int LIEF_MACHO_S_LAZY_DYLIB_SYMBOL_POINTERS = 16;
  static const int LIEF_MACHO_S_THREAD_LOCAL_REGULAR = 17;
  static const int LIEF_MACHO_S_THREAD_LOCAL_ZEROFILL = 18;
  static const int LIEF_MACHO_S_THREAD_LOCAL_VARIABLES = 19;
  static const int LIEF_MACHO_S_THREAD_LOCAL_VARIABLE_POINTERS = 20;
  static const int LIEF_MACHO_S_THREAD_LOCAL_INIT_FUNCTION_POINTERS = 21;
  static const int LIEF_MACHO_LAST_KNOWN_SECTION_TYPE = 21;
}

abstract class LIEF_MACHO_MACHO_SECTION_FLAGS {
  static const int LIEF_MACHO_S_ATTR_PURE_INSTRUCTIONS = -2147483648;
  static const int LIEF_MACHO_S_ATTR_NO_TOC = 1073741824;
  static const int LIEF_MACHO_S_ATTR_STRIP_STATIC_SYMS = 536870912;
  static const int LIEF_MACHO_S_ATTR_NO_DEAD_STRIP = 268435456;
  static const int LIEF_MACHO_S_ATTR_LIVE_SUPPORT = 134217728;
  static const int LIEF_MACHO_S_ATTR_SELF_MODIFYING_CODE = 67108864;
  static const int LIEF_MACHO_S_ATTR_DEBUG = 33554432;
  static const int LIEF_MACHO_S_ATTR_SOME_INSTRUCTIONS = 1024;
  static const int LIEF_MACHO_S_ATTR_EXT_RELOC = 512;
  static const int LIEF_MACHO_S_ATTR_LOC_RELOC = 256;
  static const int LIEF_MACHO_INDIRECT_SYMBOL_LOCAL = -2147483648;
  static const int LIEF_MACHO_INDIRECT_SYMBOL_ABS = 1073741824;
}

abstract class LIEF_MACHO_DataRegionType {
  static const int LIEF_MACHO_DICE_KIND_DATA = 1;
  static const int LIEF_MACHO_DICE_KIND_JUMP_TABLE8 = 2;
  static const int LIEF_MACHO_DICE_KIND_JUMP_TABLE16 = 3;
  static const int LIEF_MACHO_DICE_KIND_JUMP_TABLE32 = 4;
  static const int LIEF_MACHO_DICE_KIND_ABS_JUMP_TABLE32 = 5;
}

abstract class LIEF_MACHO_REBASE_TYPES {
  static const int LIEF_MACHO_REBASE_TYPE_POINTER = 1;
  static const int LIEF_MACHO_REBASE_TYPE_TEXT_ABSOLUTE32 = 2;
  static const int LIEF_MACHO_REBASE_TYPE_TEXT_PCREL32 = 3;
  static const int LIEF_MACHO_REBASE_TYPE_THREADED = 102;
}

/// @brief Opcodes used by Dyld info to rebase a Mach-O image
abstract class LIEF_MACHO_REBASE_OPCODES {
  static const int LIEF_MACHO_REBASE_OPCODE_DONE = 0;
  static const int LIEF_MACHO_REBASE_OPCODE_SET_TYPE_IMM = 16;
  static const int LIEF_MACHO_REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 32;
  static const int LIEF_MACHO_REBASE_OPCODE_ADD_ADDR_ULEB = 48;
  static const int LIEF_MACHO_REBASE_OPCODE_ADD_ADDR_IMM_SCALED = 64;
  static const int LIEF_MACHO_REBASE_OPCODE_DO_REBASE_IMM_TIMES = 80;
  static const int LIEF_MACHO_REBASE_OPCODE_DO_REBASE_ULEB_TIMES = 96;
  static const int LIEF_MACHO_REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB = 112;
  static const int LIEF_MACHO_REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB =
      128;
}

/// Within the dyld_info_command there are
/// differents area of binding. These enums tag these areas.
abstract class LIEF_MACHO_BINDING_CLASS {
  static const int LIEF_MACHO_BIND_CLASS_WEAK = 1;
  static const int LIEF_MACHO_BIND_CLASS_LAZY = 2;
  static const int LIEF_MACHO_BIND_CLASS_STANDARD = 3;
  static const int LIEF_MACHO_BIND_CLASS_THREADED = 100;
}

abstract class LIEF_MACHO_BIND_TYPES {
  static const int LIEF_MACHO_BIND_TYPE_POINTER = 1;
  static const int LIEF_MACHO_BIND_TYPE_TEXT_ABSOLUTE32 = 2;
  static const int LIEF_MACHO_BIND_TYPE_TEXT_PCREL32 = 3;
}

abstract class LIEF_MACHO_BIND_SPECIAL_DYLIB {
  static const int LIEF_MACHO_BIND_SPECIAL_DYLIB_SELF = 0;
  static const int LIEF_MACHO_BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE = -1;
  static const int LIEF_MACHO_BIND_SPECIAL_DYLIB_FLAT_LOOKUP = -2;
}

/// Opcodes used by Dyld info to bind symbols
abstract class LIEF_MACHO_BIND_OPCODES {
  static const int LIEF_MACHO_BIND_OPCODE_DONE = 0;
  static const int LIEF_MACHO_BIND_OPCODE_SET_DYLIB_ORDINAL_IMM = 16;
  static const int LIEF_MACHO_BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB = 32;
  static const int LIEF_MACHO_BIND_OPCODE_SET_DYLIB_SPECIAL_IMM = 48;
  static const int LIEF_MACHO_BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM = 64;
  static const int LIEF_MACHO_BIND_OPCODE_SET_TYPE_IMM = 80;
  static const int LIEF_MACHO_BIND_OPCODE_SET_ADDEND_SLEB = 96;
  static const int LIEF_MACHO_BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 112;
  static const int LIEF_MACHO_BIND_OPCODE_ADD_ADDR_ULEB = 128;
  static const int LIEF_MACHO_BIND_OPCODE_DO_BIND = 144;
  static const int LIEF_MACHO_BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB = 160;
  static const int LIEF_MACHO_BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED = 176;
  static const int LIEF_MACHO_BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB =
      192;
  static const int LIEF_MACHO_BIND_OPCODE_THREADED = 208;
  static const int LIEF_MACHO_BIND_OPCODE_THREADED_APPLY = 209;
  static const int
      LIEF_MACHO_BIND_OPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB = 208;
}

abstract class LIEF_MACHO_BIND_SUBOPCODE_THREADED {
  static const int
      LIEF_MACHO_BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB = 0;
  static const int LIEF_MACHO_BIND_SUBOPCODE_THREADED_APPLY = 1;
}

abstract class LIEF_MACHO_EXPORT_SYMBOL_FLAGS {
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_KIND_MASK = 3;
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION = 4;
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_REEXPORT = 8;
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER = 16;
}

abstract class LIEF_MACHO_EXPORT_SYMBOL_KINDS {
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_KIND_REGULAR = 0;
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL = 1;
  static const int LIEF_MACHO_EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE = 2;
}

abstract class LIEF_MACHO_MACHO_SYMBOL_TYPES {
  static const int LIEF_MACHO_N_STAB = 224;
  static const int LIEF_MACHO_N_PEXT = 16;
  static const int LIEF_MACHO_N_TYPE = 14;
  static const int LIEF_MACHO_N_EXT = 1;
}

/// Constants for the "n_type & SYMBOL_TYPES::N_TYPE" in nlist. @see nlist
abstract class LIEF_MACHO_N_LIST_TYPES {
  static const int LIEF_MACHO_N_UNDF = 0;
  static const int LIEF_MACHO_N_ABS = 2;
  static const int LIEF_MACHO_N_SECT = 14;
  static const int LIEF_MACHO_N_PBUD = 12;
  static const int LIEF_MACHO_N_INDR = 10;
}

abstract class LIEF_MACHO_SectionOrdinal {
  static const int LIEF_MACHO_NO_SECT = 0;
  static const int LIEF_MACHO_MAX_SECT = 255;
}

abstract class LIEF_MACHO_SYMBOL_DESCRIPTIONS {
  static const int LIEF_MACHO_REFERENCE_TYPE = 7;
  static const int LIEF_MACHO_REFERENCE_FLAG_UNDEFINED_NON_LAZY = 0;
  static const int LIEF_MACHO_REFERENCE_FLAG_UNDEFINED_LAZY = 1;
  static const int LIEF_MACHO_REFERENCE_FLAG_DEFINED = 2;
  static const int LIEF_MACHO_REFERENCE_FLAG_PRIVATE_DEFINED = 3;
  static const int LIEF_MACHO_REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY = 4;
  static const int LIEF_MACHO_REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY = 5;
  static const int LIEF_MACHO_N_ARM_THUMB_DEF = 8;
  static const int LIEF_MACHO_REFERENCED_DYNAMICALLY = 16;
  static const int LIEF_MACHO_N_NO_DEAD_STRIP = 32;
  static const int LIEF_MACHO_N_WEAK_REF = 64;
  static const int LIEF_MACHO_N_WEAK_DEF = 128;
  static const int LIEF_MACHO_N_SYMBOL_RESOLVER = 256;
  static const int LIEF_MACHO_N_ALT_ENTRY = 512;
  static const int LIEF_MACHO_SELF_LIBRARY_ORDINAL = 0;
  static const int LIEF_MACHO_MAX_LIBRARY_ORDINAL = 253;
  static const int LIEF_MACHO_DYNAMIC_LOOKUP_ORDINAL = 254;
  static const int LIEF_MACHO_EXECUTABLE_ORDINAL = 255;
}

abstract class LIEF_MACHO_StabType {
  static const int LIEF_MACHO_N_GSYM = 32;
  static const int LIEF_MACHO_N_FNAME = 34;
  static const int LIEF_MACHO_N_FUN = 36;
  static const int LIEF_MACHO_N_STSYM = 38;
  static const int LIEF_MACHO_N_LCSYM = 40;
  static const int LIEF_MACHO_N_BNSYM = 46;
  static const int LIEF_MACHO_N_PC = 48;
  static const int LIEF_MACHO_N_AST = 50;
  static const int LIEF_MACHO_N_OPT = 60;
  static const int LIEF_MACHO_N_RSYM = 64;
  static const int LIEF_MACHO_N_SLINE = 68;
  static const int LIEF_MACHO_N_ENSYM = 78;
  static const int LIEF_MACHO_N_SSYM = 96;
  static const int LIEF_MACHO_N_SO = 100;
  static const int LIEF_MACHO_N_OSO = 102;
  static const int LIEF_MACHO_N_LSYM = 128;
  static const int LIEF_MACHO_N_BINCL = 130;
  static const int LIEF_MACHO_N_SOL = 132;
  static const int LIEF_MACHO_N_PARAMS = 134;
  static const int LIEF_MACHO_N_VERSION = 136;
  static const int LIEF_MACHO_N_OLEVEL = 138;
  static const int LIEF_MACHO_N_PSYM = 160;
  static const int LIEF_MACHO_N_EINCL = 162;
  static const int LIEF_MACHO_N_ENTRY = 164;
  static const int LIEF_MACHO_N_LBRAC = 192;
  static const int LIEF_MACHO_N_EXCL = 194;
  static const int LIEF_MACHO_N_RBRAC = 224;
  static const int LIEF_MACHO_N_BCOMM = 226;
  static const int LIEF_MACHO_N_ECOMM = 228;
  static const int LIEF_MACHO_N_ECOML = 232;
  static const int LIEF_MACHO_N_LENG = 254;
}

abstract class LIEF_MACHO_RELOCATION_ORIGINS {
  static const int LIEF_MACHO_ORIGIN_UNKNOWN = 0;
  static const int LIEF_MACHO_ORIGIN_DYLDINFO = 1;
  static const int LIEF_MACHO_ORIGIN_RELOC_TABLE = 2;
}

abstract class LIEF_MACHO_SYMBOL_ORIGINS {
  static const int LIEF_MACHO_SYM_ORIGIN_UNKNOWN = 0;
  static const int LIEF_MACHO_SYM_ORIGIN_DYLD_EXPORT = 1;
  static const int LIEF_MACHO_SYM_ORIGIN_DYLD_BIND = 2;
  static const int LIEF_MACHO_SYM_ORIGIN_LC_SYMTAB = 3;
}

abstract class LIEF_MACHO_X86_RELOCATION {
  static const int LIEF_MACHO_GENERIC_RELOC_VANILLA = 0;
  static const int LIEF_MACHO_GENERIC_RELOC_PAIR = 1;
  static const int LIEF_MACHO_GENERIC_RELOC_SECTDIFF = 2;
  static const int LIEF_MACHO_GENERIC_RELOC_PB_LA_PTR = 3;
  static const int LIEF_MACHO_GENERIC_RELOC_LOCAL_SECTDIFF = 4;
  static const int LIEF_MACHO_GENERIC_RELOC_TLV = 5;
}

abstract class LIEF_MACHO_X86_64_RELOCATION {
  static const int LIEF_MACHO_X86_64_RELOC_UNSIGNED = 0;
  static const int LIEF_MACHO_X86_64_RELOC_SIGNED = 1;
  static const int LIEF_MACHO_X86_64_RELOC_BRANCH = 2;
  static const int LIEF_MACHO_X86_64_RELOC_GOT_LOAD = 3;
  static const int LIEF_MACHO_X86_64_RELOC_GOT = 4;
  static const int LIEF_MACHO_X86_64_RELOC_SUBTRACTOR = 5;
  static const int LIEF_MACHO_X86_64_RELOC_SIGNED_1 = 6;
  static const int LIEF_MACHO_X86_64_RELOC_SIGNED_2 = 7;
  static const int LIEF_MACHO_X86_64_RELOC_SIGNED_4 = 8;
  static const int LIEF_MACHO_X86_64_RELOC_TLV = 9;
}

abstract class LIEF_MACHO_PPC_RELOCATION {
  static const int LIEF_MACHO_PPC_RELOC_VANILLA = 0;
  static const int LIEF_MACHO_PPC_RELOC_PAIR = 1;
  static const int LIEF_MACHO_PPC_RELOC_BR14 = 2;
  static const int LIEF_MACHO_PPC_RELOC_BR24 = 3;
  static const int LIEF_MACHO_PPC_RELOC_HI16 = 4;
  static const int LIEF_MACHO_PPC_RELOC_LO16 = 5;
  static const int LIEF_MACHO_PPC_RELOC_HA16 = 6;
  static const int LIEF_MACHO_PPC_RELOC_LO14 = 7;
  static const int LIEF_MACHO_PPC_RELOC_SECTDIFF = 8;
  static const int LIEF_MACHO_PPC_RELOC_PB_LA_PTR = 9;
  static const int LIEF_MACHO_PPC_RELOC_HI16_SECTDIFF = 10;
  static const int LIEF_MACHO_PPC_RELOC_LO16_SECTDIFF = 11;
  static const int LIEF_MACHO_PPC_RELOC_HA16_SECTDIFF = 12;
  static const int LIEF_MACHO_PPC_RELOC_JBSR = 13;
  static const int LIEF_MACHO_PPC_RELOC_LO14_SECTDIFF = 14;
  static const int LIEF_MACHO_PPC_RELOC_LOCAL_SECTDIFF = 15;
}

abstract class LIEF_MACHO_ARM_RELOCATION {
  static const int LIEF_MACHO_ARM_RELOC_VANILLA = 0;
  static const int LIEF_MACHO_ARM_RELOC_PAIR = 1;
  static const int LIEF_MACHO_ARM_RELOC_SECTDIFF = 2;
  static const int LIEF_MACHO_ARM_RELOC_LOCAL_SECTDIFF = 3;
  static const int LIEF_MACHO_ARM_RELOC_PB_LA_PTR = 4;
  static const int LIEF_MACHO_ARM_RELOC_BR24 = 5;
  static const int LIEF_MACHO_ARM_THUMB_RELOC_BR22 = 6;
  static const int LIEF_MACHO_ARM_THUMB_32BIT_BRANCH = 7;
  static const int LIEF_MACHO_ARM_RELOC_HALF = 8;
  static const int LIEF_MACHO_ARM_RELOC_HALF_SECTDIFF = 9;
}

abstract class LIEF_MACHO_ARM64_RELOCATION {
  static const int LIEF_MACHO_ARM64_RELOC_UNSIGNED = 0;
  static const int LIEF_MACHO_ARM64_RELOC_SUBTRACTOR = 1;
  static const int LIEF_MACHO_ARM64_RELOC_BRANCH26 = 2;
  static const int LIEF_MACHO_ARM64_RELOC_PAGE21 = 3;
  static const int LIEF_MACHO_ARM64_RELOC_PAGEOFF12 = 4;
  static const int LIEF_MACHO_ARM64_RELOC_GOT_LOAD_PAGE21 = 5;
  static const int LIEF_MACHO_ARM64_RELOC_GOT_LOAD_PAGEOFF12 = 6;
  static const int LIEF_MACHO_ARM64_RELOC_POINTER_TO_GOT = 7;
  static const int LIEF_MACHO_ARM64_RELOC_TLVP_LOAD_PAGE21 = 8;
  static const int LIEF_MACHO_ARM64_RELOC_TLVP_LOAD_PAGEOFF12 = 9;
  static const int LIEF_MACHO_ARM64_RELOC_ADDEND = 10;
}

/// Values for segment_command.initprot (From <mach/vm_prot.h>).
abstract class LIEF_MACHO_VM_PROTECTIONS {
  static const int LIEF_MACHO_VM_PROT_READ = 1;
  static const int LIEF_MACHO_VM_PROT_WRITE = 2;
  static const int LIEF_MACHO_VM_PROT_EXECUTE = 4;
}

/// Constants for the cputype field.
abstract class LIEF_MACHO_CPU_TYPES {
  static const int LIEF_MACHO_CPU_TYPE_ANY = -1;
  static const int LIEF_MACHO_CPU_TYPE_X86 = 7;
  static const int LIEF_MACHO_CPU_TYPE_I386 = 7;
  static const int LIEF_MACHO_CPU_TYPE_X86_64 = 16777223;
  static const int LIEF_MACHO_CPU_TYPE_MC98000 = 10;
  static const int LIEF_MACHO_CPU_TYPE_ARM = 12;
  static const int LIEF_MACHO_CPU_TYPE_ARM64 = 16777228;
  static const int LIEF_MACHO_CPU_TYPE_SPARC = 14;
  static const int LIEF_MACHO_CPU_TYPE_POWERPC = 18;
  static const int LIEF_MACHO_CPU_TYPE_POWERPC64 = 16777234;
}

/// Constants for the cpusubtype field.
abstract class LIEF_MACHO_CPU_SUBTYPES_X86 {
  static const int LIEF_MACHO_CPU_SUBTYPE_I386_ALL = 3;
  static const int LIEF_MACHO_CPU_SUBTYPE_386 = 3;
  static const int LIEF_MACHO_CPU_SUBTYPE_486 = 4;
  static const int LIEF_MACHO_CPU_SUBTYPE_486SX = 132;
  static const int LIEF_MACHO_CPU_SUBTYPE_586 = 5;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENT = 5;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTPRO = 22;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTII_M3 = 54;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTII_M5 = 86;
  static const int LIEF_MACHO_CPU_SUBTYPE_CELERON = 103;
  static const int LIEF_MACHO_CPU_SUBTYPE_CELERON_MOBILE = 119;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_3 = 8;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_3_M = 24;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_3_XEON = 40;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_M = 9;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_4 = 10;
  static const int LIEF_MACHO_CPU_SUBTYPE_PENTIUM_4_M = 26;
  static const int LIEF_MACHO_CPU_SUBTYPE_ITANIUM = 11;
  static const int LIEF_MACHO_CPU_SUBTYPE_ITANIUM_2 = 27;
  static const int LIEF_MACHO_CPU_SUBTYPE_XEON = 12;
  static const int LIEF_MACHO_CPU_SUBTYPE_XEON_MP = 28;
  static const int LIEF_MACHO_CPU_SUBTYPE_X86_ALL = 3;
  static const int LIEF_MACHO_CPU_SUBTYPE_X86_64_ALL = 3;
  static const int LIEF_MACHO_CPU_SUBTYPE_X86_ARCH1 = 4;
  static const int LIEF_MACHO_CPU_SUBTYPE_X86_64_H = 8;
}

abstract class LIEF_MACHO_CPU_SUBTYPES_ARM {
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_ALL = 0;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V4T = 5;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V6 = 6;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V5 = 7;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V5TEJ = 7;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_XSCALE = 8;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V7 = 9;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V7S = 11;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V7K = 12;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V6M = 14;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V7M = 15;
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM_V7EM = 16;
}

abstract class LIEF_MACHO_CPU_SUBTYPES_ARM64 {
  static const int LIEF_MACHO_CPU_SUBTYPE_ARM64_ALL = 0;
}

abstract class LIEF_MACHO_CPU_SUBTYPES_SPARC {
  static const int LIEF_MACHO_CPU_SUBTYPE_SPARC_ALL = 0;
}

abstract class LIEF_MACHO_CPU_SUBTYPES_POWERPC {
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_ALL = 0;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_601 = 1;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_602 = 2;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_603 = 3;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_603e = 4;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_603ev = 5;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_604 = 6;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_604e = 7;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_620 = 8;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_750 = 9;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_7400 = 10;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_7450 = 11;
  static const int LIEF_MACHO_CPU_SUBTYPE_POWERPC_970 = 100;
  static const int LIEF_MACHO_CPU_SUBTYPE_MC980000_ALL = 0;
  static const int LIEF_MACHO_CPU_SUBTYPE_MC98601 = 1;
}

final class Macho_Header_t extends ffi.Struct {
  @ffi.Uint32()
  external int magic;

  @ffi.Int32()
  external int cpu_type;

  @ffi.Uint32()
  external int cpu_subtype;

  @ffi.Int32()
  external int file_type;

  @ffi.Uint32()
  external int nb_cmds;

  @ffi.Uint32()
  external int sizeof_cmds;

  @ffi.Uint32()
  external int flags;

  @ffi.Uint32()
  external int reserved;
}

final class Macho_Command_t extends ffi.Struct {
  @ffi.Int32()
  external int command;

  @ffi.Uint32()
  external int size;

  external ffi.Pointer<ffi.Uint8> data;

  @ffi.Uint32()
  external int offset;
}

final class Macho_Symbol_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint8()
  external int type;

  @ffi.Uint8()
  external int numberof_sections;

  @ffi.Uint16()
  external int description;

  @ffi.Uint64()
  external int value;
}

final class Macho_Section_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint32()
  external int alignment;

  @ffi.Uint32()
  external int relocation_offset;

  @ffi.Uint32()
  external int numberof_relocations;

  @ffi.Uint32()
  external int flags;

  @ffi.Int32()
  external int type;

  @ffi.Uint32()
  external int reserved1;

  @ffi.Uint32()
  external int reserved2;

  @ffi.Uint32()
  external int reserved3;

  @ffi.Uint64()
  external int virtual_address;

  @ffi.Uint64()
  external int offset;

  @ffi.Uint64()
  external int size;

  external ffi.Pointer<ffi.Uint8> content;

  @ffi.Double()
  external double entropy;
}

final class Macho_Segment_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint64()
  external int virtual_address;

  @ffi.Uint64()
  external int virtual_size;

  @ffi.Uint64()
  external int file_size;

  @ffi.Uint64()
  external int file_offset;

  @ffi.Uint32()
  external int max_protection;

  @ffi.Uint32()
  external int init_protection;

  @ffi.Uint32()
  external int numberof_sections;

  @ffi.Uint32()
  external int flags;

  external ffi.Pointer<ffi.Uint8> content;

  @ffi.Uint64()
  external int size;

  external ffi.Pointer<ffi.Pointer<Macho_Section_t>> sections;
}

/// @brief LIEF::MachO::Binary C Handler
final class Macho_Binary_t extends ffi.Struct {
  external ffi.Pointer<ffi.Void> handler;

  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint64()
  external int imagebase;

  external Macho_Header_t header;

  external ffi.Pointer<ffi.Pointer<Macho_Command_t>> commands;

  external ffi.Pointer<ffi.Pointer<Macho_Symbol_t>> symbols;

  external ffi.Pointer<ffi.Pointer<Macho_Section_t>> sections;

  external ffi.Pointer<ffi.Pointer<Macho_Segment_t>> segments;
}

typedef errno_t = ffi.Int;
typedef Darterrno_t = int;

abstract class LIEF_PE_PE_TYPES {
  static const int LIEF_PE_PE32 = 267;
  static const int LIEF_PE_PE32_PLUS = 523;
}

abstract class LIEF_PE_MACHINE_TYPES {
  static const int LIEF_PE_MT_Invalid = 65535;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_UNKNOWN = 0;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_AM33 = 467;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_AMD64 = 34404;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_ARM = 448;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_ARMNT = 452;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_ARM64 = 43620;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_EBC = 3772;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_I386 = 332;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_IA64 = 512;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_M32R = 36929;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_MIPS16 = 614;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_MIPSFPU = 870;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_MIPSFPU16 = 1126;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_POWERPC = 496;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_POWERPCFP = 497;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_R4000 = 358;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_RISCV32 = 20530;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_RISCV64 = 20580;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_RISCV128 = 20776;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_SH3 = 418;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_SH3DSP = 419;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_SH4 = 422;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_SH5 = 424;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_THUMB = 450;
  static const int LIEF_PE_IMAGE_FILE_MACHINE_WCEMIPSV2 = 361;
}

abstract class LIEF_PE_SYMBOL_SECTION_NUMBER {
  static const int LIEF_PE_IMAGE_SYM_DEBUG = -2;
  static const int LIEF_PE_IMAGE_SYM_ABSOLUTE = -1;
  static const int LIEF_PE_IMAGE_SYM_UNDEFINED = 0;
}

abstract class LIEF_PE_HEADER_CHARACTERISTICS {
  static const int LIEF_PE_IMAGE_FILE_INVALID = 0;
  static const int LIEF_PE_IMAGE_FILE_RELOCS_STRIPPED = 1;
  static const int LIEF_PE_IMAGE_FILE_EXECUTABLE_IMAGE = 2;
  static const int LIEF_PE_IMAGE_FILE_LINE_NUMS_STRIPPED = 4;
  static const int LIEF_PE_IMAGE_FILE_LOCAL_SYMS_STRIPPED = 8;
  static const int LIEF_PE_IMAGE_FILE_AGGRESSIVE_WS_TRIM = 16;
  static const int LIEF_PE_IMAGE_FILE_LARGE_ADDRESS_AWARE = 32;
  static const int LIEF_PE_IMAGE_FILE_BYTES_REVERSED_LO = 128;
  static const int LIEF_PE_IMAGE_FILE_32BIT_MACHINE = 256;
  static const int LIEF_PE_IMAGE_FILE_DEBUG_STRIPPED = 512;
  static const int LIEF_PE_IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 1024;
  static const int LIEF_PE_IMAGE_FILE_NET_RUN_FROM_SWAP = 2048;
  static const int LIEF_PE_IMAGE_FILE_SYSTEM = 4096;
  static const int LIEF_PE_IMAGE_FILE_DLL = 8192;
  static const int LIEF_PE_IMAGE_FILE_UP_SYSTEM_ONLY = 16384;
  static const int LIEF_PE_IMAGE_FILE_BYTES_REVERSED_HI = 32768;
}

/// Storage class tells where and what the symbol represents
abstract class LIEF_PE_SYMBOL_STORAGE_CLASS {
  static const int LIEF_PE_IMAGE_SYM_CLASS_INVALID = 255;
  static const int LIEF_PE_IMAGE_SYM_CLASS_END_OF_FUNCTION = -1;
  static const int LIEF_PE_IMAGE_SYM_CLASS_NULL = 0;
  static const int LIEF_PE_IMAGE_SYM_CLASS_AUTOMATIC = 1;
  static const int LIEF_PE_IMAGE_SYM_CLASS_EXTERNAL = 2;
  static const int LIEF_PE_IMAGE_SYM_CLASS_STATIC = 3;
  static const int LIEF_PE_IMAGE_SYM_CLASS_REGISTER = 4;
  static const int LIEF_PE_IMAGE_SYM_CLASS_EXTERNAL_DEF = 5;
  static const int LIEF_PE_IMAGE_SYM_CLASS_LABEL = 6;
  static const int LIEF_PE_IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7;
  static const int LIEF_PE_IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8;
  static const int LIEF_PE_IMAGE_SYM_CLASS_ARGUMENT = 9;
  static const int LIEF_PE_IMAGE_SYM_CLASS_STRUCT_TAG = 10;
  static const int LIEF_PE_IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11;
  static const int LIEF_PE_IMAGE_SYM_CLASS_UNION_TAG = 12;
  static const int LIEF_PE_IMAGE_SYM_CLASS_TYPE_DEFINITION = 13;
  static const int LIEF_PE_IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14;
  static const int LIEF_PE_IMAGE_SYM_CLASS_ENUM_TAG = 15;
  static const int LIEF_PE_IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16;
  static const int LIEF_PE_IMAGE_SYM_CLASS_REGISTER_PARAM = 17;
  static const int LIEF_PE_IMAGE_SYM_CLASS_BIT_FIELD = 18;
  static const int LIEF_PE_IMAGE_SYM_CLASS_BLOCK = 100;
  static const int LIEF_PE_IMAGE_SYM_CLASS_FUNCTION = 101;
  static const int LIEF_PE_IMAGE_SYM_CLASS_END_OF_STRUCT = 102;
  static const int LIEF_PE_IMAGE_SYM_CLASS_FILE = 103;
  static const int LIEF_PE_IMAGE_SYM_CLASS_SECTION = 104;
  static const int LIEF_PE_IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105;
  static const int LIEF_PE_IMAGE_SYM_CLASS_CLR_TOKEN = 107;
}

abstract class LIEF_PE_SYMBOL_BASE_TYPES {
  static const int LIEF_PE_IMAGE_SYM_TYPE_NULL = 0;
  static const int LIEF_PE_IMAGE_SYM_TYPE_VOID = 1;
  static const int LIEF_PE_IMAGE_SYM_TYPE_CHAR = 2;
  static const int LIEF_PE_IMAGE_SYM_TYPE_SHORT = 3;
  static const int LIEF_PE_IMAGE_SYM_TYPE_INT = 4;
  static const int LIEF_PE_IMAGE_SYM_TYPE_LONG = 5;
  static const int LIEF_PE_IMAGE_SYM_TYPE_FLOAT = 6;
  static const int LIEF_PE_IMAGE_SYM_TYPE_DOUBLE = 7;
  static const int LIEF_PE_IMAGE_SYM_TYPE_STRUCT = 8;
  static const int LIEF_PE_IMAGE_SYM_TYPE_UNION = 9;
  static const int LIEF_PE_IMAGE_SYM_TYPE_ENUM = 10;
  static const int LIEF_PE_IMAGE_SYM_TYPE_MOE = 11;
  static const int LIEF_PE_IMAGE_SYM_TYPE_BYTE = 12;
  static const int LIEF_PE_IMAGE_SYM_TYPE_WORD = 13;
  static const int LIEF_PE_IMAGE_SYM_TYPE_UINT = 14;
  static const int LIEF_PE_IMAGE_SYM_TYPE_DWORD = 15;
}

abstract class LIEF_PE_SYMBOL_COMPLEX_TYPES {
  static const int LIEF_PE_IMAGE_SYM_DTYPE_NULL = 0;
  static const int LIEF_PE_IMAGE_SYM_DTYPE_POINTER = 1;
  static const int LIEF_PE_IMAGE_SYM_DTYPE_FUNCTION = 2;
  static const int LIEF_PE_IMAGE_SYM_DTYPE_ARRAY = 3;
  static const int LIEF_PE_SCT_COMPLEX_TYPE_SHIFT = 4;
}

abstract class LIEF_PE_AuxSymbolType {
  static const int LIEF_PE_IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1;
}

abstract class LIEF_PE_RELOCATIONS_BASE_TYPES {
  static const int LIEF_PE_IMAGE_REL_BASED_ABSOLUTE = 0;
  static const int LIEF_PE_IMAGE_REL_BASED_HIGH = 1;
  static const int LIEF_PE_IMAGE_REL_BASED_LOW = 2;
  static const int LIEF_PE_IMAGE_REL_BASED_HIGHLOW = 3;
  static const int LIEF_PE_IMAGE_REL_BASED_HIGHADJ = 4;
  static const int LIEF_PE_IMAGE_REL_BASED_MIPS_JMPADDR = 5;
  static const int LIEF_PE_IMAGE_REL_BASED_ARM_MOV32A = 5;
  static const int LIEF_PE_IMAGE_REL_BASED_ARM_MOV32 = 5;
  static const int LIEF_PE_IMAGE_REL_BASED_RISCV_HI20 = 5;
  static const int LIEF_PE_IMAGE_REL_BASED_SECTION = 6;
  static const int LIEF_PE_IMAGE_REL_BASED_REL = 7;
  static const int LIEF_PE_IMAGE_REL_BASED_ARM_MOV32T = 7;
  static const int LIEF_PE_IMAGE_REL_BASED_THUMB_MOV32 = 7;
  static const int LIEF_PE_IMAGE_REL_BASED_RISCV_LOW12I = 7;
  static const int LIEF_PE_IMAGE_REL_BASED_RISCV_LOW12S = 8;
  static const int LIEF_PE_IMAGE_REL_BASED_MIPS_JMPADDR16 = 9;
  static const int LIEF_PE_IMAGE_REL_BASED_IA64_IMM64 = 9;
  static const int LIEF_PE_IMAGE_REL_BASED_DIR64 = 10;
  static const int LIEF_PE_IMAGE_REL_BASED_HIGH3ADJ = 11;
}

abstract class LIEF_PE_RELOCATIONS_I386 {
  static const int LIEF_PE_IMAGE_REL_I386_ABSOLUTE = 0;
  static const int LIEF_PE_IMAGE_REL_I386_DIR16 = 1;
  static const int LIEF_PE_IMAGE_REL_I386_REL16 = 2;
  static const int LIEF_PE_IMAGE_REL_I386_DIR32 = 6;
  static const int LIEF_PE_IMAGE_REL_I386_DIR32NB = 7;
  static const int LIEF_PE_IMAGE_REL_I386_SEG12 = 9;
  static const int LIEF_PE_IMAGE_REL_I386_SECTION = 10;
  static const int LIEF_PE_IMAGE_REL_I386_SECREL = 11;
  static const int LIEF_PE_IMAGE_REL_I386_TOKEN = 12;
  static const int LIEF_PE_IMAGE_REL_I386_SECREL7 = 13;
  static const int LIEF_PE_IMAGE_REL_I386_REL32 = 20;
}

abstract class LIEF_PE_RELOCATIONS_AMD64 {
  static const int LIEF_PE_IMAGE_REL_AMD64_ABSOLUTE = 0;
  static const int LIEF_PE_IMAGE_REL_AMD64_ADDR64 = 1;
  static const int LIEF_PE_IMAGE_REL_AMD64_ADDR32 = 2;
  static const int LIEF_PE_IMAGE_REL_AMD64_ADDR32NB = 3;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32 = 4;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32_1 = 5;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32_2 = 6;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32_3 = 7;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32_4 = 8;
  static const int LIEF_PE_IMAGE_REL_AMD64_REL32_5 = 9;
  static const int LIEF_PE_IMAGE_REL_AMD64_SECTION = 10;
  static const int LIEF_PE_IMAGE_REL_AMD64_SECREL = 11;
  static const int LIEF_PE_IMAGE_REL_AMD64_SECREL7 = 12;
  static const int LIEF_PE_IMAGE_REL_AMD64_TOKEN = 13;
  static const int LIEF_PE_IMAGE_REL_AMD64_SREL32 = 14;
  static const int LIEF_PE_IMAGE_REL_AMD64_PAIR = 15;
  static const int LIEF_PE_IMAGE_REL_AMD64_SSPAN32 = 16;
}

abstract class LIEF_PE_RELOCATIONS_ARM {
  static const int LIEF_PE_IMAGE_REL_ARM_ABSOLUTE = 0;
  static const int LIEF_PE_IMAGE_REL_ARM_ADDR32 = 1;
  static const int LIEF_PE_IMAGE_REL_ARM_ADDR32NB = 2;
  static const int LIEF_PE_IMAGE_REL_ARM_BRANCH24 = 3;
  static const int LIEF_PE_IMAGE_REL_ARM_BRANCH11 = 4;
  static const int LIEF_PE_IMAGE_REL_ARM_TOKEN = 5;
  static const int LIEF_PE_IMAGE_REL_ARM_BLX24 = 8;
  static const int LIEF_PE_IMAGE_REL_ARM_BLX11 = 9;
  static const int LIEF_PE_IMAGE_REL_ARM_SECTION = 14;
  static const int LIEF_PE_IMAGE_REL_ARM_SECREL = 15;
  static const int LIEF_PE_IMAGE_REL_ARM_MOV32A = 16;
  static const int LIEF_PE_IMAGE_REL_ARM_MOV32T = 17;
  static const int LIEF_PE_IMAGE_REL_ARM_BRANCH20T = 18;
  static const int LIEF_PE_IMAGE_REL_ARM_BRANCH24T = 20;
  static const int LIEF_PE_IMAGE_REL_ARM_BLX23T = 21;
}

/// These are not documented in the spec, but are located in WinNT.h.
abstract class LIEF_PE_WeakExternalCharacteristics {
  static const int LIEF_PE_IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1;
  static const int LIEF_PE_IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2;
  static const int LIEF_PE_IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3;
}

abstract class LIEF_PE_DATA_DIRECTORY {
  static const int LIEF_PE_EXPORT_TABLE = 0;
  static const int LIEF_PE_IMPORT_TABLE = 1;
  static const int LIEF_PE_RESOURCE_TABLE = 2;
  static const int LIEF_PE_EXCEPTION_TABLE = 3;
  static const int LIEF_PE_CERTIFICATE_TABLE = 4;
  static const int LIEF_PE_BASE_RELOCATION_TABLE = 5;
  static const int LIEF_PE_DEBUG = 6;
  static const int LIEF_PE_ARCHITECTURE = 7;
  static const int LIEF_PE_GLOBAL_PTR = 8;
  static const int LIEF_PE_TLS_TABLE = 9;
  static const int LIEF_PE_LOAD_CONFIG_TABLE = 10;
  static const int LIEF_PE_BOUND_IMPORT = 11;
  static const int LIEF_PE_IAT = 12;
  static const int LIEF_PE_DELAY_IMPORT_DESCRIPTOR = 13;
  static const int LIEF_PE_CLR_RUNTIME_HEADER = 14;
  static const int LIEF_PE_RESERVED = 15;
  static const int LIEF_PE_NUM_DATA_DIRECTORIES = 16;
}

abstract class LIEF_PE_SUBSYSTEM {
  static const int LIEF_PE_IMAGE_SUBSYSTEM_UNKNOWN = 0;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_NATIVE = 1;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_WINDOWS_GUI = 2;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_WINDOWS_CUI = 3;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_OS2_CUI = 5;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_POSIX_CUI = 7;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_EFI_APPLICATION = 10;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_EFI_ROM = 13;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_XBOX = 14;
  static const int LIEF_PE_IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16;
}

abstract class LIEF_PE_DLL_CHARACTERISTICS {
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 32;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE = 64;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY = 128;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_NX_COMPAT = 256;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_NO_ISOLATION = 512;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_NO_SEH = 1024;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_NO_BIND = 2048;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_APPCONTAINER = 4096;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_WDM_DRIVER = 8192;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_GUARD_CF = 16384;
  static const int LIEF_PE_IMAGE_DLL_CHARACTERISTICS_TERMINAL_SERVER_AWARE =
      32768;
}

abstract class LIEF_PE_DEBUG_TYPES {
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_UNKNOWN = 0;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_COFF = 1;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_CODEVIEW = 2;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_FPO = 3;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_MISC = 4;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_EXCEPTION = 5;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_FIXUP = 6;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_BORLAND = 9;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_RESERVED10 = 10;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_CLSID = 11;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_VC_FEATURE = 12;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_POGO = 13;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_ILTCG = 14;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_MPX = 15;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_REPRO = 16;
  static const int LIEF_PE_IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS = 20;
}

/// Code view signatures
/// @see: http://llvm.org/doxygen/CVDebugRecord_8h_source.html
abstract class LIEF_PE_CODE_VIEW_SIGNATURES {
  static const int LIEF_PE_CVS_UNKNOWN = 0;
  static const int LIEF_PE_CVS_PDB_70 = 1396986706;
  static const int LIEF_PE_CVS_PDB_20 = 808534606;
  static const int LIEF_PE_CVS_CV_50 = 825311822;
  static const int LIEF_PE_CVS_CV_41 = 959464014;
}

abstract class LIEF_PE_POGO_SIGNATURES {
  static const int LIEF_PE_POGO_UNKNOWN = 0;
  static const int LIEF_PE_POGO_LCTG = 1280590663;
  static const int LIEF_PE_POGO_PGI = 1346849024;
}

abstract class LIEF_PE_ImportType {
  static const int LIEF_PE_IMPORT_CODE = 0;
  static const int LIEF_PE_IMPORT_DATA = 1;
  static const int LIEF_PE_IMPORT_CONST = 2;
}

abstract class LIEF_PE_ImportNameType {
  static const int LIEF_PE_IMPORT_ORDINAL = 0;
  static const int LIEF_PE_IMPORT_NAME = 1;
  static const int LIEF_PE_IMPORT_NAME_NOPREFIX = 2;
  static const int LIEF_PE_IMPORT_NAME_UNDECORATE = 3;
}

abstract class LIEF_PE_CodeViewIdentifiers {
  static const int LIEF_PE_DEBUG_LINE_TABLES_HAVE_COLUMN_RECORDS = 1;
  static const int LIEF_PE_DEBUG_SECTION_MAGIC = 4;
  static const int LIEF_PE_DEBUG_SYMBOL_SUBSECTION = 241;
  static const int LIEF_PE_DEBUG_LINE_TABLE_SUBSECTION = 242;
  static const int LIEF_PE_DEBUG_STRING_TABLE_SUBSECTION = 243;
  static const int LIEF_PE_DEBUG_INDEX_SUBSECTION = 244;
  static const int LIEF_PE_DEBUG_SYMBOL_TYPE_PROC_START = 4423;
  static const int LIEF_PE_DEBUG_SYMBOL_TYPE_PROC_END = 4431;
}

/// From https://docs.microsoft.com/en-us/windows/win32/menurc/resource-types
abstract class LIEF_PE_RESOURCE_TYPES {
  static const int LIEF_PE_CURSOR = 1;
  static const int LIEF_PE_BITMAP = 2;
  static const int LIEF_PE_ICON = 3;
  static const int LIEF_PE_MENU = 4;
  static const int LIEF_PE_DIALOG = 5;
  static const int LIEF_PE_STRING = 6;
  static const int LIEF_PE_FONTDIR = 7;
  static const int LIEF_PE_FONT = 8;
  static const int LIEF_PE_ACCELERATOR = 9;
  static const int LIEF_PE_RCDATA = 10;
  static const int LIEF_PE_MESSAGETABLE = 11;
  static const int LIEF_PE_GROUP_CURSOR = 12;
  static const int LIEF_PE_GROUP_ICON = 14;
  static const int LIEF_PE_VERSION = 16;
  static const int LIEF_PE_DLGINCLUDE = 17;
  static const int LIEF_PE_PLUGPLAY = 19;
  static const int LIEF_PE_VXD = 20;
  static const int LIEF_PE_ANICURSOR = 21;
  static const int LIEF_PE_ANIICON = 22;
  static const int LIEF_PE_HTML = 23;
  static const int LIEF_PE_MANIFEST = 24;
}

abstract class LIEF_PE_RESOURCE_LANGS {
  static const int LIEF_PE_LANG_NEUTRAL = 0;
  static const int LIEF_PE_LANG_INVARIANT = 127;
  static const int LIEF_PE_LANG_AFRIKAANS = 54;
  static const int LIEF_PE_LANG_ALBANIAN = 28;
  static const int LIEF_PE_LANG_ARABIC = 1;
  static const int LIEF_PE_LANG_ARMENIAN = 43;
  static const int LIEF_PE_LANG_ASSAMESE = 77;
  static const int LIEF_PE_LANG_AZERI = 44;
  static const int LIEF_PE_LANG_BASQUE = 45;
  static const int LIEF_PE_LANG_BELARUSIAN = 35;
  static const int LIEF_PE_LANG_BANGLA = 69;
  static const int LIEF_PE_LANG_BULGARIAN = 2;
  static const int LIEF_PE_LANG_CATALAN = 3;
  static const int LIEF_PE_LANG_CHINESE = 4;
  static const int LIEF_PE_LANG_CROATIAN = 26;
  static const int LIEF_PE_LANG_BOSNIAN = 26;
  static const int LIEF_PE_LANG_CZECH = 5;
  static const int LIEF_PE_LANG_DANISH = 6;
  static const int LIEF_PE_LANG_DIVEHI = 101;
  static const int LIEF_PE_LANG_DUTCH = 19;
  static const int LIEF_PE_LANG_ENGLISH = 9;
  static const int LIEF_PE_LANG_ESTONIAN = 37;
  static const int LIEF_PE_LANG_FAEROESE = 56;
  static const int LIEF_PE_LANG_FARSI = 41;
  static const int LIEF_PE_LANG_FINNISH = 11;
  static const int LIEF_PE_LANG_FRENCH = 12;
  static const int LIEF_PE_LANG_GALICIAN = 86;
  static const int LIEF_PE_LANG_GEORGIAN = 55;
  static const int LIEF_PE_LANG_GERMAN = 7;
  static const int LIEF_PE_LANG_GREEK = 8;
  static const int LIEF_PE_LANG_GUJARATI = 71;
  static const int LIEF_PE_LANG_HEBREW = 13;
  static const int LIEF_PE_LANG_HINDI = 57;
  static const int LIEF_PE_LANG_HUNGARIAN = 14;
  static const int LIEF_PE_LANG_ICELANDIC = 15;
  static const int LIEF_PE_LANG_INDONESIAN = 33;
  static const int LIEF_PE_LANG_ITALIAN = 16;
  static const int LIEF_PE_LANG_JAPANESE = 17;
  static const int LIEF_PE_LANG_KANNADA = 75;
  static const int LIEF_PE_LANG_KASHMIRI = 96;
  static const int LIEF_PE_LANG_KAZAK = 63;
  static const int LIEF_PE_LANG_KONKANI = 87;
  static const int LIEF_PE_LANG_KOREAN = 18;
  static const int LIEF_PE_LANG_KYRGYZ = 64;
  static const int LIEF_PE_LANG_LATVIAN = 38;
  static const int LIEF_PE_LANG_LITHUANIAN = 39;
  static const int LIEF_PE_LANG_MACEDONIAN = 47;
  static const int LIEF_PE_LANG_MALAY = 62;
  static const int LIEF_PE_LANG_MALAYALAM = 76;
  static const int LIEF_PE_LANG_MANIPURI = 88;
  static const int LIEF_PE_LANG_MARATHI = 78;
  static const int LIEF_PE_LANG_MONGOLIAN = 80;
  static const int LIEF_PE_LANG_NEPALI = 97;
  static const int LIEF_PE_LANG_NORWEGIAN = 20;
  static const int LIEF_PE_LANG_ORIYA = 72;
  static const int LIEF_PE_LANG_POLISH = 21;
  static const int LIEF_PE_LANG_PORTUGUESE = 22;
  static const int LIEF_PE_LANG_PUNJABI = 70;
  static const int LIEF_PE_LANG_ROMANIAN = 24;
  static const int LIEF_PE_LANG_RUSSIAN = 25;
  static const int LIEF_PE_LANG_SANSKRIT = 79;
  static const int LIEF_PE_LANG_SERBIAN = 26;
  static const int LIEF_PE_LANG_SINDHI = 89;
  static const int LIEF_PE_LANG_SLOVAK = 27;
  static const int LIEF_PE_LANG_SLOVENIAN = 36;
  static const int LIEF_PE_LANG_SPANISH = 10;
  static const int LIEF_PE_LANG_SWAHILI = 65;
  static const int LIEF_PE_LANG_SWEDISH = 29;
  static const int LIEF_PE_LANG_SYRIAC = 90;
  static const int LIEF_PE_LANG_TAMIL = 73;
  static const int LIEF_PE_LANG_TATAR = 68;
  static const int LIEF_PE_LANG_TELUGU = 74;
  static const int LIEF_PE_LANG_THAI = 30;
  static const int LIEF_PE_LANG_TURKISH = 31;
  static const int LIEF_PE_LANG_UKRAINIAN = 34;
  static const int LIEF_PE_LANG_URDU = 32;
  static const int LIEF_PE_LANG_UZBEK = 67;
  static const int LIEF_PE_LANG_VIETNAMESE = 42;
  static const int LIEF_PE_LANG_GAELIC = 60;
  static const int LIEF_PE_LANG_MALTESE = 58;
  static const int LIEF_PE_LANG_MAORI = 40;
  static const int LIEF_PE_LANG_RHAETO_ROMANCE = 23;
  static const int LIEF_PE_LANG_SAMI = 59;
  static const int LIEF_PE_LANG_SORBIAN = 46;
  static const int LIEF_PE_LANG_SUTU = 48;
  static const int LIEF_PE_LANG_TSONGA = 49;
  static const int LIEF_PE_LANG_TSWANA = 50;
  static const int LIEF_PE_LANG_VENDA = 51;
  static const int LIEF_PE_LANG_XHOSA = 52;
  static const int LIEF_PE_LANG_ZULU = 53;
  static const int LIEF_PE_LANG_ESPERANTO = 143;
  static const int LIEF_PE_LANG_WALON = 144;
  static const int LIEF_PE_LANG_CORNISH = 145;
  static const int LIEF_PE_LANG_WELSH = 146;
  static const int LIEF_PE_LANG_BRETON = 147;
  static const int LIEF_PE_LANG_INUKTITUT = 93;
  static const int LIEF_PE_LANG_IRISH = 60;
  static const int LIEF_PE_LANG_LOWER_SORBIAN = 46;
  static const int LIEF_PE_LANG_PULAR = 103;
  static const int LIEF_PE_LANG_QUECHUA = 107;
  static const int LIEF_PE_LANG_TAMAZIGHT = 95;
  static const int LIEF_PE_LANG_TIGRINYA = 115;
  static const int LIEF_PE_LANG_VALENCIAN = 3;
}

abstract class LIEF_PE_RESOURCE_SUBLANGS {
  static const int LIEF_PE_SUBLANG_AFRIKAANS_SOUTH_AFRICA = 0;
  static const int LIEF_PE_SUBLANG_ALBANIAN_ALBANIA = 1;
  static const int LIEF_PE_SUBLANG_ALSATIAN_FRANCE = 2;
  static const int LIEF_PE_SUBLANG_AMHARIC_ETHIOPIA = 3;
  static const int LIEF_PE_SUBLANG_ARABIC_ALGERIA = 4;
  static const int LIEF_PE_SUBLANG_ARABIC_BAHRAIN = 5;
  static const int LIEF_PE_SUBLANG_ARABIC_EGYPT = 6;
  static const int LIEF_PE_SUBLANG_ARABIC_IRAQ = 7;
  static const int LIEF_PE_SUBLANG_ARABIC_JORDAN = 8;
  static const int LIEF_PE_SUBLANG_ARABIC_KUWAIT = 9;
  static const int LIEF_PE_SUBLANG_ARABIC_LEBANON = 10;
  static const int LIEF_PE_SUBLANG_ARABIC_LIBYA = 11;
  static const int LIEF_PE_SUBLANG_ARABIC_MOROCCO = 12;
  static const int LIEF_PE_SUBLANG_ARABIC_OMAN = 13;
  static const int LIEF_PE_SUBLANG_ARABIC_QATAR = 14;
  static const int LIEF_PE_SUBLANG_ARABIC_SAUDI_ARABIA = 15;
  static const int LIEF_PE_SUBLANG_ARABIC_SYRIA = 16;
  static const int LIEF_PE_SUBLANG_ARABIC_TUNISIA = 17;
  static const int LIEF_PE_SUBLANG_ARABIC_UAE = 18;
  static const int LIEF_PE_SUBLANG_ARABIC_YEMEN = 19;
  static const int LIEF_PE_SUBLANG_ARMENIAN_ARMENIA = 20;
  static const int LIEF_PE_SUBLANG_ASSAMESE_INDIA = 21;
  static const int LIEF_PE_SUBLANG_AZERI_CYRILLIC = 22;
  static const int LIEF_PE_SUBLANG_AZERI_LATIN = 23;
  static const int LIEF_PE_SUBLANG_BASHKIR_RUSSIA = 24;
  static const int LIEF_PE_SUBLANG_BASQUE_BASQUE = 25;
  static const int LIEF_PE_SUBLANG_BELARUSIAN_BELARUS = 26;
  static const int LIEF_PE_SUBLANG_BANGLA_BANGLADESH = 27;
  static const int LIEF_PE_SUBLANG_BANGLA_INDIA = 28;
  static const int LIEF_PE_SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 29;
  static const int LIEF_PE_SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 30;
  static const int LIEF_PE_SUBLANG_BRETON_FRANCE = 31;
  static const int LIEF_PE_SUBLANG_BULGARIAN_BULGARIA = 32;
  static const int LIEF_PE_SUBLANG_CATALAN_CATALAN = 33;
  static const int LIEF_PE_SUBLANG_CHINESE_HONGKONG = 34;
  static const int LIEF_PE_SUBLANG_CHINESE_MACAU = 35;
  static const int LIEF_PE_SUBLANG_CHINESE_SIMPLIFIED = 36;
  static const int LIEF_PE_SUBLANG_CHINESE_SINGAPORE = 37;
  static const int LIEF_PE_SUBLANG_CHINESE_TRADITIONAL = 38;
  static const int LIEF_PE_SUBLANG_CORSICAN_FRANCE = 39;
  static const int LIEF_PE_SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 40;
  static const int LIEF_PE_SUBLANG_CROATIAN_CROATIA = 41;
  static const int LIEF_PE_SUBLANG_CUSTOM_DEFAULT = 42;
  static const int LIEF_PE_SUBLANG_CUSTOM_UNSPECIFIED = 43;
  static const int LIEF_PE_SUBLANG_CZECH_CZECH_REPUBLIC = 44;
  static const int LIEF_PE_SUBLANG_DANISH_DENMARK = 45;
  static const int LIEF_PE_SUBLANG_DARI_AFGHANISTAN = 46;
  static const int LIEF_PE_SUBLANG_DEFAULT = 47;
  static const int LIEF_PE_SUBLANG_DIVEHI_MALDIVES = 48;
  static const int LIEF_PE_SUBLANG_DUTCH_BELGIAN = 49;
  static const int LIEF_PE_SUBLANG_DUTCH = 50;
  static const int LIEF_PE_SUBLANG_ENGLISH_AUS = 51;
  static const int LIEF_PE_SUBLANG_ENGLISH_BELIZE = 52;
  static const int LIEF_PE_SUBLANG_ENGLISH_CAN = 53;
  static const int LIEF_PE_SUBLANG_ENGLISH_CARIBBEAN = 54;
  static const int LIEF_PE_SUBLANG_ENGLISH_EIRE = 55;
  static const int LIEF_PE_SUBLANG_ENGLISH_INDIA = 56;
  static const int LIEF_PE_SUBLANG_ENGLISH_JAMAICA = 57;
  static const int LIEF_PE_SUBLANG_ENGLISH_MALAYSIA = 58;
  static const int LIEF_PE_SUBLANG_ENGLISH_NZ = 59;
  static const int LIEF_PE_SUBLANG_ENGLISH_PHILIPPINES = 60;
  static const int LIEF_PE_SUBLANG_ENGLISH_SINGAPORE = 61;
  static const int LIEF_PE_SUBLANG_ENGLISH_SOUTH_AFRICA = 62;
  static const int LIEF_PE_SUBLANG_ENGLISH_TRINIDAD = 63;
  static const int LIEF_PE_SUBLANG_ENGLISH_UK = 64;
  static const int LIEF_PE_SUBLANG_ENGLISH_US = 65;
  static const int LIEF_PE_SUBLANG_ENGLISH_ZIMBABWE = 66;
  static const int LIEF_PE_SUBLANG_ENGLISH_IRELAND = 67;
  static const int LIEF_PE_SUBLANG_ESTONIAN_ESTONIA = 68;
  static const int LIEF_PE_SUBLANG_FAEROESE_FAROE_ISLANDS = 69;
  static const int LIEF_PE_SUBLANG_FILIPINO_PHILIPPINES = 70;
  static const int LIEF_PE_SUBLANG_FINNISH_FINLAND = 71;
  static const int LIEF_PE_SUBLANG_FRENCH_BELGIAN = 72;
  static const int LIEF_PE_SUBLANG_FRENCH_CANADIAN = 73;
  static const int LIEF_PE_SUBLANG_FRENCH_LUXEMBOURG = 74;
  static const int LIEF_PE_SUBLANG_FRENCH_MONACO = 75;
  static const int LIEF_PE_SUBLANG_FRENCH_SWISS = 76;
  static const int LIEF_PE_SUBLANG_FRENCH = 77;
  static const int LIEF_PE_SUBLANG_FRISIAN_NETHERLANDS = 78;
  static const int LIEF_PE_SUBLANG_GALICIAN_GALICIAN = 79;
  static const int LIEF_PE_SUBLANG_GEORGIAN_GEORGIA = 80;
  static const int LIEF_PE_SUBLANG_GERMAN_AUSTRIAN = 81;
  static const int LIEF_PE_SUBLANG_GERMAN_LIECHTENSTEIN = 82;
  static const int LIEF_PE_SUBLANG_GERMAN_LUXEMBOURG = 83;
  static const int LIEF_PE_SUBLANG_GERMAN_SWISS = 84;
  static const int LIEF_PE_SUBLANG_GERMAN = 85;
  static const int LIEF_PE_SUBLANG_GREEK_GREECE = 86;
  static const int LIEF_PE_SUBLANG_GREENLANDIC_GREENLAND = 87;
  static const int LIEF_PE_SUBLANG_GUJARATI_INDIA = 88;
  static const int LIEF_PE_SUBLANG_HAUSA_NIGERIA_LATIN = 89;
  static const int LIEF_PE_SUBLANG_HEBREW_ISRAEL = 90;
  static const int LIEF_PE_SUBLANG_HINDI_INDIA = 91;
  static const int LIEF_PE_SUBLANG_HUNGARIAN_HUNGARY = 92;
  static const int LIEF_PE_SUBLANG_ICELANDIC_ICELAND = 93;
  static const int LIEF_PE_SUBLANG_IGBO_NIGERIA = 94;
  static const int LIEF_PE_SUBLANG_INDONESIAN_INDONESIA = 95;
  static const int LIEF_PE_SUBLANG_INUKTITUT_CANADA_LATIN = 96;
  static const int LIEF_PE_SUBLANG_INUKTITUT_CANADA = 97;
  static const int LIEF_PE_SUBLANG_IRISH_IRELAND = 98;
  static const int LIEF_PE_SUBLANG_ITALIAN_SWISS = 99;
  static const int LIEF_PE_SUBLANG_ITALIAN = 100;
  static const int LIEF_PE_SUBLANG_JAPANESE_JAPAN = 101;
  static const int LIEF_PE_SUBLANG_KANNADA_INDIA = 102;
  static const int LIEF_PE_SUBLANG_KASHMIRI_INDIA = 103;
  static const int LIEF_PE_SUBLANG_KASHMIRI_SASIA = 104;
  static const int LIEF_PE_SUBLANG_KAZAK_KAZAKHSTAN = 105;
  static const int LIEF_PE_SUBLANG_KHMER_CAMBODIA = 106;
  static const int LIEF_PE_SUBLANG_KICHE_GUATEMALA = 107;
  static const int LIEF_PE_SUBLANG_KINYARWANDA_RWANDA = 108;
  static const int LIEF_PE_SUBLANG_KONKANI_INDIA = 109;
  static const int LIEF_PE_SUBLANG_KOREAN = 110;
  static const int LIEF_PE_SUBLANG_KYRGYZ_KYRGYZSTAN = 111;
  static const int LIEF_PE_SUBLANG_LAO_LAO = 112;
  static const int LIEF_PE_SUBLANG_LATVIAN_LATVIA = 113;
  static const int LIEF_PE_SUBLANG_LITHUANIAN_CLASSIC = 114;
  static const int LIEF_PE_SUBLANG_LITHUANIAN = 115;
  static const int LIEF_PE_SUBLANG_LOWER_SORBIAN_GERMANY = 116;
  static const int LIEF_PE_SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 117;
  static const int LIEF_PE_SUBLANG_MACEDONIAN_MACEDONIA = 118;
  static const int LIEF_PE_SUBLANG_MALAY_BRUNEI_DARUSSALAM = 119;
  static const int LIEF_PE_SUBLANG_MALAY_MALAYSIA = 120;
  static const int LIEF_PE_SUBLANG_MALAYALAM_INDIA = 121;
  static const int LIEF_PE_SUBLANG_MALTESE_MALTA = 122;
  static const int LIEF_PE_SUBLANG_MAORI_NEW_ZEALAND = 123;
  static const int LIEF_PE_SUBLANG_MAPUDUNGUN_CHILE = 124;
  static const int LIEF_PE_SUBLANG_MARATHI_INDIA = 125;
  static const int LIEF_PE_SUBLANG_MOHAWK_MOHAWK = 126;
  static const int LIEF_PE_SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 127;
  static const int LIEF_PE_SUBLANG_MONGOLIAN_PRC = 128;
  static const int LIEF_PE_SUBLANG_NEPALI_INDIA = 129;
  static const int LIEF_PE_SUBLANG_NEPALI_NEPAL = 130;
  static const int LIEF_PE_SUBLANG_NEUTRAL = 131;
  static const int LIEF_PE_SUBLANG_NORWEGIAN_BOKMAL = 132;
  static const int LIEF_PE_SUBLANG_NORWEGIAN_NYNORSK = 133;
  static const int LIEF_PE_SUBLANG_OCCITAN_FRANCE = 134;
  static const int LIEF_PE_SUBLANG_ORIYA_INDIA = 135;
  static const int LIEF_PE_SUBLANG_PASHTO_AFGHANISTAN = 136;
  static const int LIEF_PE_SUBLANG_PERSIAN_IRAN = 137;
  static const int LIEF_PE_SUBLANG_POLISH_POLAND = 138;
  static const int LIEF_PE_SUBLANG_PORTUGUESE_BRAZILIAN = 139;
  static const int LIEF_PE_SUBLANG_PORTUGUESE = 140;
  static const int LIEF_PE_SUBLANG_PUNJABI_INDIA = 141;
  static const int LIEF_PE_SUBLANG_QUECHUA_BOLIVIA = 142;
  static const int LIEF_PE_SUBLANG_QUECHUA_ECUADOR = 143;
  static const int LIEF_PE_SUBLANG_QUECHUA_PERU = 144;
  static const int LIEF_PE_SUBLANG_ROMANIAN_ROMANIA = 145;
  static const int LIEF_PE_SUBLANG_ROMANSH_SWITZERLAND = 146;
  static const int LIEF_PE_SUBLANG_RUSSIAN_RUSSIA = 147;
  static const int LIEF_PE_SUBLANG_SAMI_INARI_FINLAND = 148;
  static const int LIEF_PE_SUBLANG_SAMI_LULE_NORWAY = 149;
  static const int LIEF_PE_SUBLANG_SAMI_LULE_SWEDEN = 150;
  static const int LIEF_PE_SUBLANG_SAMI_NORTHERN_FINLAND = 151;
  static const int LIEF_PE_SUBLANG_SAMI_NORTHERN_NORWAY = 152;
  static const int LIEF_PE_SUBLANG_SAMI_NORTHERN_SWEDEN = 153;
  static const int LIEF_PE_SUBLANG_SAMI_SKOLT_FINLAND = 154;
  static const int LIEF_PE_SUBLANG_SAMI_SOUTHERN_NORWAY = 155;
  static const int LIEF_PE_SUBLANG_SAMI_SOUTHERN_SWEDEN = 156;
  static const int LIEF_PE_SUBLANG_SANSKRIT_INDIA = 157;
  static const int LIEF_PE_SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 158;
  static const int LIEF_PE_SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 159;
  static const int LIEF_PE_SUBLANG_SERBIAN_CROATIA = 160;
  static const int LIEF_PE_SUBLANG_SERBIAN_CYRILLIC = 161;
  static const int LIEF_PE_SUBLANG_SERBIAN_LATIN = 162;
  static const int LIEF_PE_SUBLANG_SINDHI_AFGHANISTAN = 163;
  static const int LIEF_PE_SUBLANG_SINDHI_INDIA = 164;
  static const int LIEF_PE_SUBLANG_SINDHI_PAKISTAN = 165;
  static const int LIEF_PE_SUBLANG_SINHALESE_SRI_LANKA = 166;
  static const int LIEF_PE_SUBLANG_SLOVAK_SLOVAKIA = 167;
  static const int LIEF_PE_SUBLANG_SLOVENIAN_SLOVENIA = 168;
  static const int LIEF_PE_SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 169;
  static const int LIEF_PE_SUBLANG_SPANISH_ARGENTINA = 170;
  static const int LIEF_PE_SUBLANG_SPANISH_BOLIVIA = 171;
  static const int LIEF_PE_SUBLANG_SPANISH_CHILE = 172;
  static const int LIEF_PE_SUBLANG_SPANISH_COLOMBIA = 173;
  static const int LIEF_PE_SUBLANG_SPANISH_COSTA_RICA = 174;
  static const int LIEF_PE_SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 175;
  static const int LIEF_PE_SUBLANG_SPANISH_ECUADOR = 176;
  static const int LIEF_PE_SUBLANG_SPANISH_EL_SALVADOR = 177;
  static const int LIEF_PE_SUBLANG_SPANISH_GUATEMALA = 178;
  static const int LIEF_PE_SUBLANG_SPANISH_HONDURAS = 179;
  static const int LIEF_PE_SUBLANG_SPANISH_MEXICAN = 180;
  static const int LIEF_PE_SUBLANG_SPANISH_MODERN = 181;
  static const int LIEF_PE_SUBLANG_SPANISH_NICARAGUA = 182;
  static const int LIEF_PE_SUBLANG_SPANISH_PANAMA = 183;
  static const int LIEF_PE_SUBLANG_SPANISH_PARAGUAY = 184;
  static const int LIEF_PE_SUBLANG_SPANISH_PERU = 185;
  static const int LIEF_PE_SUBLANG_SPANISH_PUERTO_RICO = 186;
  static const int LIEF_PE_SUBLANG_SPANISH_URUGUAY = 187;
  static const int LIEF_PE_SUBLANG_SPANISH_US = 188;
  static const int LIEF_PE_SUBLANG_SPANISH_VENEZUELA = 189;
  static const int LIEF_PE_SUBLANG_SPANISH = 190;
  static const int LIEF_PE_SUBLANG_SWAHILI_KENYA = 191;
  static const int LIEF_PE_SUBLANG_SWEDISH_FINLAND = 192;
  static const int LIEF_PE_SUBLANG_SWEDISH = 193;
  static const int LIEF_PE_SUBLANG_SYRIAC_SYRIA = 194;
  static const int LIEF_PE_SUBLANG_SYS_DEFAULT = 195;
  static const int LIEF_PE_SUBLANG_TAJIK_TAJIKISTAN = 196;
  static const int LIEF_PE_SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 197;
  static const int LIEF_PE_SUBLANG_TAMIL_INDIA = 198;
  static const int LIEF_PE_SUBLANG_TATAR_RUSSIA = 199;
  static const int LIEF_PE_SUBLANG_TELUGU_INDIA = 200;
  static const int LIEF_PE_SUBLANG_THAI_THAILAND = 201;
  static const int LIEF_PE_SUBLANG_TIBETAN_PRC = 202;
  static const int LIEF_PE_SUBLANG_TIGRIGNA_ERITREA = 203;
  static const int LIEF_PE_SUBLANG_TSWANA_SOUTH_AFRICA = 204;
  static const int LIEF_PE_SUBLANG_TURKISH_TURKEY = 205;
  static const int LIEF_PE_SUBLANG_TURKMEN_TURKMENISTAN = 206;
  static const int LIEF_PE_SUBLANG_UI_CUSTOM_DEFAULT = 207;
  static const int LIEF_PE_SUBLANG_UIGHUR_PRC = 208;
  static const int LIEF_PE_SUBLANG_UKRAINIAN_UKRAINE = 209;
  static const int LIEF_PE_SUBLANG_UPPER_SORBIAN_GERMANY = 210;
  static const int LIEF_PE_SUBLANG_URDU_INDIA = 211;
  static const int LIEF_PE_SUBLANG_URDU_PAKISTAN = 212;
  static const int LIEF_PE_SUBLANG_UZBEK_CYRILLIC = 213;
  static const int LIEF_PE_SUBLANG_UZBEK_LATIN = 214;
  static const int LIEF_PE_SUBLANG_VIETNAMESE_VIETNAM = 215;
  static const int LIEF_PE_SUBLANG_WELSH_UNITED_KINGDOM = 216;
  static const int LIEF_PE_SUBLANG_WOLOF_SENEGAL = 217;
  static const int LIEF_PE_SUBLANG_XHOSA_SOUTH_AFRICA = 218;
  static const int LIEF_PE_SUBLANG_YAKUT_RUSSIA = 219;
  static const int LIEF_PE_SUBLANG_YI_PRC = 220;
  static const int LIEF_PE_SUBLANG_YORUBA_NIGERIA = 221;
  static const int LIEF_PE_SUBLANG_ZULU_SOUTH_AFRICA = 222;
  static const int LIEF_PE_SUBLANG_PULAR_SENEGAL = 223;
  static const int LIEF_PE_SUBLANG_PUNJABI_PAKISTAN = 224;
  static const int LIEF_PE_SUBLANG_TSWANA_BOTSWANA = 225;
  static const int LIEF_PE_SUBLANG_TAMIL_SRI_LANKA = 226;
  static const int LIEF_PE_SUBLANG_TIGRINYA_ETHIOPIA = 227;
  static const int LIEF_PE_SUBLANG_TIGRINYA_ERITREA = 228;
  static const int LIEF_PE_SUBLANG_VALENCIAN_VALENCIA = 229;
}

abstract class LIEF_PE_SECTION_CHARACTERISTICS {
  static const int LIEF_PE_SC_Invalid = -1;
  static const int LIEF_PE_IMAGE_SCN_TYPE_NO_PAD = 8;
  static const int LIEF_PE_IMAGE_SCN_CNT_CODE = 32;
  static const int LIEF_PE_IMAGE_SCN_CNT_INITIALIZED_DATA = 64;
  static const int LIEF_PE_IMAGE_SCN_CNT_UNINITIALIZED_DATA = 128;
  static const int LIEF_PE_IMAGE_SCN_LNK_OTHER = 256;
  static const int LIEF_PE_IMAGE_SCN_LNK_INFO = 512;
  static const int LIEF_PE_IMAGE_SCN_LNK_REMOVE = 2048;
  static const int LIEF_PE_IMAGE_SCN_LNK_COMDAT = 4096;
  static const int LIEF_PE_IMAGE_SCN_GPREL = 32768;
  static const int LIEF_PE_IMAGE_SCN_MEM_PURGEABLE = 65536;
  static const int LIEF_PE_IMAGE_SCN_MEM_16BIT = 131072;
  static const int LIEF_PE_IMAGE_SCN_MEM_LOCKED = 262144;
  static const int LIEF_PE_IMAGE_SCN_MEM_PRELOAD = 524288;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_1BYTES = 1048576;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_2BYTES = 2097152;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_4BYTES = 3145728;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_8BYTES = 4194304;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_16BYTES = 5242880;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_32BYTES = 6291456;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_64BYTES = 7340032;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_128BYTES = 8388608;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_256BYTES = 9437184;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_512BYTES = 10485760;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_1024BYTES = 11534336;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_2048BYTES = 12582912;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_4096BYTES = 13631488;
  static const int LIEF_PE_IMAGE_SCN_ALIGN_8192BYTES = 14680064;
  static const int LIEF_PE_IMAGE_SCN_LNK_NRELOC_OVFL = 16777216;
  static const int LIEF_PE_IMAGE_SCN_MEM_DISCARDABLE = 33554432;
  static const int LIEF_PE_IMAGE_SCN_MEM_NOT_CACHED = 67108864;
  static const int LIEF_PE_IMAGE_SCN_MEM_NOT_PAGED = 134217728;
  static const int LIEF_PE_IMAGE_SCN_MEM_SHARED = 268435456;
  static const int LIEF_PE_IMAGE_SCN_MEM_EXECUTE = 536870912;
  static const int LIEF_PE_IMAGE_SCN_MEM_READ = 1073741824;
  static const int LIEF_PE_IMAGE_SCN_MEM_WRITE = -2147483648;
}

/// From https://docs.microsoft.com/en-us/windows/win32/winmsg/extended-window-styles
abstract class LIEF_PE_EXTENDED_WINDOW_STYLES {
  static const int LIEF_PE_WS_EX_DLGMODALFRAME = 1;
  static const int LIEF_PE_WS_EX_NOPARENTNOTIFY = 4;
  static const int LIEF_PE_WS_EX_TOPMOST = 8;
  static const int LIEF_PE_WS_EX_ACCEPTFILES = 16;
  static const int LIEF_PE_WS_EX_TRANSPARENT = 32;
  static const int LIEF_PE_WS_EX_MDICHILD = 64;
  static const int LIEF_PE_WS_EX_TOOLWINDOW = 128;
  static const int LIEF_PE_WS_EX_WINDOWEDGE = 256;
  static const int LIEF_PE_WS_EX_CLIENTEDGE = 512;
  static const int LIEF_PE_WS_EX_CONTEXTHELP = 1024;
  static const int LIEF_PE_WS_EX_RIGHT = 4096;
  static const int LIEF_PE_WS_EX_LEFT = 0;
  static const int LIEF_PE_WS_EX_RTLREADING = 8192;
  static const int LIEF_PE_WS_EX_LTRREADING = 0;
  static const int LIEF_PE_WS_EX_LEFTSCROLLBAR = 16384;
  static const int LIEF_PE_WS_EX_RIGHTSCROLLBAR = 0;
  static const int LIEF_PE_WS_EX_CONTROLPARENT = 65536;
  static const int LIEF_PE_WS_EX_STATICEDGE = 131072;
  static const int LIEF_PE_WS_EX_APPWINDOW = 262144;
}

/// From: https://docs.microsoft.com/en-us/windows/win32/winmsg/window-styles
abstract class LIEF_PE_WINDOW_STYLES {
  static const int LIEF_PE_WS_OVERLAPPED = 0;
  static const int LIEF_PE_WS_POPUP = -2147483648;
  static const int LIEF_PE_WS_CHILD = 1073741824;
  static const int LIEF_PE_WS_MINIMIZE = 536870912;
  static const int LIEF_PE_WS_VISIBLE = 268435456;
  static const int LIEF_PE_WS_DISABLED = 134217728;
  static const int LIEF_PE_WS_CLIPSIBLINGS = 67108864;
  static const int LIEF_PE_WS_CLIPCHILDREN = 33554432;
  static const int LIEF_PE_WS_MAXIMIZE = 16777216;
  static const int LIEF_PE_WS_CAPTION = 12582912;
  static const int LIEF_PE_WS_BORDER = 8388608;
  static const int LIEF_PE_WS_DLGFRAME = 4194304;
  static const int LIEF_PE_WS_VSCROLL = 2097152;
  static const int LIEF_PE_WS_HSCROLL = 1048576;
  static const int LIEF_PE_WS_SYSMENU = 524288;
  static const int LIEF_PE_WS_THICKFRAME = 262144;
  static const int LIEF_PE_WS_GROUP = 131072;
  static const int LIEF_PE_WS_TABSTOP = 65536;
  static const int LIEF_PE_WS_MINIMIZEBOX = 131072;
  static const int LIEF_PE_WS_MAXIMIZEBOX = 65536;
}

/// From https://docs.microsoft.com/en-us/windows/win32/dlgbox/dialog-box-styles
abstract class LIEF_PE_DIALOG_BOX_STYLES {
  static const int LIEF_PE_DS_ABSALIGN = 1;
  static const int LIEF_PE_DS_SYSMODAL = 2;
  static const int LIEF_PE_DS_LOCALEDIT = 32;
  static const int LIEF_PE_DS_SETFONT = 64;
  static const int LIEF_PE_DS_MODALFRAME = 128;
  static const int LIEF_PE_DS_NOIDLEMSG = 256;
  static const int LIEF_PE_DS_SETFOREGROUND = 512;
  static const int LIEF_PE_DS_3DLOOK = 4;
  static const int LIEF_PE_DS_FIXEDSYS = 8;
  static const int LIEF_PE_DS_NOFAILCREATE = 16;
  static const int LIEF_PE_DS_CONTROL = 1024;
  static const int LIEF_PE_DS_CENTER = 2048;
  static const int LIEF_PE_DS_CENTERMOUSE = 4096;
  static const int LIEF_PE_DS_CONTEXTHELP = 8192;
  static const int LIEF_PE_DS_SHELLFONT = 72;
}

abstract class LIEF_PE_FIXED_VERSION_OS {
  static const int LIEF_PE_VOS_UNKNOWN = 0;
  static const int LIEF_PE_VOS_DOS = 65536;
  static const int LIEF_PE_VOS_NT = 262144;
  static const int LIEF_PE_VOS__WINDOWS16 = 1;
  static const int LIEF_PE_VOS__WINDOWS32 = 4;
  static const int LIEF_PE_VOS_OS216 = 131072;
  static const int LIEF_PE_VOS_OS232 = 196608;
  static const int LIEF_PE_VOS__PM16 = 2;
  static const int LIEF_PE_VOS__PM32 = 3;
  static const int LIEF_PE_VOS_DOS_WINDOWS16 = 65537;
  static const int LIEF_PE_VOS_DOS_WINDOWS32 = 65540;
  static const int LIEF_PE_VOS_NT_WINDOWS32 = 262148;
  static const int LIEF_PE_VOS_OS216_PM16 = 131074;
  static const int LIEF_PE_VOS_OS232_PM32 = 196611;
}

abstract class LIEF_PE_FIXED_VERSION_FILE_FLAGS {
  static const int LIEF_PE_VS_FF_DEBUG = 1;
  static const int LIEF_PE_VS_FF_INFOINFERRED = 16;
  static const int LIEF_PE_VS_FF_PATCHED = 4;
  static const int LIEF_PE_VS_FF_PRERELEASE = 2;
  static const int LIEF_PE_VS_FF_PRIVATEBUILD = 8;
  static const int LIEF_PE_VS_FF_SPECIALBUILD = 32;
}

abstract class LIEF_PE_FIXED_VERSION_FILE_TYPES {
  static const int LIEF_PE_VFT_APP = 1;
  static const int LIEF_PE_VFT_DLL = 2;
  static const int LIEF_PE_VFT_DRV = 3;
  static const int LIEF_PE_VFT_FONT = 4;
  static const int LIEF_PE_VFT_STATIC_LIB = 7;
  static const int LIEF_PE_VFT_UNKNOWN = 0;
  static const int LIEF_PE_VFT_VXD = 5;
}

abstract class LIEF_PE_FIXED_VERSION_FILE_SUB_TYPES {
  static const int LIEF_PE_VFT2_DRV_COMM = 10;
  static const int LIEF_PE_VFT2_DRV_DISPLAY = 4;
  static const int LIEF_PE_VFT2_DRV_INSTALLABLE = 8;
  static const int LIEF_PE_VFT2_DRV_KEYBOARD = 2;
  static const int LIEF_PE_VFT2_DRV_LANGUAGE = 3;
  static const int LIEF_PE_VFT2_DRV_MOUSE = 5;
  static const int LIEF_PE_VFT2_DRV_NETWORK = 6;
  static const int LIEF_PE_VFT2_DRV_PRINTER = 1;
  static const int LIEF_PE_VFT2_DRV_SOUND = 9;
  static const int LIEF_PE_VFT2_DRV_SYSTEM = 7;
  static const int LIEF_PE_VFT2_DRV_VERSIONED_PRINTER = 12;
  static const int LIEF_PE_VFT2_FONT_RASTER = 1;
  static const int LIEF_PE_VFT2_FONT_TRUETYPE = 3;
  static const int LIEF_PE_VFT2_FONT_VECTOR = 2;
  static const int LIEF_PE_VFT2_UNKNOWN = 0;
}

/// Code page from https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers
abstract class LIEF_PE_CODE_PAGES {
  static const int LIEF_PE_CP_IBM037 = 37;
  static const int LIEF_PE_CP_IBM437 = 437;
  static const int LIEF_PE_CP_IBM500 = 500;
  static const int LIEF_PE_CP_ASMO_708 = 708;
  static const int LIEF_PE_CP_DOS_720 = 720;
  static const int LIEF_PE_CP_IBM737 = 737;
  static const int LIEF_PE_CP_IBM775 = 775;
  static const int LIEF_PE_CP_IBM850 = 850;
  static const int LIEF_PE_CP_IBM852 = 852;
  static const int LIEF_PE_CP_IBM855 = 855;
  static const int LIEF_PE_CP_IBM857 = 857;
  static const int LIEF_PE_CP_IBM00858 = 858;
  static const int LIEF_PE_CP_IBM860 = 860;
  static const int LIEF_PE_CP_IBM861 = 861;
  static const int LIEF_PE_CP_DOS_862 = 862;
  static const int LIEF_PE_CP_IBM863 = 863;
  static const int LIEF_PE_CP_IBM864 = 864;
  static const int LIEF_PE_CP_IBM865 = 865;
  static const int LIEF_PE_CP_CP866 = 866;
  static const int LIEF_PE_CP_IBM869 = 869;
  static const int LIEF_PE_CP_IBM870 = 870;
  static const int LIEF_PE_CP_WINDOWS_874 = 874;
  static const int LIEF_PE_CP_CP875 = 875;
  static const int LIEF_PE_CP_SHIFT_JIS = 932;
  static const int LIEF_PE_CP_GB2312 = 936;
  static const int LIEF_PE_CP_KS_C_5601_1987 = 949;
  static const int LIEF_PE_CP_BIG5 = 950;
  static const int LIEF_PE_CP_IBM1026 = 1026;
  static const int LIEF_PE_CP_IBM01047 = 1047;
  static const int LIEF_PE_CP_IBM01140 = 1140;
  static const int LIEF_PE_CP_IBM01141 = 1141;
  static const int LIEF_PE_CP_IBM01142 = 1142;
  static const int LIEF_PE_CP_IBM01143 = 1143;
  static const int LIEF_PE_CP_IBM01144 = 1144;
  static const int LIEF_PE_CP_IBM01145 = 1145;
  static const int LIEF_PE_CP_IBM01146 = 1146;
  static const int LIEF_PE_CP_IBM01147 = 1147;
  static const int LIEF_PE_CP_IBM01148 = 1148;
  static const int LIEF_PE_CP_IBM01149 = 1149;
  static const int LIEF_PE_CP_UTF_16 = 1200;
  static const int LIEF_PE_CP_UNICODEFFFE = 1201;
  static const int LIEF_PE_CP_WINDOWS_1250 = 1250;
  static const int LIEF_PE_CP_WINDOWS_1251 = 1251;
  static const int LIEF_PE_CP_WINDOWS_1252 = 1252;
  static const int LIEF_PE_CP_WINDOWS_1253 = 1253;
  static const int LIEF_PE_CP_WINDOWS_1254 = 1254;
  static const int LIEF_PE_CP_WINDOWS_1255 = 1255;
  static const int LIEF_PE_CP_WINDOWS_1256 = 1256;
  static const int LIEF_PE_CP_WINDOWS_1257 = 1257;
  static const int LIEF_PE_CP_WINDOWS_1258 = 1258;
  static const int LIEF_PE_CP_JOHAB = 1361;
  static const int LIEF_PE_CP_MACINTOSH = 10000;
  static const int LIEF_PE_CP_X_MAC_JAPANESE = 10001;
  static const int LIEF_PE_CP_X_MAC_CHINESETRAD = 10002;
  static const int LIEF_PE_CP_X_MAC_KOREAN = 10003;
  static const int LIEF_PE_CP_X_MAC_ARABIC = 10004;
  static const int LIEF_PE_CP_X_MAC_HEBREW = 10005;
  static const int LIEF_PE_CP_X_MAC_GREEK = 10006;
  static const int LIEF_PE_CP_X_MAC_CYRILLIC = 10007;
  static const int LIEF_PE_CP_X_MAC_CHINESESIMP = 10008;
  static const int LIEF_PE_CP_X_MAC_ROMANIAN = 10010;
  static const int LIEF_PE_CP_X_MAC_UKRAINIAN = 10017;
  static const int LIEF_PE_CP_X_MAC_THAI = 10021;
  static const int LIEF_PE_CP_X_MAC_CE = 10029;
  static const int LIEF_PE_CP_X_MAC_ICELANDIC = 10079;
  static const int LIEF_PE_CP_X_MAC_TURKISH = 10081;
  static const int LIEF_PE_CP_X_MAC_CROATIAN = 10082;
  static const int LIEF_PE_CP_UTF_32 = 12000;
  static const int LIEF_PE_CP_UTF_32BE = 12001;
  static const int LIEF_PE_CP_X_CHINESE_CNS = 20000;
  static const int LIEF_PE_CP_X_CP20001 = 20001;
  static const int LIEF_PE_CP_X_CHINESE_ETEN = 20002;
  static const int LIEF_PE_CP_X_CP20003 = 20003;
  static const int LIEF_PE_CP_X_CP20004 = 20004;
  static const int LIEF_PE_CP_X_CP20005 = 20005;
  static const int LIEF_PE_CP_X_IA5 = 20105;
  static const int LIEF_PE_CP_X_IA5_GERMAN = 20106;
  static const int LIEF_PE_CP_X_IA5_SWEDISH = 20107;
  static const int LIEF_PE_CP_X_IA5_NORWEGIAN = 20108;
  static const int LIEF_PE_CP_US_ASCII = 20127;
  static const int LIEF_PE_CP_X_CP20261 = 20261;
  static const int LIEF_PE_CP_X_CP20269 = 20269;
  static const int LIEF_PE_CP_IBM273 = 20273;
  static const int LIEF_PE_CP_IBM277 = 20277;
  static const int LIEF_PE_CP_IBM278 = 20278;
  static const int LIEF_PE_CP_IBM280 = 20280;
  static const int LIEF_PE_CP_IBM284 = 20284;
  static const int LIEF_PE_CP_IBM285 = 20285;
  static const int LIEF_PE_CP_IBM290 = 20290;
  static const int LIEF_PE_CP_IBM297 = 20297;
  static const int LIEF_PE_CP_IBM420 = 20420;
  static const int LIEF_PE_CP_IBM423 = 20423;
  static const int LIEF_PE_CP_IBM424 = 20424;
  static const int LIEF_PE_CP_X_EBCDIC_KOREANEXTENDED = 20833;
  static const int LIEF_PE_CP_IBM_THAI = 20838;
  static const int LIEF_PE_CP_KOI8_R = 20866;
  static const int LIEF_PE_CP_IBM871 = 20871;
  static const int LIEF_PE_CP_IBM880 = 20880;
  static const int LIEF_PE_CP_IBM905 = 20905;
  static const int LIEF_PE_CP_IBM00924 = 20924;
  static const int LIEF_PE_CP_EUC_JP_JIS = 20932;
  static const int LIEF_PE_CP_X_CP20936 = 20936;
  static const int LIEF_PE_CP_X_CP20949 = 20949;
  static const int LIEF_PE_CP_CP1025 = 21025;
  static const int LIEF_PE_CP_KOI8_U = 21866;
  static const int LIEF_PE_CP_ISO_8859_1 = 28591;
  static const int LIEF_PE_CP_ISO_8859_2 = 28592;
  static const int LIEF_PE_CP_ISO_8859_3 = 28593;
  static const int LIEF_PE_CP_ISO_8859_4 = 28594;
  static const int LIEF_PE_CP_ISO_8859_5 = 28595;
  static const int LIEF_PE_CP_ISO_8859_6 = 28596;
  static const int LIEF_PE_CP_ISO_8859_7 = 28597;
  static const int LIEF_PE_CP_ISO_8859_8 = 28598;
  static const int LIEF_PE_CP_ISO_8859_9 = 28599;
  static const int LIEF_PE_CP_ISO_8859_13 = 28603;
  static const int LIEF_PE_CP_ISO_8859_15 = 28605;
  static const int LIEF_PE_CP_X_EUROPA = 29001;
  static const int LIEF_PE_CP_ISO_8859_8_I = 38598;
  static const int LIEF_PE_CP_ISO_2022_JP = 50220;
  static const int LIEF_PE_CP_CSISO2022JP = 50221;
  static const int LIEF_PE_CP_ISO_2022_JP_JIS = 50222;
  static const int LIEF_PE_CP_ISO_2022_KR = 50225;
  static const int LIEF_PE_CP_X_CP50227 = 50227;
  static const int LIEF_PE_CP_EUC_JP = 51932;
  static const int LIEF_PE_CP_EUC_CN = 51936;
  static const int LIEF_PE_CP_EUC_KR = 51949;
  static const int LIEF_PE_CP_HZ_GB_2312 = 52936;
  static const int LIEF_PE_CP_GB18030 = 54936;
  static const int LIEF_PE_CP_X_ISCII_DE = 57002;
  static const int LIEF_PE_CP_X_ISCII_BE = 57003;
  static const int LIEF_PE_CP_X_ISCII_TA = 57004;
  static const int LIEF_PE_CP_X_ISCII_TE = 57005;
  static const int LIEF_PE_CP_X_ISCII_AS = 57006;
  static const int LIEF_PE_CP_X_ISCII_OR = 57007;
  static const int LIEF_PE_CP_X_ISCII_KA = 57008;
  static const int LIEF_PE_CP_X_ISCII_MA = 57009;
  static const int LIEF_PE_CP_X_ISCII_GU = 57010;
  static const int LIEF_PE_CP_X_ISCII_PA = 57011;
  static const int LIEF_PE_CP_UTF_7 = 65000;
  static const int LIEF_PE_CP_UTF_8 = 65001;
}

abstract class LIEF_PE_WIN_VERSION {
  static const int LIEF_PE_WIN_UNKNOWN = 0;
  static const int LIEF_PE_WIN_SEH = 1;
  static const int LIEF_PE_WIN8_1 = 2;
  static const int LIEF_PE_WIN10_0_9879 = 3;
  static const int LIEF_PE_WIN10_0_14286 = 4;
  static const int LIEF_PE_WIN10_0_14383 = 5;
  static const int LIEF_PE_WIN10_0_14901 = 6;
  static const int LIEF_PE_WIN10_0_15002 = 7;
  static const int LIEF_PE_WIN10_0_16237 = 8;
}

abstract class LIEF_PE_GUARD_CF_FLAGS {
  static const int LIEF_PE_GCF_NONE = 0;
  static const int LIEF_PE_GCF_INSTRUMENTED = 256;
  static const int LIEF_PE_GCF_W_INSTRUMENTED = 512;
  static const int LIEF_PE_GCF_FUNCTION_TABLE_PRESENT = 1024;
  static const int LIEF_PE_GCF_EXPORT_SUPPRESSION_INFO_PRESENT = 16384;
  static const int LIEF_PE_GCF_ENABLE_EXPORT_SUPPRESSION = 32768;
  static const int LIEF_PE_GCF_LONGJUMP_TABLE_PRESENT = 65536;
  static const int LIEF_PE_GRF_INSTRUMENTED = 131072;
  static const int LIEF_PE_GRF_ENABLE = 262144;
  static const int LIEF_PE_GRF_STRICT = 524288;
}

/// From https://docs.microsoft.com/en-us/windows/win32/menurc/acceltableentry
abstract class LIEF_PE_ACCELERATOR_FLAGS {
  static const int LIEF_PE_FVIRTKEY = 1;
  static const int LIEF_PE_FNOINVERT = 2;
  static const int LIEF_PE_FSHIFT = 4;
  static const int LIEF_PE_FCONTROL = 8;
  static const int LIEF_PE_FALT = 16;
  static const int LIEF_PE_END = 128;
}

/// From https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes
abstract class LIEF_PE_ACCELERATOR_VK_CODES {
  static const int LIEF_PE_VK_LBUTTON = 1;
  static const int LIEF_PE_VK_RBUTTON = 2;
  static const int LIEF_PE_VK_CANCEL = 3;
  static const int LIEF_PE_VK_MBUTTON = 4;
  static const int LIEF_PE_VK_XBUTTON1 = 5;
  static const int LIEF_PE_VK_XBUTTON2 = 6;
  static const int LIEF_PE_VK_BACK = 8;
  static const int LIEF_PE_VK_TAB = 9;
  static const int LIEF_PE_VK_CLEAR = 12;
  static const int LIEF_PE_VK_RETURN = 13;
  static const int LIEF_PE_VK_SHIFT = 16;
  static const int LIEF_PE_VK_CONTROL = 17;
  static const int LIEF_PE_VK_MENU = 18;
  static const int LIEF_PE_VK_PAUSE = 19;
  static const int LIEF_PE_VK_CAPITAL = 20;
  static const int LIEF_PE_VK_KANA = 21;
  static const int LIEF_PE_VK_HANGUEL = 21;
  static const int LIEF_PE_VK_HANGUL = 21;
  static const int LIEF_PE_VK_IME_ON = 22;
  static const int LIEF_PE_VK_JUNJA = 23;
  static const int LIEF_PE_VK_FINAL = 24;
  static const int LIEF_PE_VK_HANJA = 25;
  static const int LIEF_PE_VK_KANJI = 25;
  static const int LIEF_PE_VK_IME_OFF = 26;
  static const int LIEF_PE_VK_ESCAPE = 27;
  static const int LIEF_PE_VK_CONVERT = 28;
  static const int LIEF_PE_VK_NONCONVERT = 29;
  static const int LIEF_PE_VK_ACCEPT = 30;
  static const int LIEF_PE_VK_MODECHANGE = 31;
  static const int LIEF_PE_VK_SPACE = 32;
  static const int LIEF_PE_VK_PRIOR = 33;
  static const int LIEF_PE_VK_NEXT = 34;
  static const int LIEF_PE_VK_END = 35;
  static const int LIEF_PE_VK_HOME = 36;
  static const int LIEF_PE_VK_LEFT = 37;
  static const int LIEF_PE_VK_UP = 38;
  static const int LIEF_PE_VK_RIGHT = 39;
  static const int LIEF_PE_VK_DOWN = 40;
  static const int LIEF_PE_VK_SELECT = 41;
  static const int LIEF_PE_VK_PRINT = 42;
  static const int LIEF_PE_VK_EXECUTE = 43;
  static const int LIEF_PE_VK_SNAPSHOT = 44;
  static const int LIEF_PE_VK_INSERT = 45;
  static const int LIEF_PE_VK_DELETE = 46;
  static const int LIEF_PE_VK_HELP = 47;
  static const int LIEF_PE_VK_0 = 48;
  static const int LIEF_PE_VK_1 = 49;
  static const int LIEF_PE_VK_2 = 50;
  static const int LIEF_PE_VK_3 = 51;
  static const int LIEF_PE_VK_4 = 52;
  static const int LIEF_PE_VK_5 = 53;
  static const int LIEF_PE_VK_6 = 54;
  static const int LIEF_PE_VK_7 = 55;
  static const int LIEF_PE_VK_8 = 56;
  static const int LIEF_PE_VK_9 = 57;
  static const int LIEF_PE_VK_A = 65;
  static const int LIEF_PE_VK_B = 66;
  static const int LIEF_PE_VK_C = 67;
  static const int LIEF_PE_VK_D = 68;
  static const int LIEF_PE_VK_E = 69;
  static const int LIEF_PE_VK_F = 70;
  static const int LIEF_PE_VK_G = 71;
  static const int LIEF_PE_VK_H = 72;
  static const int LIEF_PE_VK_I = 73;
  static const int LIEF_PE_VK_J = 74;
  static const int LIEF_PE_VK_K = 75;
  static const int LIEF_PE_VK_L = 76;
  static const int LIEF_PE_VK_M = 77;
  static const int LIEF_PE_VK_N = 78;
  static const int LIEF_PE_VK_O = 79;
  static const int LIEF_PE_VK_P = 80;
  static const int LIEF_PE_VK_Q = 81;
  static const int LIEF_PE_VK_R = 82;
  static const int LIEF_PE_VK_S = 83;
  static const int LIEF_PE_VK_T = 84;
  static const int LIEF_PE_VK_U = 85;
  static const int LIEF_PE_VK_V = 86;
  static const int LIEF_PE_VK_W = 87;
  static const int LIEF_PE_VK_X = 88;
  static const int LIEF_PE_VK_Y = 89;
  static const int LIEF_PE_VK_Z = 96;
  static const int LIEF_PE_VK_LWIN = 91;
  static const int LIEF_PE_VK_RWIN = 92;
  static const int LIEF_PE_VK_APPS = 93;
  static const int LIEF_PE_VK_SLEEP = 95;
  static const int LIEF_PE_VK_NUMPAD0 = 96;
  static const int LIEF_PE_VK_NUMPAD1 = 97;
  static const int LIEF_PE_VK_NUMPAD2 = 98;
  static const int LIEF_PE_VK_NUMPAD3 = 99;
  static const int LIEF_PE_VK_NUMPAD4 = 100;
  static const int LIEF_PE_VK_NUMPAD5 = 101;
  static const int LIEF_PE_VK_NUMPAD6 = 102;
  static const int LIEF_PE_VK_NUMPAD7 = 103;
  static const int LIEF_PE_VK_NUMPAD8 = 104;
  static const int LIEF_PE_VK_NUMPAD9 = 105;
  static const int LIEF_PE_VK_MULTIPLY = 106;
  static const int LIEF_PE_VK_ADD = 107;
  static const int LIEF_PE_VK_SEPARATOR = 108;
  static const int LIEF_PE_VK_SUBTRACT = 109;
  static const int LIEF_PE_VK_DECIMAL = 110;
  static const int LIEF_PE_VK_DIVIDE = 111;
  static const int LIEF_PE_VK_F1 = 112;
  static const int LIEF_PE_VK_F2 = 113;
  static const int LIEF_PE_VK_F3 = 114;
  static const int LIEF_PE_VK_F4 = 115;
  static const int LIEF_PE_VK_F5 = 116;
  static const int LIEF_PE_VK_F6 = 117;
  static const int LIEF_PE_VK_F7 = 118;
  static const int LIEF_PE_VK_F8 = 119;
  static const int LIEF_PE_VK_F9 = 120;
  static const int LIEF_PE_VK_F10 = 121;
  static const int LIEF_PE_VK_F11 = 122;
  static const int LIEF_PE_VK_F12 = 123;
  static const int LIEF_PE_VK_F13 = 124;
  static const int LIEF_PE_VK_F14 = 125;
  static const int LIEF_PE_VK_F15 = 126;
  static const int LIEF_PE_VK_F16 = 127;
  static const int LIEF_PE_VK_F17 = 128;
  static const int LIEF_PE_VK_F18 = 129;
  static const int LIEF_PE_VK_F19 = 130;
  static const int LIEF_PE_VK_F20 = 131;
  static const int LIEF_PE_VK_F21 = 132;
  static const int LIEF_PE_VK_F22 = 133;
  static const int LIEF_PE_VK_F23 = 134;
  static const int LIEF_PE_VK_F24 = 135;
  static const int LIEF_PE_VK_NUMLOCK = 144;
  static const int LIEF_PE_VK_SCROLL = 145;
  static const int LIEF_PE_VK_LSHIFT = 160;
  static const int LIEF_PE_VK_RSHIFT = 161;
  static const int LIEF_PE_VK_LCONTROL = 162;
  static const int LIEF_PE_VK_RCONTROL = 163;
  static const int LIEF_PE_VK_LMENU = 164;
  static const int LIEF_PE_VK_RMENU = 165;
  static const int LIEF_PE_VK_BROWSER_BACK = 166;
  static const int LIEF_PE_VK_BROWSER_FORWARD = 167;
  static const int LIEF_PE_VK_BROWSER_REFRESH = 168;
  static const int LIEF_PE_VK_BROWSER_STOP = 169;
  static const int LIEF_PE_VK_BROWSER_SEARCH = 170;
  static const int LIEF_PE_VK_BROWSER_FAVORITES = 171;
  static const int LIEF_PE_VK_BROWSER_HOME = 172;
  static const int LIEF_PE_VK_VOLUME_MUTE = 173;
  static const int LIEF_PE_VK_VOLUME_DOWN = 174;
  static const int LIEF_PE_VK_VOLUME_UP = 175;
  static const int LIEF_PE_VK_MEDIA_NEXT_TRACK = 176;
  static const int LIEF_PE_VK_MEDIA_PREV_TRACK = 177;
  static const int LIEF_PE_VK_MEDIA_STOP = 178;
  static const int LIEF_PE_VK_MEDIA_PLAY_PAUSE = 179;
  static const int LIEF_PE_VK_LAUNCH_MAIL = 180;
  static const int LIEF_PE_VK_LAUNCH_MEDIA_SELECT = 181;
  static const int LIEF_PE_VK_LAUNCH_APP1 = 182;
  static const int LIEF_PE_VK_LAUNCH_APP2 = 183;
  static const int LIEF_PE_VK_OEM_1 = 186;
  static const int LIEF_PE_VK_OEM_PLUS = 187;
  static const int LIEF_PE_VK_OEM_COMMA = 188;
  static const int LIEF_PE_VK_OEM_MINUS = 189;
  static const int LIEF_PE_VK_OEM_PERIOD = 190;
  static const int LIEF_PE_VK_OEM_2 = 191;
  static const int LIEF_PE_VK_OEM_4 = 219;
  static const int LIEF_PE_VK_OEM_5 = 220;
  static const int LIEF_PE_VK_OEM_6 = 221;
  static const int LIEF_PE_VK_OEM_7 = 222;
  static const int LIEF_PE_VK_OEM_8 = 223;
  static const int LIEF_PE_VK_OEM_102 = 226;
  static const int LIEF_PE_VK_PROCESSKEY = 229;
  static const int LIEF_PE_VK_PACKET = 231;
  static const int LIEF_PE_VK_ATTN = 246;
  static const int LIEF_PE_VK_CRSEL = 247;
  static const int LIEF_PE_VK_EXSEL = 248;
  static const int LIEF_PE_VK_EREOF = 249;
  static const int LIEF_PE_VK_PLAY = 250;
  static const int LIEF_PE_VK_ZOOM = 251;
  static const int LIEF_PE_VK_NONAME = 252;
  static const int LIEF_PE_VK_PA1 = 253;
  static const int LIEF_PE_VK_OEM_CLEAR = 254;
}

/// e_ident size and indices.
abstract class LIEF_ELF_IDENTITY {
  static const int LIEF_ELF_EI_MAG0 = 0;
  static const int LIEF_ELF_EI_MAG1 = 1;
  static const int LIEF_ELF_EI_MAG2 = 2;
  static const int LIEF_ELF_EI_MAG3 = 3;
  static const int LIEF_ELF_EI_CLASS = 4;
  static const int LIEF_ELF_EI_DATA = 5;
  static const int LIEF_ELF_EI_VERSION = 6;
  static const int LIEF_ELF_EI_OSABI = 7;
  static const int LIEF_ELF_EI_ABIVERSION = 8;
  static const int LIEF_ELF_EI_PAD = 9;
  static const int LIEF_ELF_EI_NIDENT = 16;
}

/// Enum associated with *e_type*
abstract class LIEF_ELF_E_TYPE {
  static const int LIEF_ELF_ET_NONE = 0;
  static const int LIEF_ELF_ET_REL = 1;
  static const int LIEF_ELF_ET_EXEC = 2;
  static const int LIEF_ELF_ET_DYN = 3;
  static const int LIEF_ELF_ET_CORE = 4;
  static const int LIEF_ELF_ET_LOPROC = 65280;
  static const int LIEF_ELF_ET_HIPROC = 65535;
}

/// Versioning
abstract class LIEF_ELF_VERSION {
  static const int LIEF_ELF_EV_NONE = 0;
  static const int LIEF_ELF_EV_CURRENT = 1;
}

/// @brief Machine architectures
/// See current registered ELF machine architectures at:
/// http://www.sco.com/developers/gabi/latest/ch4.eheader.html
abstract class LIEF_ELF_ARCH {
  static const int LIEF_ELF_EM_NONE = 0;
  static const int LIEF_ELF_EM_M32 = 1;
  static const int LIEF_ELF_EM_SPARC = 2;
  static const int LIEF_ELF_EM_386 = 3;
  static const int LIEF_ELF_EM_68K = 4;
  static const int LIEF_ELF_EM_88K = 5;
  static const int LIEF_ELF_EM_IAMCU = 6;
  static const int LIEF_ELF_EM_860 = 7;
  static const int LIEF_ELF_EM_MIPS = 8;
  static const int LIEF_ELF_EM_S370 = 9;
  static const int LIEF_ELF_EM_MIPS_RS3_LE = 10;
  static const int LIEF_ELF_EM_PARISC = 15;
  static const int LIEF_ELF_EM_VPP500 = 17;
  static const int LIEF_ELF_EM_SPARC32PLUS = 18;
  static const int LIEF_ELF_EM_960 = 19;
  static const int LIEF_ELF_EM_PPC = 20;
  static const int LIEF_ELF_EM_PPC64 = 21;
  static const int LIEF_ELF_EM_S390 = 22;
  static const int LIEF_ELF_EM_SPU = 23;
  static const int LIEF_ELF_EM_V800 = 36;
  static const int LIEF_ELF_EM_FR20 = 37;
  static const int LIEF_ELF_EM_RH32 = 38;
  static const int LIEF_ELF_EM_RCE = 39;
  static const int LIEF_ELF_EM_ARM = 40;
  static const int LIEF_ELF_EM_ALPHA = 41;
  static const int LIEF_ELF_EM_SH = 42;
  static const int LIEF_ELF_EM_SPARCV9 = 43;
  static const int LIEF_ELF_EM_TRICORE = 44;
  static const int LIEF_ELF_EM_ARC = 45;
  static const int LIEF_ELF_EM_H8_300 = 46;
  static const int LIEF_ELF_EM_H8_300H = 47;
  static const int LIEF_ELF_EM_H8S = 48;
  static const int LIEF_ELF_EM_H8_500 = 49;
  static const int LIEF_ELF_EM_IA_64 = 50;
  static const int LIEF_ELF_EM_MIPS_X = 51;
  static const int LIEF_ELF_EM_COLDFIRE = 52;
  static const int LIEF_ELF_EM_68HC12 = 53;
  static const int LIEF_ELF_EM_MMA = 54;
  static const int LIEF_ELF_EM_PCP = 55;
  static const int LIEF_ELF_EM_NCPU = 56;
  static const int LIEF_ELF_EM_NDR1 = 57;
  static const int LIEF_ELF_EM_STARCORE = 58;
  static const int LIEF_ELF_EM_ME16 = 59;
  static const int LIEF_ELF_EM_ST100 = 60;
  static const int LIEF_ELF_EM_TINYJ = 61;
  static const int LIEF_ELF_EM_X86_64 = 62;
  static const int LIEF_ELF_EM_PDSP = 63;
  static const int LIEF_ELF_EM_PDP10 = 64;
  static const int LIEF_ELF_EM_PDP11 = 65;
  static const int LIEF_ELF_EM_FX66 = 66;
  static const int LIEF_ELF_EM_ST9PLUS = 67;
  static const int LIEF_ELF_EM_ST7 = 68;
  static const int LIEF_ELF_EM_68HC16 = 69;
  static const int LIEF_ELF_EM_68HC11 = 70;
  static const int LIEF_ELF_EM_68HC08 = 71;
  static const int LIEF_ELF_EM_68HC05 = 72;
  static const int LIEF_ELF_EM_SVX = 73;
  static const int LIEF_ELF_EM_ST19 = 74;
  static const int LIEF_ELF_EM_VAX = 75;
  static const int LIEF_ELF_EM_CRIS = 76;
  static const int LIEF_ELF_EM_JAVELIN = 77;
  static const int LIEF_ELF_EM_FIREPATH = 78;
  static const int LIEF_ELF_EM_ZSP = 79;
  static const int LIEF_ELF_EM_MMIX = 80;
  static const int LIEF_ELF_EM_HUANY = 81;
  static const int LIEF_ELF_EM_PRISM = 82;
  static const int LIEF_ELF_EM_AVR = 83;
  static const int LIEF_ELF_EM_FR30 = 84;
  static const int LIEF_ELF_EM_D10V = 85;
  static const int LIEF_ELF_EM_D30V = 86;
  static const int LIEF_ELF_EM_V850 = 87;
  static const int LIEF_ELF_EM_M32R = 88;
  static const int LIEF_ELF_EM_MN10300 = 89;
  static const int LIEF_ELF_EM_MN10200 = 90;
  static const int LIEF_ELF_EM_PJ = 91;
  static const int LIEF_ELF_EM_OPENRISC = 92;
  static const int LIEF_ELF_EM_ARC_COMPACT = 93;
  static const int LIEF_ELF_EM_XTENSA = 94;
  static const int LIEF_ELF_EM_VIDEOCORE = 95;
  static const int LIEF_ELF_EM_TMM_GPP = 96;
  static const int LIEF_ELF_EM_NS32K = 97;
  static const int LIEF_ELF_EM_TPC = 98;
  static const int LIEF_ELF_EM_SNP1K = 99;
  static const int LIEF_ELF_EM_ST200 = 100;
  static const int LIEF_ELF_EM_IP2K = 101;
  static const int LIEF_ELF_EM_MAX = 102;
  static const int LIEF_ELF_EM_CR = 103;
  static const int LIEF_ELF_EM_F2MC16 = 104;
  static const int LIEF_ELF_EM_MSP430 = 105;
  static const int LIEF_ELF_EM_BLACKFIN = 106;
  static const int LIEF_ELF_EM_SE_C33 = 107;
  static const int LIEF_ELF_EM_SEP = 108;
  static const int LIEF_ELF_EM_ARCA = 109;
  static const int LIEF_ELF_EM_UNICORE = 110;
  static const int LIEF_ELF_EM_EXCESS = 111;
  static const int LIEF_ELF_EM_DXP = 112;
  static const int LIEF_ELF_EM_ALTERA_NIOS2 = 113;
  static const int LIEF_ELF_EM_CRX = 114;
  static const int LIEF_ELF_EM_XGATE = 115;
  static const int LIEF_ELF_EM_C166 = 116;
  static const int LIEF_ELF_EM_M16C = 117;
  static const int LIEF_ELF_EM_DSPIC30F = 118;
  static const int LIEF_ELF_EM_CE = 119;
  static const int LIEF_ELF_EM_M32C = 120;
  static const int LIEF_ELF_EM_TSK3000 = 131;
  static const int LIEF_ELF_EM_RS08 = 132;
  static const int LIEF_ELF_EM_SHARC = 133;
  static const int LIEF_ELF_EM_ECOG2 = 134;
  static const int LIEF_ELF_EM_SCORE7 = 135;
  static const int LIEF_ELF_EM_DSP24 = 136;
  static const int LIEF_ELF_EM_VIDEOCORE3 = 137;
  static const int LIEF_ELF_EM_LATTICEMICO32 = 138;
  static const int LIEF_ELF_EM_SE_C17 = 139;
  static const int LIEF_ELF_EM_TI_C6000 = 140;
  static const int LIEF_ELF_EM_TI_C2000 = 141;
  static const int LIEF_ELF_EM_TI_C5500 = 142;
  static const int LIEF_ELF_EM_MMDSP_PLUS = 160;
  static const int LIEF_ELF_EM_CYPRESS_M8C = 161;
  static const int LIEF_ELF_EM_R32C = 162;
  static const int LIEF_ELF_EM_TRIMEDIA = 163;
  static const int LIEF_ELF_EM_HEXAGON = 164;
  static const int LIEF_ELF_EM_8051 = 165;
  static const int LIEF_ELF_EM_STXP7X = 166;
  static const int LIEF_ELF_EM_NDS32 = 167;
  static const int LIEF_ELF_EM_ECOG1 = 168;
  static const int LIEF_ELF_EM_ECOG1X = 168;
  static const int LIEF_ELF_EM_MAXQ30 = 169;
  static const int LIEF_ELF_EM_XIMO16 = 170;
  static const int LIEF_ELF_EM_MANIK = 171;
  static const int LIEF_ELF_EM_CRAYNV2 = 172;
  static const int LIEF_ELF_EM_RX = 173;
  static const int LIEF_ELF_EM_METAG = 174;
  static const int LIEF_ELF_EM_MCST_ELBRUS = 175;
  static const int LIEF_ELF_EM_ECOG16 = 176;
  static const int LIEF_ELF_EM_CR16 = 177;
  static const int LIEF_ELF_EM_ETPU = 178;
  static const int LIEF_ELF_EM_SLE9X = 179;
  static const int LIEF_ELF_EM_L10M = 180;
  static const int LIEF_ELF_EM_K10M = 181;
  static const int LIEF_ELF_EM_AARCH64 = 183;
  static const int LIEF_ELF_EM_AVR32 = 185;
  static const int LIEF_ELF_EM_STM8 = 186;
  static const int LIEF_ELF_EM_TILE64 = 187;
  static const int LIEF_ELF_EM_TILEPRO = 188;
  static const int LIEF_ELF_EM_CUDA = 190;
  static const int LIEF_ELF_EM_TILEGX = 191;
  static const int LIEF_ELF_EM_CLOUDSHIELD = 192;
  static const int LIEF_ELF_EM_COREA_1ST = 193;
  static const int LIEF_ELF_EM_COREA_2ND = 194;
  static const int LIEF_ELF_EM_ARC_COMPACT2 = 195;
  static const int LIEF_ELF_EM_OPEN8 = 196;
  static const int LIEF_ELF_EM_RL78 = 197;
  static const int LIEF_ELF_EM_VIDEOCORE5 = 198;
  static const int LIEF_ELF_EM_78KOR = 199;
  static const int LIEF_ELF_EM_56800EX = 200;
  static const int LIEF_ELF_EM_BA1 = 201;
  static const int LIEF_ELF_EM_BA2 = 202;
  static const int LIEF_ELF_EM_XCORE = 203;
  static const int LIEF_ELF_EM_MCHP_PIC = 204;
  static const int LIEF_ELF_EM_INTEL205 = 205;
  static const int LIEF_ELF_EM_INTEL206 = 206;
  static const int LIEF_ELF_EM_INTEL207 = 207;
  static const int LIEF_ELF_EM_INTEL208 = 208;
  static const int LIEF_ELF_EM_INTEL209 = 209;
  static const int LIEF_ELF_EM_KM32 = 210;
  static const int LIEF_ELF_EM_KMX32 = 211;
  static const int LIEF_ELF_EM_KMX16 = 212;
  static const int LIEF_ELF_EM_KMX8 = 213;
  static const int LIEF_ELF_EM_KVARC = 214;
  static const int LIEF_ELF_EM_CDP = 215;
  static const int LIEF_ELF_EM_COGE = 216;
  static const int LIEF_ELF_EM_COOL = 217;
  static const int LIEF_ELF_EM_NORC = 218;
  static const int LIEF_ELF_EM_CSR_KALIMBA = 219;
  static const int LIEF_ELF_EM_AMDGPU = 224;
  static const int LIEF_ELF_EM_RISCV = 243;
  static const int LIEF_ELF_EM_BPF = 247;
}

/// Object file classes.
abstract class LIEF_ELF_ELF_CLASS {
  static const int LIEF_ELF_ELFCLASSNONE = 0;
  static const int LIEF_ELF_ELFCLASS32 = 1;
  static const int LIEF_ELF_ELFCLASS64 = 2;
}

/// Object file byte orderings.
abstract class LIEF_ELF_ELF_DATA {
  static const int LIEF_ELF_ELFDATANONE = 0;
  static const int LIEF_ELF_ELFDATA2LSB = 1;
  static const int LIEF_ELF_ELFDATA2MSB = 2;
}

/// OS ABI identification.
abstract class LIEF_ELF_OS_ABI {
  static const int LIEF_ELF_ELFOSABI_SYSTEMV = 0;
  static const int LIEF_ELF_ELFOSABI_HPUX = 1;
  static const int LIEF_ELF_ELFOSABI_NETBSD = 2;
  static const int LIEF_ELF_ELFOSABI_GNU = 3;
  static const int LIEF_ELF_ELFOSABI_LINUX = 3;
  static const int LIEF_ELF_ELFOSABI_HURD = 4;
  static const int LIEF_ELF_ELFOSABI_SOLARIS = 6;
  static const int LIEF_ELF_ELFOSABI_AIX = 7;
  static const int LIEF_ELF_ELFOSABI_IRIX = 8;
  static const int LIEF_ELF_ELFOSABI_FREEBSD = 9;
  static const int LIEF_ELF_ELFOSABI_TRU64 = 10;
  static const int LIEF_ELF_ELFOSABI_MODESTO = 11;
  static const int LIEF_ELF_ELFOSABI_OPENBSD = 12;
  static const int LIEF_ELF_ELFOSABI_OPENVMS = 13;
  static const int LIEF_ELF_ELFOSABI_NSK = 14;
  static const int LIEF_ELF_ELFOSABI_AROS = 15;
  static const int LIEF_ELF_ELFOSABI_FENIXOS = 16;
  static const int LIEF_ELF_ELFOSABI_CLOUDABI = 17;
  static const int LIEF_ELF_ELFOSABI_C6000_ELFABI = 64;
  static const int LIEF_ELF_ELFOSABI_AMDGPU_HSA = 64;
  static const int LIEF_ELF_ELFOSABI_C6000_LINUX = 65;
  static const int LIEF_ELF_ELFOSABI_ARM = 97;
  static const int LIEF_ELF_ELFOSABI_STANDALONE = 255;
}

/// x86_64 relocations.
abstract class LIEF_ELF_RELOC_x86_64 {
  static const int LIEF_ELF_R_X86_64_NONE = 0;
  static const int LIEF_ELF_R_X86_64_64 = 1;
  static const int LIEF_ELF_R_X86_64_PC32 = 2;
  static const int LIEF_ELF_R_X86_64_GOT32 = 3;
  static const int LIEF_ELF_R_X86_64_PLT32 = 4;
  static const int LIEF_ELF_R_X86_64_COPY = 5;
  static const int LIEF_ELF_R_X86_64_GLOB_DAT = 6;
  static const int LIEF_ELF_R_X86_64_JUMP_SLOT = 7;
  static const int LIEF_ELF_R_X86_64_RELATIVE = 8;
  static const int LIEF_ELF_R_X86_64_GOTPCREL = 9;
  static const int LIEF_ELF_R_X86_64_32 = 10;
  static const int LIEF_ELF_R_X86_64_32S = 11;
  static const int LIEF_ELF_R_X86_64_16 = 12;
  static const int LIEF_ELF_R_X86_64_PC16 = 13;
  static const int LIEF_ELF_R_X86_64_8 = 14;
  static const int LIEF_ELF_R_X86_64_PC8 = 15;
  static const int LIEF_ELF_R_X86_64_DTPMOD64 = 16;
  static const int LIEF_ELF_R_X86_64_DTPOFF64 = 17;
  static const int LIEF_ELF_R_X86_64_TPOFF64 = 18;
  static const int LIEF_ELF_R_X86_64_TLSGD = 19;
  static const int LIEF_ELF_R_X86_64_TLSLD = 20;
  static const int LIEF_ELF_R_X86_64_DTPOFF32 = 21;
  static const int LIEF_ELF_R_X86_64_GOTTPOFF = 22;
  static const int LIEF_ELF_R_X86_64_TPOFF32 = 23;
  static const int LIEF_ELF_R_X86_64_PC64 = 24;
  static const int LIEF_ELF_R_X86_64_GOTOFF64 = 25;
  static const int LIEF_ELF_R_X86_64_GOTPC32 = 26;
  static const int LIEF_ELF_R_X86_64_GOT64 = 27;
  static const int LIEF_ELF_R_X86_64_GOTPCREL64 = 28;
  static const int LIEF_ELF_R_X86_64_GOTPC64 = 29;
  static const int LIEF_ELF_R_X86_64_GOTPLT64 = 30;
  static const int LIEF_ELF_R_X86_64_PLTOFF64 = 31;
  static const int LIEF_ELF_R_X86_64_SIZE32 = 32;
  static const int LIEF_ELF_R_X86_64_SIZE64 = 33;
  static const int LIEF_ELF_R_X86_64_GOTPC32_TLSDESC = 34;
  static const int LIEF_ELF_R_X86_64_TLSDESC_CALL = 35;
  static const int LIEF_ELF_R_X86_64_TLSDESC = 36;
  static const int LIEF_ELF_R_X86_64_IRELATIVE = 37;
  static const int LIEF_ELF_R_X86_64_RELATIVE64 = 38;
  static const int LIEF_ELF_R_X86_64_PC32_BND = 39;
  static const int LIEF_ELF_R_X86_64_PLT32_BND = 40;
  static const int LIEF_ELF_R_X86_64_GOTPCRELX = 41;
  static const int LIEF_ELF_R_X86_64_REX_GOTPCRELX = 42;
}

/// i386 relocations.
abstract class RELOC_i386 {
  static const int LIEF_ELF_R_386_NONE = 0;
  static const int LIEF_ELF_R_386_32 = 1;
  static const int LIEF_ELF_R_386_PC32 = 2;
  static const int LIEF_ELF_R_386_GOT32 = 3;
  static const int LIEF_ELF_R_386_PLT32 = 4;
  static const int LIEF_ELF_R_386_COPY = 5;
  static const int LIEF_ELF_R_386_GLOB_DAT = 6;
  static const int LIEF_ELF_R_386_JUMP_SLOT = 7;
  static const int LIEF_ELF_R_386_RELATIVE = 8;
  static const int LIEF_ELF_R_386_GOTOFF = 9;
  static const int LIEF_ELF_R_386_GOTPC = 10;
  static const int LIEF_ELF_R_386_32PLT = 11;
  static const int LIEF_ELF_R_386_TLS_TPOFF = 14;
  static const int LIEF_ELF_R_386_TLS_IE = 15;
  static const int LIEF_ELF_R_386_TLS_GOTIE = 16;
  static const int LIEF_ELF_R_386_TLS_LE = 17;
  static const int LIEF_ELF_R_386_TLS_GD = 18;
  static const int LIEF_ELF_R_386_TLS_LDM = 19;
  static const int LIEF_ELF_R_386_16 = 20;
  static const int LIEF_ELF_R_386_PC16 = 21;
  static const int LIEF_ELF_R_386_8 = 22;
  static const int LIEF_ELF_R_386_PC8 = 23;
  static const int LIEF_ELF_R_386_TLS_GD_32 = 24;
  static const int LIEF_ELF_R_386_TLS_GD_PUSH = 25;
  static const int LIEF_ELF_R_386_TLS_GD_CALL = 26;
  static const int LIEF_ELF_R_386_TLS_GD_POP = 27;
  static const int LIEF_ELF_R_386_TLS_LDM_32 = 28;
  static const int LIEF_ELF_R_386_TLS_LDM_PUSH = 29;
  static const int LIEF_ELF_R_386_TLS_LDM_CALL = 30;
  static const int LIEF_ELF_R_386_TLS_LDM_POP = 31;
  static const int LIEF_ELF_R_386_TLS_LDO_32 = 32;
  static const int LIEF_ELF_R_386_TLS_IE_32 = 33;
  static const int LIEF_ELF_R_386_TLS_LE_32 = 34;
  static const int LIEF_ELF_R_386_TLS_DTPMOD32 = 35;
  static const int LIEF_ELF_R_386_TLS_DTPOFF32 = 36;
  static const int LIEF_ELF_R_386_TLS_TPOFF32 = 37;
  static const int LIEF_ELF_R_386_TLS_GOTDESC = 39;
  static const int LIEF_ELF_R_386_TLS_DESC_CALL = 40;
  static const int LIEF_ELF_R_386_TLS_DESC = 41;
  static const int LIEF_ELF_R_386_IRELATIVE = 42;
  static const int LIEF_ELF_R_386_NUM = 43;
}

/// ELF Relocation types for PPC32
abstract class LIEF_ELF_RELOC_POWERPC32 {
  static const int LIEF_ELF_R_PPC_NONE = 0;
  static const int LIEF_ELF_R_PPC_ADDR32 = 1;
  static const int LIEF_ELF_R_PPC_ADDR24 = 2;
  static const int LIEF_ELF_R_PPC_ADDR16 = 3;
  static const int LIEF_ELF_R_PPC_ADDR16_LO = 4;
  static const int LIEF_ELF_R_PPC_ADDR16_HI = 5;
  static const int LIEF_ELF_R_PPC_ADDR16_HA = 6;
  static const int LIEF_ELF_R_PPC_ADDR14 = 7;
  static const int LIEF_ELF_R_PPC_ADDR14_BRTAKEN = 8;
  static const int LIEF_ELF_R_PPC_ADDR14_BRNTAKEN = 9;
  static const int LIEF_ELF_R_PPC_REL24 = 10;
  static const int LIEF_ELF_R_PPC_REL14 = 11;
  static const int LIEF_ELF_R_PPC_REL14_BRTAKEN = 12;
  static const int LIEF_ELF_R_PPC_REL14_BRNTAKEN = 13;
  static const int LIEF_ELF_R_PPC_GOT16 = 14;
  static const int LIEF_ELF_R_PPC_GOT16_LO = 15;
  static const int LIEF_ELF_R_PPC_GOT16_HI = 16;
  static const int LIEF_ELF_R_PPC_GOT16_HA = 17;
  static const int LIEF_ELF_R_PPC_PLTREL24 = 18;
  static const int LIEF_ELF_R_PPC_JMP_SLOT = 21;
  static const int LIEF_ELF_R_PPC_RELATIVE = 22;
  static const int LIEF_ELF_R_PPC_LOCAL24PC = 23;
  static const int LIEF_ELF_R_PPC_REL32 = 26;
  static const int LIEF_ELF_R_PPC_TLS = 67;
  static const int LIEF_ELF_R_PPC_DTPMOD32 = 68;
  static const int LIEF_ELF_R_PPC_TPREL16 = 69;
  static const int LIEF_ELF_R_PPC_TPREL16_LO = 70;
  static const int LIEF_ELF_R_PPC_TPREL16_HI = 71;
  static const int LIEF_ELF_R_PPC_TPREL16_HA = 72;
  static const int LIEF_ELF_R_PPC_TPREL32 = 73;
  static const int LIEF_ELF_R_PPC_DTPREL16 = 74;
  static const int LIEF_ELF_R_PPC_DTPREL16_LO = 75;
  static const int LIEF_ELF_R_PPC_DTPREL16_HI = 76;
  static const int LIEF_ELF_R_PPC_DTPREL16_HA = 77;
  static const int LIEF_ELF_R_PPC_DTPREL32 = 78;
  static const int LIEF_ELF_R_PPC_GOT_TLSGD16 = 79;
  static const int LIEF_ELF_R_PPC_GOT_TLSGD16_LO = 80;
  static const int LIEF_ELF_R_PPC_GOT_TLSGD16_HI = 81;
  static const int LIEF_ELF_R_PPC_GOT_TLSGD16_HA = 82;
  static const int LIEF_ELF_R_PPC_GOT_TLSLD16 = 83;
  static const int LIEF_ELF_R_PPC_GOT_TLSLD16_LO = 84;
  static const int LIEF_ELF_R_PPC_GOT_TLSLD16_HI = 85;
  static const int LIEF_ELF_R_PPC_GOT_TLSLD16_HA = 86;
  static const int LIEF_ELF_R_PPC_GOT_TPREL16 = 87;
  static const int LIEF_ELF_R_PPC_GOT_TPREL16_LO = 88;
  static const int LIEF_ELF_R_PPC_GOT_TPREL16_HI = 89;
  static const int LIEF_ELF_R_PPC_GOT_TPREL16_HA = 90;
  static const int LIEF_ELF_R_PPC_GOT_DTPREL16 = 91;
  static const int LIEF_ELF_R_PPC_GOT_DTPREL16_LO = 92;
  static const int LIEF_ELF_R_PPC_GOT_DTPREL16_HI = 93;
  static const int LIEF_ELF_R_PPC_GOT_DTPREL16_HA = 94;
  static const int LIEF_ELF_R_PPC_TLSGD = 95;
  static const int LIEF_ELF_R_PPC_TLSLD = 96;
  static const int LIEF_ELF_R_PPC_REL16 = 249;
  static const int LIEF_ELF_R_PPC_REL16_LO = 250;
  static const int LIEF_ELF_R_PPC_REL16_HI = 251;
  static const int LIEF_ELF_R_PPC_REL16_HA = 252;
}

/// ELF Relocation types for PPC64
abstract class LIEF_ELF_RELOC_POWERPC64 {
  static const int LIEF_ELF_R_PPC64_NONE = 0;
  static const int LIEF_ELF_R_PPC64_ADDR32 = 1;
  static const int LIEF_ELF_R_PPC64_ADDR24 = 2;
  static const int LIEF_ELF_R_PPC64_ADDR16 = 3;
  static const int LIEF_ELF_R_PPC64_ADDR16_LO = 4;
  static const int LIEF_ELF_R_PPC64_ADDR16_HI = 5;
  static const int LIEF_ELF_R_PPC64_ADDR16_HA = 6;
  static const int LIEF_ELF_R_PPC64_ADDR14 = 7;
  static const int LIEF_ELF_R_PPC64_ADDR14_BRTAKEN = 8;
  static const int LIEF_ELF_R_PPC64_ADDR14_BRNTAKEN = 9;
  static const int LIEF_ELF_R_PPC64_REL24 = 10;
  static const int LIEF_ELF_R_PPC64_REL14 = 11;
  static const int LIEF_ELF_R_PPC64_REL14_BRTAKEN = 12;
  static const int LIEF_ELF_R_PPC64_REL14_BRNTAKEN = 13;
  static const int LIEF_ELF_R_PPC64_GOT16 = 14;
  static const int LIEF_ELF_R_PPC64_GOT16_LO = 15;
  static const int LIEF_ELF_R_PPC64_GOT16_HI = 16;
  static const int LIEF_ELF_R_PPC64_GOT16_HA = 17;
  static const int LIEF_ELF_R_PPC64_JMP_SLOT = 21;
  static const int LIEF_ELF_R_PPC64_RELATIVE = 22;
  static const int LIEF_ELF_R_PPC64_REL32 = 26;
  static const int LIEF_ELF_R_PPC64_ADDR64 = 38;
  static const int LIEF_ELF_R_PPC64_ADDR16_HIGHER = 39;
  static const int LIEF_ELF_R_PPC64_ADDR16_HIGHERA = 40;
  static const int LIEF_ELF_R_PPC64_ADDR16_HIGHEST = 41;
  static const int LIEF_ELF_R_PPC64_ADDR16_HIGHESTA = 42;
  static const int LIEF_ELF_R_PPC64_REL64 = 44;
  static const int LIEF_ELF_R_PPC64_TOC16 = 47;
  static const int LIEF_ELF_R_PPC64_TOC16_LO = 48;
  static const int LIEF_ELF_R_PPC64_TOC16_HI = 49;
  static const int LIEF_ELF_R_PPC64_TOC16_HA = 50;
  static const int LIEF_ELF_R_PPC64_TOC = 51;
  static const int LIEF_ELF_R_PPC64_ADDR16_DS = 56;
  static const int LIEF_ELF_R_PPC64_ADDR16_LO_DS = 57;
  static const int LIEF_ELF_R_PPC64_GOT16_DS = 58;
  static const int LIEF_ELF_R_PPC64_GOT16_LO_DS = 59;
  static const int LIEF_ELF_R_PPC64_TOC16_DS = 63;
  static const int LIEF_ELF_R_PPC64_TOC16_LO_DS = 64;
  static const int LIEF_ELF_R_PPC64_TLS = 67;
  static const int LIEF_ELF_R_PPC64_DTPMOD64 = 68;
  static const int LIEF_ELF_R_PPC64_TPREL16 = 69;
  static const int LIEF_ELF_R_PPC64_TPREL16_LO = 70;
  static const int LIEF_ELF_R_PPC64_TPREL16_HI = 71;
  static const int LIEF_ELF_R_PPC64_TPREL16_HA = 72;
  static const int LIEF_ELF_R_PPC64_TPREL64 = 73;
  static const int LIEF_ELF_R_PPC64_DTPREL16 = 74;
  static const int LIEF_ELF_R_PPC64_DTPREL16_LO = 75;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HI = 76;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HA = 77;
  static const int LIEF_ELF_R_PPC64_DTPREL64 = 78;
  static const int LIEF_ELF_R_PPC64_GOT_TLSGD16 = 79;
  static const int LIEF_ELF_R_PPC64_GOT_TLSGD16_LO = 80;
  static const int LIEF_ELF_R_PPC64_GOT_TLSGD16_HI = 81;
  static const int LIEF_ELF_R_PPC64_GOT_TLSGD16_HA = 82;
  static const int LIEF_ELF_R_PPC64_GOT_TLSLD16 = 83;
  static const int LIEF_ELF_R_PPC64_GOT_TLSLD16_LO = 84;
  static const int LIEF_ELF_R_PPC64_GOT_TLSLD16_HI = 85;
  static const int LIEF_ELF_R_PPC64_GOT_TLSLD16_HA = 86;
  static const int LIEF_ELF_R_PPC64_GOT_TPREL16_DS = 87;
  static const int LIEF_ELF_R_PPC64_GOT_TPREL16_LO_DS = 88;
  static const int LIEF_ELF_R_PPC64_GOT_TPREL16_HI = 89;
  static const int LIEF_ELF_R_PPC64_GOT_TPREL16_HA = 90;
  static const int LIEF_ELF_R_PPC64_GOT_DTPREL16_DS = 91;
  static const int LIEF_ELF_R_PPC64_GOT_DTPREL16_LO_DS = 92;
  static const int LIEF_ELF_R_PPC64_GOT_DTPREL16_HI = 93;
  static const int LIEF_ELF_R_PPC64_GOT_DTPREL16_HA = 94;
  static const int LIEF_ELF_R_PPC64_TPREL16_DS = 95;
  static const int LIEF_ELF_R_PPC64_TPREL16_LO_DS = 96;
  static const int LIEF_ELF_R_PPC64_TPREL16_HIGHER = 97;
  static const int LIEF_ELF_R_PPC64_TPREL16_HIGHERA = 98;
  static const int LIEF_ELF_R_PPC64_TPREL16_HIGHEST = 99;
  static const int LIEF_ELF_R_PPC64_TPREL16_HIGHESTA = 100;
  static const int LIEF_ELF_R_PPC64_DTPREL16_DS = 101;
  static const int LIEF_ELF_R_PPC64_DTPREL16_LO_DS = 102;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HIGHER = 103;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HIGHERA = 104;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HIGHEST = 105;
  static const int LIEF_ELF_R_PPC64_DTPREL16_HIGHESTA = 106;
  static const int LIEF_ELF_R_PPC64_TLSGD = 107;
  static const int LIEF_ELF_R_PPC64_TLSLD = 108;
  static const int LIEF_ELF_R_PPC64_REL16 = 249;
  static const int LIEF_ELF_R_PPC64_REL16_LO = 250;
  static const int LIEF_ELF_R_PPC64_REL16_HI = 251;
  static const int LIEF_ELF_R_PPC64_REL16_HA = 252;
}

/// ELF Relocation types for AArch64
abstract class LIEF_ELF_RELOC_AARCH64 {
  static const int LIEF_ELF_R_AARCH64_NONE = 0;
  static const int LIEF_ELF_R_AARCH64_ABS64 = 257;
  static const int LIEF_ELF_R_AARCH64_ABS32 = 258;
  static const int LIEF_ELF_R_AARCH64_ABS16 = 259;
  static const int LIEF_ELF_R_AARCH64_PREL64 = 260;
  static const int LIEF_ELF_R_AARCH64_PREL32 = 261;
  static const int LIEF_ELF_R_AARCH64_PREL16 = 262;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G0 = 263;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G0_NC = 264;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G1 = 265;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G1_NC = 266;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G2 = 267;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G2_NC = 268;
  static const int LIEF_ELF_R_AARCH64_MOVW_UABS_G3 = 269;
  static const int LIEF_ELF_R_AARCH64_MOVW_SABS_G0 = 270;
  static const int LIEF_ELF_R_AARCH64_MOVW_SABS_G1 = 271;
  static const int LIEF_ELF_R_AARCH64_MOVW_SABS_G2 = 272;
  static const int LIEF_ELF_R_AARCH64_LD_PREL_LO19 = 273;
  static const int LIEF_ELF_R_AARCH64_ADR_PREL_LO21 = 274;
  static const int LIEF_ELF_R_AARCH64_ADR_PREL_PG_HI21 = 275;
  static const int LIEF_ELF_R_AARCH64_ADR_PREL_PG_HI21_NC = 276;
  static const int LIEF_ELF_R_AARCH64_ADD_ABS_LO12_NC = 277;
  static const int LIEF_ELF_R_AARCH64_LDST8_ABS_LO12_NC = 278;
  static const int LIEF_ELF_R_AARCH64_TSTBR14 = 279;
  static const int LIEF_ELF_R_AARCH64_CONDBR19 = 280;
  static const int LIEF_ELF_R_AARCH64_JUMP26 = 282;
  static const int LIEF_ELF_R_AARCH64_CALL26 = 283;
  static const int LIEF_ELF_R_AARCH64_LDST16_ABS_LO12_NC = 284;
  static const int LIEF_ELF_R_AARCH64_LDST32_ABS_LO12_NC = 285;
  static const int LIEF_ELF_R_AARCH64_LDST64_ABS_LO12_NC = 286;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G0 = 287;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G0_NC = 288;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G1 = 289;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G1_NC = 290;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G2 = 291;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G2_NC = 292;
  static const int LIEF_ELF_R_AARCH64_MOVW_PREL_G3 = 293;
  static const int LIEF_ELF_R_AARCH64_LDST128_ABS_LO12_NC = 299;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G0 = 300;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G0_NC = 301;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G1 = 302;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G1_NC = 303;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G2 = 304;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G2_NC = 305;
  static const int LIEF_ELF_R_AARCH64_MOVW_GOTOFF_G3 = 306;
  static const int LIEF_ELF_R_AARCH64_GOTREL64 = 307;
  static const int LIEF_ELF_R_AARCH64_GOTREL32 = 308;
  static const int LIEF_ELF_R_AARCH64_GOT_LD_PREL19 = 309;
  static const int LIEF_ELF_R_AARCH64_LD64_GOTOFF_LO15 = 310;
  static const int LIEF_ELF_R_AARCH64_ADR_GOT_PAGE = 311;
  static const int LIEF_ELF_R_AARCH64_LD64_GOT_LO12_NC = 312;
  static const int LIEF_ELF_R_AARCH64_LD64_GOTPAGE_LO15 = 313;
  static const int LIEF_ELF_R_AARCH64_TLSGD_ADR_PREL21 = 512;
  static const int LIEF_ELF_R_AARCH64_TLSGD_ADR_PAGE21 = 513;
  static const int LIEF_ELF_R_AARCH64_TLSGD_ADD_LO12_NC = 514;
  static const int LIEF_ELF_R_AARCH64_TLSGD_MOVW_G1 = 515;
  static const int LIEF_ELF_R_AARCH64_TLSGD_MOVW_G0_NC = 516;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADR_PREL21 = 517;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADR_PAGE21 = 518;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADD_LO12_NC = 519;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_G1 = 520;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_G0_NC = 521;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LD_PREL19 = 522;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_DTPREL_G2 = 523;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_DTPREL_G1 = 524;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC = 525;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_DTPREL_G0 = 526;
  static const int LIEF_ELF_R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC = 527;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADD_DTPREL_HI12 = 528;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADD_DTPREL_LO12 = 529;
  static const int LIEF_ELF_R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC = 530;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST8_DTPREL_LO12 = 531;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC = 532;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST16_DTPREL_LO12 = 533;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC = 534;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST32_DTPREL_LO12 = 535;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC = 536;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST64_DTPREL_LO12 = 537;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC = 538;
  static const int LIEF_ELF_R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 = 539;
  static const int LIEF_ELF_R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC = 540;
  static const int LIEF_ELF_R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 = 541;
  static const int LIEF_ELF_R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC = 542;
  static const int LIEF_ELF_R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 = 543;
  static const int LIEF_ELF_R_AARCH64_TLSLE_MOVW_TPREL_G2 = 544;
  static const int LIEF_ELF_R_AARCH64_TLSLE_MOVW_TPREL_G1 = 545;
  static const int LIEF_ELF_R_AARCH64_TLSLE_MOVW_TPREL_G1_NC = 546;
  static const int LIEF_ELF_R_AARCH64_TLSLE_MOVW_TPREL_G0 = 547;
  static const int LIEF_ELF_R_AARCH64_TLSLE_MOVW_TPREL_G0_NC = 548;
  static const int LIEF_ELF_R_AARCH64_TLSLE_ADD_TPREL_HI12 = 549;
  static const int LIEF_ELF_R_AARCH64_TLSLE_ADD_TPREL_LO12 = 550;
  static const int LIEF_ELF_R_AARCH64_TLSLE_ADD_TPREL_LO12_NC = 551;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST8_TPREL_LO12 = 552;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC = 553;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST16_TPREL_LO12 = 554;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC = 555;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST32_TPREL_LO12 = 556;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC = 557;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST64_TPREL_LO12 = 558;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC = 559;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_LD_PREL19 = 560;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_ADR_PREL21 = 561;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_ADR_PAGE21 = 562;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_LD64_LO12_NC = 563;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_ADD_LO12_NC = 564;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_OFF_G1 = 565;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_OFF_G0_NC = 566;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_LDR = 567;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_ADD = 568;
  static const int LIEF_ELF_R_AARCH64_TLSDESC_CALL = 569;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST128_TPREL_LO12 = 570;
  static const int LIEF_ELF_R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC = 571;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST128_DTPREL_LO12 = 572;
  static const int LIEF_ELF_R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573;
  static const int LIEF_ELF_R_AARCH64_COPY = 1024;
  static const int LIEF_ELF_R_AARCH64_GLOB_DAT = 1025;
  static const int LIEF_ELF_R_AARCH64_JUMP_SLOT = 1026;
  static const int LIEF_ELF_R_AARCH64_RELATIVE = 1027;
  static const int LIEF_ELF_R_AARCH64_TLS_DTPREL64 = 1028;
  static const int LIEF_ELF_R_AARCH64_TLS_DTPMOD64 = 1029;
  static const int LIEF_ELF_R_AARCH64_TLS_TPREL64 = 1030;
  static const int LIEF_ELF_R_AARCH64_TLSDESC = 1031;
  static const int LIEF_ELF_R_AARCH64_IRELATIVE = 1032;
}

/// ELF Relocation types for ARM
abstract class LIEF_ELF_RELOC_ARM {
  static const int LIEF_ELF_R_ARM_NONE = 0;
  static const int LIEF_ELF_R_ARM_PC24 = 1;
  static const int LIEF_ELF_R_ARM_ABS32 = 2;
  static const int LIEF_ELF_R_ARM_REL32 = 3;
  static const int LIEF_ELF_R_ARM_LDR_PC_G0 = 4;
  static const int LIEF_ELF_R_ARM_ABS16 = 5;
  static const int LIEF_ELF_R_ARM_ABS12 = 6;
  static const int LIEF_ELF_R_ARM_THM_ABS5 = 7;
  static const int LIEF_ELF_R_ARM_ABS8 = 8;
  static const int LIEF_ELF_R_ARM_SBREL32 = 9;
  static const int LIEF_ELF_R_ARM_THM_CALL = 10;
  static const int LIEF_ELF_R_ARM_THM_PC8 = 11;
  static const int LIEF_ELF_R_ARM_BREL_ADJ = 12;
  static const int LIEF_ELF_R_ARM_TLS_DESC = 13;
  static const int LIEF_ELF_R_ARM_THM_SWI8 = 14;
  static const int LIEF_ELF_R_ARM_XPC25 = 15;
  static const int LIEF_ELF_R_ARM_THM_XPC22 = 16;
  static const int LIEF_ELF_R_ARM_TLS_DTPMOD32 = 17;
  static const int LIEF_ELF_R_ARM_TLS_DTPOFF32 = 18;
  static const int LIEF_ELF_R_ARM_TLS_TPOFF32 = 19;
  static const int LIEF_ELF_R_ARM_COPY = 20;
  static const int LIEF_ELF_R_ARM_GLOB_DAT = 21;
  static const int LIEF_ELF_R_ARM_JUMP_SLOT = 22;
  static const int LIEF_ELF_R_ARM_RELATIVE = 23;
  static const int LIEF_ELF_R_ARM_GOTOFF32 = 24;
  static const int LIEF_ELF_R_ARM_BASE_PREL = 25;
  static const int LIEF_ELF_R_ARM_GOT_BREL = 26;
  static const int LIEF_ELF_R_ARM_PLT32 = 27;
  static const int LIEF_ELF_R_ARM_CALL = 28;
  static const int LIEF_ELF_R_ARM_JUMP24 = 29;
  static const int LIEF_ELF_R_ARM_THM_JUMP24 = 30;
  static const int LIEF_ELF_R_ARM_BASE_ABS = 31;
  static const int LIEF_ELF_R_ARM_ALU_PCREL_7_0 = 32;
  static const int LIEF_ELF_R_ARM_ALU_PCREL_15_8 = 33;
  static const int LIEF_ELF_R_ARM_ALU_PCREL_23_15 = 34;
  static const int LIEF_ELF_R_ARM_LDR_SBREL_11_0_NC = 35;
  static const int LIEF_ELF_R_ARM_ALU_SBREL_19_12_NC = 36;
  static const int LIEF_ELF_R_ARM_ALU_SBREL_27_20_CK = 37;
  static const int LIEF_ELF_R_ARM_TARGET1 = 38;
  static const int LIEF_ELF_R_ARM_SBREL31 = 39;
  static const int LIEF_ELF_R_ARM_V4BX = 40;
  static const int LIEF_ELF_R_ARM_TARGET2 = 41;
  static const int LIEF_ELF_R_ARM_PREL31 = 42;
  static const int LIEF_ELF_R_ARM_MOVW_ABS_NC = 43;
  static const int LIEF_ELF_R_ARM_MOVT_ABS = 44;
  static const int LIEF_ELF_R_ARM_MOVW_PREL_NC = 45;
  static const int LIEF_ELF_R_ARM_MOVT_PREL = 46;
  static const int LIEF_ELF_R_ARM_THM_MOVW_ABS_NC = 47;
  static const int LIEF_ELF_R_ARM_THM_MOVT_ABS = 48;
  static const int LIEF_ELF_R_ARM_THM_MOVW_PREL_NC = 49;
  static const int LIEF_ELF_R_ARM_THM_MOVT_PREL = 50;
  static const int LIEF_ELF_R_ARM_THM_JUMP19 = 51;
  static const int LIEF_ELF_R_ARM_THM_JUMP6 = 52;
  static const int LIEF_ELF_R_ARM_THM_ALU_PREL_11_0 = 53;
  static const int LIEF_ELF_R_ARM_THM_PC12 = 54;
  static const int LIEF_ELF_R_ARM_ABS32_NOI = 55;
  static const int LIEF_ELF_R_ARM_REL32_NOI = 56;
  static const int LIEF_ELF_R_ARM_ALU_PC_G0_NC = 57;
  static const int LIEF_ELF_R_ARM_ALU_PC_G0 = 58;
  static const int LIEF_ELF_R_ARM_ALU_PC_G1_NC = 59;
  static const int LIEF_ELF_R_ARM_ALU_PC_G1 = 60;
  static const int LIEF_ELF_R_ARM_ALU_PC_G2 = 61;
  static const int LIEF_ELF_R_ARM_LDR_PC_G1 = 62;
  static const int LIEF_ELF_R_ARM_LDR_PC_G2 = 63;
  static const int LIEF_ELF_R_ARM_LDRS_PC_G0 = 64;
  static const int LIEF_ELF_R_ARM_LDRS_PC_G1 = 65;
  static const int LIEF_ELF_R_ARM_LDRS_PC_G2 = 66;
  static const int LIEF_ELF_R_ARM_LDC_PC_G0 = 67;
  static const int LIEF_ELF_R_ARM_LDC_PC_G1 = 68;
  static const int LIEF_ELF_R_ARM_LDC_PC_G2 = 69;
  static const int LIEF_ELF_R_ARM_ALU_SB_G0_NC = 70;
  static const int LIEF_ELF_R_ARM_ALU_SB_G0 = 71;
  static const int LIEF_ELF_R_ARM_ALU_SB_G1_NC = 72;
  static const int LIEF_ELF_R_ARM_ALU_SB_G1 = 73;
  static const int LIEF_ELF_R_ARM_ALU_SB_G2 = 74;
  static const int LIEF_ELF_R_ARM_LDR_SB_G0 = 75;
  static const int LIEF_ELF_R_ARM_LDR_SB_G1 = 76;
  static const int LIEF_ELF_R_ARM_LDR_SB_G2 = 77;
  static const int LIEF_ELF_R_ARM_LDRS_SB_G0 = 78;
  static const int LIEF_ELF_R_ARM_LDRS_SB_G1 = 79;
  static const int LIEF_ELF_R_ARM_LDRS_SB_G2 = 80;
  static const int LIEF_ELF_R_ARM_LDC_SB_G0 = 81;
  static const int LIEF_ELF_R_ARM_LDC_SB_G1 = 82;
  static const int LIEF_ELF_R_ARM_LDC_SB_G2 = 83;
  static const int LIEF_ELF_R_ARM_MOVW_BREL_NC = 84;
  static const int LIEF_ELF_R_ARM_MOVT_BREL = 85;
  static const int LIEF_ELF_R_ARM_MOVW_BREL = 86;
  static const int LIEF_ELF_R_ARM_THM_MOVW_BREL_NC = 87;
  static const int LIEF_ELF_R_ARM_THM_MOVT_BREL = 88;
  static const int LIEF_ELF_R_ARM_THM_MOVW_BREL = 89;
  static const int LIEF_ELF_R_ARM_TLS_GOTDESC = 90;
  static const int LIEF_ELF_R_ARM_TLS_CALL = 91;
  static const int LIEF_ELF_R_ARM_TLS_DESCSEQ = 92;
  static const int LIEF_ELF_R_ARM_THM_TLS_CALL = 93;
  static const int LIEF_ELF_R_ARM_PLT32_ABS = 94;
  static const int LIEF_ELF_R_ARM_GOT_ABS = 95;
  static const int LIEF_ELF_R_ARM_GOT_PREL = 96;
  static const int LIEF_ELF_R_ARM_GOT_BREL12 = 97;
  static const int LIEF_ELF_R_ARM_GOTOFF12 = 98;
  static const int LIEF_ELF_R_ARM_GOTRELAX = 99;
  static const int LIEF_ELF_R_ARM_GNU_VTENTRY = 100;
  static const int LIEF_ELF_R_ARM_GNU_VTINHERIT = 101;
  static const int LIEF_ELF_R_ARM_THM_JUMP11 = 102;
  static const int LIEF_ELF_R_ARM_THM_JUMP8 = 103;
  static const int LIEF_ELF_R_ARM_TLS_GD32 = 104;
  static const int LIEF_ELF_R_ARM_TLS_LDM32 = 105;
  static const int LIEF_ELF_R_ARM_TLS_LDO32 = 106;
  static const int LIEF_ELF_R_ARM_TLS_IE32 = 107;
  static const int LIEF_ELF_R_ARM_TLS_LE32 = 108;
  static const int LIEF_ELF_R_ARM_TLS_LDO12 = 109;
  static const int LIEF_ELF_R_ARM_TLS_LE12 = 110;
  static const int LIEF_ELF_R_ARM_TLS_IE12GP = 111;
  static const int LIEF_ELF_R_ARM_PRIVATE_0 = 112;
  static const int LIEF_ELF_R_ARM_PRIVATE_1 = 113;
  static const int LIEF_ELF_R_ARM_PRIVATE_2 = 114;
  static const int LIEF_ELF_R_ARM_PRIVATE_3 = 115;
  static const int LIEF_ELF_R_ARM_PRIVATE_4 = 116;
  static const int LIEF_ELF_R_ARM_PRIVATE_5 = 117;
  static const int LIEF_ELF_R_ARM_PRIVATE_6 = 118;
  static const int LIEF_ELF_R_ARM_PRIVATE_7 = 119;
  static const int LIEF_ELF_R_ARM_PRIVATE_8 = 120;
  static const int LIEF_ELF_R_ARM_PRIVATE_9 = 121;
  static const int LIEF_ELF_R_ARM_PRIVATE_10 = 122;
  static const int LIEF_ELF_R_ARM_PRIVATE_11 = 123;
  static const int LIEF_ELF_R_ARM_PRIVATE_12 = 124;
  static const int LIEF_ELF_R_ARM_PRIVATE_13 = 125;
  static const int LIEF_ELF_R_ARM_PRIVATE_14 = 126;
  static const int LIEF_ELF_R_ARM_PRIVATE_15 = 127;
  static const int LIEF_ELF_R_ARM_ME_TOO = 128;
  static const int LIEF_ELF_R_ARM_THM_TLS_DESCSEQ16 = 129;
  static const int LIEF_ELF_R_ARM_THM_TLS_DESCSEQ32 = 130;
  static const int LIEF_ELF_R_ARM_IRELATIVE = 160;
  static const int LIEF_ELF_R_ARM_RXPC25 = 249;
  static const int LIEF_ELF_R_ARM_RSBREL32 = 250;
  static const int LIEF_ELF_R_ARM_THM_RPC22 = 251;
  static const int LIEF_ELF_R_ARM_RREL32 = 252;
  static const int LIEF_ELF_R_ARM_RPC24 = 253;
  static const int LIEF_ELF_R_ARM_RBASE = 254;
}

/// ELF Relocation types for Mips
abstract class LIEF_ELF_RELOC_MIPS {
  static const int LIEF_ELF_R_MIPS_NONE = 0;
  static const int LIEF_ELF_R_MIPS_16 = 1;
  static const int LIEF_ELF_R_MIPS_32 = 2;
  static const int LIEF_ELF_R_MIPS_REL32 = 3;
  static const int LIEF_ELF_R_MIPS_26 = 4;
  static const int LIEF_ELF_R_MIPS_HI16 = 5;
  static const int LIEF_ELF_R_MIPS_LO16 = 6;
  static const int LIEF_ELF_R_MIPS_GPREL16 = 7;
  static const int LIEF_ELF_R_MIPS_LITERAL = 8;
  static const int LIEF_ELF_R_MIPS_GOT16 = 9;
  static const int LIEF_ELF_R_MIPS_PC16 = 10;
  static const int LIEF_ELF_R_MIPS_CALL16 = 11;
  static const int LIEF_ELF_R_MIPS_GPREL32 = 12;
  static const int LIEF_ELF_R_MIPS_UNUSED1 = 13;
  static const int LIEF_ELF_R_MIPS_UNUSED2 = 14;
  static const int LIEF_ELF_R_MIPS_UNUSED3 = 15;
  static const int LIEF_ELF_R_MIPS_SHIFT5 = 16;
  static const int LIEF_ELF_R_MIPS_SHIFT6 = 17;
  static const int LIEF_ELF_R_MIPS_64 = 18;
  static const int LIEF_ELF_R_MIPS_GOT_DISP = 19;
  static const int LIEF_ELF_R_MIPS_GOT_PAGE = 20;
  static const int LIEF_ELF_R_MIPS_GOT_OFST = 21;
  static const int LIEF_ELF_R_MIPS_GOT_HI16 = 22;
  static const int LIEF_ELF_R_MIPS_GOT_LO16 = 23;
  static const int LIEF_ELF_R_MIPS_SUB = 24;
  static const int LIEF_ELF_R_MIPS_INSERT_A = 25;
  static const int LIEF_ELF_R_MIPS_INSERT_B = 26;
  static const int LIEF_ELF_R_MIPS_DELETE = 27;
  static const int LIEF_ELF_R_MIPS_HIGHER = 28;
  static const int LIEF_ELF_R_MIPS_HIGHEST = 29;
  static const int LIEF_ELF_R_MIPS_CALL_HI16 = 30;
  static const int LIEF_ELF_R_MIPS_CALL_LO16 = 31;
  static const int LIEF_ELF_R_MIPS_SCN_DISP = 32;
  static const int LIEF_ELF_R_MIPS_REL16 = 33;
  static const int LIEF_ELF_R_MIPS_ADD_IMMEDIATE = 34;
  static const int LIEF_ELF_R_MIPS_PJUMP = 35;
  static const int LIEF_ELF_R_MIPS_RELGOT = 36;
  static const int LIEF_ELF_R_MIPS_JALR = 37;
  static const int LIEF_ELF_R_MIPS_TLS_DTPMOD32 = 38;
  static const int LIEF_ELF_R_MIPS_TLS_DTPREL32 = 39;
  static const int LIEF_ELF_R_MIPS_TLS_DTPMOD64 = 40;
  static const int LIEF_ELF_R_MIPS_TLS_DTPREL64 = 41;
  static const int LIEF_ELF_R_MIPS_TLS_GD = 42;
  static const int LIEF_ELF_R_MIPS_TLS_LDM = 43;
  static const int LIEF_ELF_R_MIPS_TLS_DTPREL_HI16 = 44;
  static const int LIEF_ELF_R_MIPS_TLS_DTPREL_LO16 = 45;
  static const int LIEF_ELF_R_MIPS_TLS_GOTTPREL = 46;
  static const int LIEF_ELF_R_MIPS_TLS_TPREL32 = 47;
  static const int LIEF_ELF_R_MIPS_TLS_TPREL64 = 48;
  static const int LIEF_ELF_R_MIPS_TLS_TPREL_HI16 = 49;
  static const int LIEF_ELF_R_MIPS_TLS_TPREL_LO16 = 50;
  static const int LIEF_ELF_R_MIPS_GLOB_DAT = 51;
  static const int LIEF_ELF_R_MIPS_PC21_S2 = 60;
  static const int LIEF_ELF_R_MIPS_PC26_S2 = 61;
  static const int LIEF_ELF_R_MIPS_PC18_S3 = 62;
  static const int LIEF_ELF_R_MIPS_PC19_S2 = 63;
  static const int LIEF_ELF_R_MIPS_PCHI16 = 64;
  static const int LIEF_ELF_R_MIPS_PCLO16 = 65;
  static const int LIEF_ELF_R_MIPS16_26 = 100;
  static const int LIEF_ELF_R_MIPS16_GPREL = 101;
  static const int LIEF_ELF_R_MIPS16_GOT16 = 102;
  static const int LIEF_ELF_R_MIPS16_CALL16 = 103;
  static const int LIEF_ELF_R_MIPS16_HI16 = 104;
  static const int LIEF_ELF_R_MIPS16_LO16 = 105;
  static const int LIEF_ELF_R_MIPS16_TLS_GD = 106;
  static const int LIEF_ELF_R_MIPS16_TLS_LDM = 107;
  static const int LIEF_ELF_R_MIPS16_TLS_DTPREL_HI16 = 108;
  static const int LIEF_ELF_R_MIPS16_TLS_DTPREL_LO16 = 109;
  static const int LIEF_ELF_R_MIPS16_TLS_GOTTPREL = 110;
  static const int LIEF_ELF_R_MIPS16_TLS_TPREL_HI16 = 111;
  static const int LIEF_ELF_R_MIPS16_TLS_TPREL_LO16 = 112;
  static const int LIEF_ELF_R_MIPS_COPY = 126;
  static const int LIEF_ELF_R_MIPS_JUMP_SLOT = 127;
  static const int LIEF_ELF_R_MICROMIPS_26_S1 = 133;
  static const int LIEF_ELF_R_MICROMIPS_HI16 = 134;
  static const int LIEF_ELF_R_MICROMIPS_LO16 = 135;
  static const int LIEF_ELF_R_MICROMIPS_GPREL16 = 136;
  static const int LIEF_ELF_R_MICROMIPS_LITERAL = 137;
  static const int LIEF_ELF_R_MICROMIPS_GOT16 = 138;
  static const int LIEF_ELF_R_MICROMIPS_PC7_S1 = 139;
  static const int LIEF_ELF_R_MICROMIPS_PC10_S1 = 140;
  static const int LIEF_ELF_R_MICROMIPS_PC16_S1 = 141;
  static const int LIEF_ELF_R_MICROMIPS_CALL16 = 142;
  static const int LIEF_ELF_R_MICROMIPS_GOT_DISP = 145;
  static const int LIEF_ELF_R_MICROMIPS_GOT_PAGE = 146;
  static const int LIEF_ELF_R_MICROMIPS_GOT_OFST = 147;
  static const int LIEF_ELF_R_MICROMIPS_GOT_HI16 = 148;
  static const int LIEF_ELF_R_MICROMIPS_GOT_LO16 = 149;
  static const int LIEF_ELF_R_MICROMIPS_SUB = 150;
  static const int LIEF_ELF_R_MICROMIPS_HIGHER = 151;
  static const int LIEF_ELF_R_MICROMIPS_HIGHEST = 152;
  static const int LIEF_ELF_R_MICROMIPS_CALL_HI16 = 153;
  static const int LIEF_ELF_R_MICROMIPS_CALL_LO16 = 154;
  static const int LIEF_ELF_R_MICROMIPS_SCN_DISP = 155;
  static const int LIEF_ELF_R_MICROMIPS_JALR = 156;
  static const int LIEF_ELF_R_MICROMIPS_HI0_LO16 = 157;
  static const int LIEF_ELF_R_MICROMIPS_TLS_GD = 162;
  static const int LIEF_ELF_R_MICROMIPS_TLS_LDM = 163;
  static const int LIEF_ELF_R_MICROMIPS_TLS_DTPREL_HI16 = 164;
  static const int LIEF_ELF_R_MICROMIPS_TLS_DTPREL_LO16 = 165;
  static const int LIEF_ELF_R_MICROMIPS_TLS_GOTTPREL = 166;
  static const int LIEF_ELF_R_MICROMIPS_TLS_TPREL_HI16 = 169;
  static const int LIEF_ELF_R_MICROMIPS_TLS_TPREL_LO16 = 170;
  static const int LIEF_ELF_R_MICROMIPS_GPREL7_S2 = 172;
  static const int LIEF_ELF_R_MICROMIPS_PC23_S2 = 173;
  static const int LIEF_ELF_R_MICROMIPS_PC21_S2 = 174;
  static const int LIEF_ELF_R_MICROMIPS_PC26_S2 = 175;
  static const int LIEF_ELF_R_MICROMIPS_PC18_S3 = 176;
  static const int LIEF_ELF_R_MICROMIPS_PC19_S2 = 177;
  static const int LIEF_ELF_R_MIPS_NUM = 218;
  static const int LIEF_ELF_R_MIPS_PC32 = 248;
  static const int LIEF_ELF_R_MIPS_EH = 249;
}

/// ELF Relocation types for Hexagon
abstract class LIEF_ELF_RELOC_HEXAGON {
  static const int LIEF_ELF_R_HEX_NONE = 0;
  static const int LIEF_ELF_R_HEX_B22_PCREL = 1;
  static const int LIEF_ELF_R_HEX_B15_PCREL = 2;
  static const int LIEF_ELF_R_HEX_B7_PCREL = 3;
  static const int LIEF_ELF_R_HEX_LO16 = 4;
  static const int LIEF_ELF_R_HEX_HI16 = 5;
  static const int LIEF_ELF_R_HEX_32 = 6;
  static const int LIEF_ELF_R_HEX_16 = 7;
  static const int LIEF_ELF_R_HEX_8 = 8;
  static const int LIEF_ELF_R_HEX_GPREL16_0 = 9;
  static const int LIEF_ELF_R_HEX_GPREL16_1 = 10;
  static const int LIEF_ELF_R_HEX_GPREL16_2 = 11;
  static const int LIEF_ELF_R_HEX_GPREL16_3 = 12;
  static const int LIEF_ELF_R_HEX_HL16 = 13;
  static const int LIEF_ELF_R_HEX_B13_PCREL = 14;
  static const int LIEF_ELF_R_HEX_B9_PCREL = 15;
  static const int LIEF_ELF_R_HEX_B32_PCREL_X = 16;
  static const int LIEF_ELF_R_HEX_32_6_X = 17;
  static const int LIEF_ELF_R_HEX_B22_PCREL_X = 18;
  static const int LIEF_ELF_R_HEX_B15_PCREL_X = 19;
  static const int LIEF_ELF_R_HEX_B13_PCREL_X = 20;
  static const int LIEF_ELF_R_HEX_B9_PCREL_X = 21;
  static const int LIEF_ELF_R_HEX_B7_PCREL_X = 22;
  static const int LIEF_ELF_R_HEX_16_X = 23;
  static const int LIEF_ELF_R_HEX_12_X = 24;
  static const int LIEF_ELF_R_HEX_11_X = 25;
  static const int LIEF_ELF_R_HEX_10_X = 26;
  static const int LIEF_ELF_R_HEX_9_X = 27;
  static const int LIEF_ELF_R_HEX_8_X = 28;
  static const int LIEF_ELF_R_HEX_7_X = 29;
  static const int LIEF_ELF_R_HEX_6_X = 30;
  static const int LIEF_ELF_R_HEX_32_PCREL = 31;
  static const int LIEF_ELF_R_HEX_COPY = 32;
  static const int LIEF_ELF_R_HEX_GLOB_DAT = 33;
  static const int LIEF_ELF_R_HEX_JMP_SLOT = 34;
  static const int LIEF_ELF_R_HEX_RELATIVE = 35;
  static const int LIEF_ELF_R_HEX_PLT_B22_PCREL = 36;
  static const int LIEF_ELF_R_HEX_GOTREL_LO16 = 37;
  static const int LIEF_ELF_R_HEX_GOTREL_HI16 = 38;
  static const int LIEF_ELF_R_HEX_GOTREL_32 = 39;
  static const int LIEF_ELF_R_HEX_GOT_LO16 = 40;
  static const int LIEF_ELF_R_HEX_GOT_HI16 = 41;
  static const int LIEF_ELF_R_HEX_GOT_32 = 42;
  static const int LIEF_ELF_R_HEX_GOT_16 = 43;
  static const int LIEF_ELF_R_HEX_DTPMOD_32 = 44;
  static const int LIEF_ELF_R_HEX_DTPREL_LO16 = 45;
  static const int LIEF_ELF_R_HEX_DTPREL_HI16 = 46;
  static const int LIEF_ELF_R_HEX_DTPREL_32 = 47;
  static const int LIEF_ELF_R_HEX_DTPREL_16 = 48;
  static const int LIEF_ELF_R_HEX_GD_PLT_B22_PCREL = 49;
  static const int LIEF_ELF_R_HEX_GD_GOT_LO16 = 50;
  static const int LIEF_ELF_R_HEX_GD_GOT_HI16 = 51;
  static const int LIEF_ELF_R_HEX_GD_GOT_32 = 52;
  static const int LIEF_ELF_R_HEX_GD_GOT_16 = 53;
  static const int LIEF_ELF_R_HEX_IE_LO16 = 54;
  static const int LIEF_ELF_R_HEX_IE_HI16 = 55;
  static const int LIEF_ELF_R_HEX_IE_32 = 56;
  static const int LIEF_ELF_R_HEX_IE_GOT_LO16 = 57;
  static const int LIEF_ELF_R_HEX_IE_GOT_HI16 = 58;
  static const int LIEF_ELF_R_HEX_IE_GOT_32 = 59;
  static const int LIEF_ELF_R_HEX_IE_GOT_16 = 60;
  static const int LIEF_ELF_R_HEX_TPREL_LO16 = 61;
  static const int LIEF_ELF_R_HEX_TPREL_HI16 = 62;
  static const int LIEF_ELF_R_HEX_TPREL_32 = 63;
  static const int LIEF_ELF_R_HEX_TPREL_16 = 64;
  static const int LIEF_ELF_R_HEX_6_PCREL_X = 65;
  static const int LIEF_ELF_R_HEX_GOTREL_32_6_X = 66;
  static const int LIEF_ELF_R_HEX_GOTREL_16_X = 67;
  static const int LIEF_ELF_R_HEX_GOTREL_11_X = 68;
  static const int LIEF_ELF_R_HEX_GOT_32_6_X = 69;
  static const int LIEF_ELF_R_HEX_GOT_16_X = 70;
  static const int LIEF_ELF_R_HEX_GOT_11_X = 71;
  static const int LIEF_ELF_R_HEX_DTPREL_32_6_X = 72;
  static const int LIEF_ELF_R_HEX_DTPREL_16_X = 73;
  static const int LIEF_ELF_R_HEX_DTPREL_11_X = 74;
  static const int LIEF_ELF_R_HEX_GD_GOT_32_6_X = 75;
  static const int LIEF_ELF_R_HEX_GD_GOT_16_X = 76;
  static const int LIEF_ELF_R_HEX_GD_GOT_11_X = 77;
  static const int LIEF_ELF_R_HEX_IE_32_6_X = 78;
  static const int LIEF_ELF_R_HEX_IE_16_X = 79;
  static const int LIEF_ELF_R_HEX_IE_GOT_32_6_X = 80;
  static const int LIEF_ELF_R_HEX_IE_GOT_16_X = 81;
  static const int LIEF_ELF_R_HEX_IE_GOT_11_X = 82;
  static const int LIEF_ELF_R_HEX_TPREL_32_6_X = 83;
  static const int LIEF_ELF_R_HEX_TPREL_16_X = 84;
  static const int LIEF_ELF_R_HEX_TPREL_11_X = 85;
  static const int LIEF_ELF_R_HEX_LD_PLT_B22_PCREL = 86;
  static const int LIEF_ELF_R_HEX_LD_GOT_LO16 = 87;
  static const int LIEF_ELF_R_HEX_LD_GOT_HI16 = 88;
  static const int LIEF_ELF_R_HEX_LD_GOT_32 = 89;
  static const int LIEF_ELF_R_HEX_LD_GOT_16 = 90;
  static const int LIEF_ELF_R_HEX_LD_GOT_32_6_X = 91;
  static const int LIEF_ELF_R_HEX_LD_GOT_16_X = 92;
  static const int LIEF_ELF_R_HEX_LD_GOT_11_X = 93;
}

/// ELF Relocation types for S390/zSeries
abstract class LIEF_ELF_RELOC_SYSTEMZ {
  static const int LIEF_ELF_R_390_NONE = 0;
  static const int LIEF_ELF_R_390_8 = 1;
  static const int LIEF_ELF_R_390_12 = 2;
  static const int LIEF_ELF_R_390_16 = 3;
  static const int LIEF_ELF_R_390_32 = 4;
  static const int LIEF_ELF_R_390_PC32 = 5;
  static const int LIEF_ELF_R_390_GOT12 = 6;
  static const int LIEF_ELF_R_390_GOT32 = 7;
  static const int LIEF_ELF_R_390_PLT32 = 8;
  static const int LIEF_ELF_R_390_COPY = 9;
  static const int LIEF_ELF_R_390_GLOB_DAT = 10;
  static const int LIEF_ELF_R_390_JMP_SLOT = 11;
  static const int LIEF_ELF_R_390_RELATIVE = 12;
  static const int LIEF_ELF_R_390_GOTOFF = 13;
  static const int LIEF_ELF_R_390_GOTPC = 14;
  static const int LIEF_ELF_R_390_GOT16 = 15;
  static const int LIEF_ELF_R_390_PC16 = 16;
  static const int LIEF_ELF_R_390_PC16DBL = 17;
  static const int LIEF_ELF_R_390_PLT16DBL = 18;
  static const int LIEF_ELF_R_390_PC32DBL = 19;
  static const int LIEF_ELF_R_390_PLT32DBL = 20;
  static const int LIEF_ELF_R_390_GOTPCDBL = 21;
  static const int LIEF_ELF_R_390_64 = 22;
  static const int LIEF_ELF_R_390_PC64 = 23;
  static const int LIEF_ELF_R_390_GOT64 = 24;
  static const int LIEF_ELF_R_390_PLT64 = 25;
  static const int LIEF_ELF_R_390_GOTENT = 26;
  static const int LIEF_ELF_R_390_GOTOFF16 = 27;
  static const int LIEF_ELF_R_390_GOTOFF64 = 28;
  static const int LIEF_ELF_R_390_GOTPLT12 = 29;
  static const int LIEF_ELF_R_390_GOTPLT16 = 30;
  static const int LIEF_ELF_R_390_GOTPLT32 = 31;
  static const int LIEF_ELF_R_390_GOTPLT64 = 32;
  static const int LIEF_ELF_R_390_GOTPLTENT = 33;
  static const int LIEF_ELF_R_390_PLTOFF16 = 34;
  static const int LIEF_ELF_R_390_PLTOFF32 = 35;
  static const int LIEF_ELF_R_390_PLTOFF64 = 36;
  static const int LIEF_ELF_R_390_TLS_LOAD = 37;
  static const int LIEF_ELF_R_390_TLS_GDCALL = 38;
  static const int LIEF_ELF_R_390_TLS_LDCALL = 39;
  static const int LIEF_ELF_R_390_TLS_GD32 = 40;
  static const int LIEF_ELF_R_390_TLS_GD64 = 41;
  static const int LIEF_ELF_R_390_TLS_GOTIE12 = 42;
  static const int LIEF_ELF_R_390_TLS_GOTIE32 = 43;
  static const int LIEF_ELF_R_390_TLS_GOTIE64 = 44;
  static const int LIEF_ELF_R_390_TLS_LDM32 = 45;
  static const int LIEF_ELF_R_390_TLS_LDM64 = 46;
  static const int LIEF_ELF_R_390_TLS_IE32 = 47;
  static const int LIEF_ELF_R_390_TLS_IE64 = 48;
  static const int LIEF_ELF_R_390_TLS_IEENT = 49;
  static const int LIEF_ELF_R_390_TLS_LE32 = 50;
  static const int LIEF_ELF_R_390_TLS_LE64 = 51;
  static const int LIEF_ELF_R_390_TLS_LDO32 = 52;
  static const int LIEF_ELF_R_390_TLS_LDO64 = 53;
  static const int LIEF_ELF_R_390_TLS_DTPMOD = 54;
  static const int LIEF_ELF_R_390_TLS_DTPOFF = 55;
  static const int LIEF_ELF_R_390_TLS_TPOFF = 56;
  static const int LIEF_ELF_R_390_20 = 57;
  static const int LIEF_ELF_R_390_GOT20 = 58;
  static const int LIEF_ELF_R_390_GOTPLT20 = 59;
  static const int LIEF_ELF_R_390_TLS_GOTIE20 = 60;
  static const int LIEF_ELF_R_390_IRELATIVE = 61;
}

/// ELF Relocation type for Sparc.
abstract class LIEF_ELF_RELOC_SPARC {
  static const int LIEF_ELF_R_SPARC_NONE = 0;
  static const int LIEF_ELF_R_SPARC_8 = 1;
  static const int LIEF_ELF_R_SPARC_16 = 2;
  static const int LIEF_ELF_R_SPARC_32 = 3;
  static const int LIEF_ELF_R_SPARC_DISP8 = 4;
  static const int LIEF_ELF_R_SPARC_DISP16 = 5;
  static const int LIEF_ELF_R_SPARC_DISP32 = 6;
  static const int LIEF_ELF_R_SPARC_WDISP30 = 7;
  static const int LIEF_ELF_R_SPARC_WDISP22 = 8;
  static const int LIEF_ELF_R_SPARC_HI22 = 9;
  static const int LIEF_ELF_R_SPARC_22 = 10;
  static const int LIEF_ELF_R_SPARC_13 = 11;
  static const int LIEF_ELF_R_SPARC_LO10 = 12;
  static const int LIEF_ELF_R_SPARC_GOT10 = 13;
  static const int LIEF_ELF_R_SPARC_GOT13 = 14;
  static const int LIEF_ELF_R_SPARC_GOT22 = 15;
  static const int LIEF_ELF_R_SPARC_PC10 = 16;
  static const int LIEF_ELF_R_SPARC_PC22 = 17;
  static const int LIEF_ELF_R_SPARC_WPLT30 = 18;
  static const int LIEF_ELF_R_SPARC_COPY = 19;
  static const int LIEF_ELF_R_SPARC_GLOB_DAT = 20;
  static const int LIEF_ELF_R_SPARC_JMP_SLOT = 21;
  static const int LIEF_ELF_R_SPARC_RELATIVE = 22;
  static const int LIEF_ELF_R_SPARC_UA32 = 23;
  static const int LIEF_ELF_R_SPARC_PLT32 = 24;
  static const int LIEF_ELF_R_SPARC_HIPLT22 = 25;
  static const int LIEF_ELF_R_SPARC_LOPLT10 = 26;
  static const int LIEF_ELF_R_SPARC_PCPLT32 = 27;
  static const int LIEF_ELF_R_SPARC_PCPLT22 = 28;
  static const int LIEF_ELF_R_SPARC_PCPLT10 = 29;
  static const int LIEF_ELF_R_SPARC_10 = 30;
  static const int LIEF_ELF_R_SPARC_11 = 31;
  static const int LIEF_ELF_R_SPARC_64 = 32;
  static const int LIEF_ELF_R_SPARC_OLO10 = 33;
  static const int LIEF_ELF_R_SPARC_HH22 = 34;
  static const int LIEF_ELF_R_SPARC_HM10 = 35;
  static const int LIEF_ELF_R_SPARC_LM22 = 36;
  static const int LIEF_ELF_R_SPARC_PC_HH22 = 37;
  static const int LIEF_ELF_R_SPARC_PC_HM10 = 38;
  static const int LIEF_ELF_R_SPARC_PC_LM22 = 39;
  static const int LIEF_ELF_R_SPARC_WDISP16 = 40;
  static const int LIEF_ELF_R_SPARC_WDISP19 = 41;
  static const int LIEF_ELF_R_SPARC_7 = 43;
  static const int LIEF_ELF_R_SPARC_5 = 44;
  static const int LIEF_ELF_R_SPARC_6 = 45;
  static const int LIEF_ELF_R_SPARC_DISP64 = 46;
  static const int LIEF_ELF_R_SPARC_PLT64 = 47;
  static const int LIEF_ELF_R_SPARC_HIX22 = 48;
  static const int LIEF_ELF_R_SPARC_LOX10 = 49;
  static const int LIEF_ELF_R_SPARC_H44 = 50;
  static const int LIEF_ELF_R_SPARC_M44 = 51;
  static const int LIEF_ELF_R_SPARC_L44 = 52;
  static const int LIEF_ELF_R_SPARC_REGISTER = 53;
  static const int LIEF_ELF_R_SPARC_UA64 = 54;
  static const int LIEF_ELF_R_SPARC_UA16 = 55;
  static const int LIEF_ELF_R_SPARC_TLS_GD_HI22 = 56;
  static const int LIEF_ELF_R_SPARC_TLS_GD_LO10 = 57;
  static const int LIEF_ELF_R_SPARC_TLS_GD_ADD = 58;
  static const int LIEF_ELF_R_SPARC_TLS_GD_CALL = 59;
  static const int LIEF_ELF_R_SPARC_TLS_LDM_HI22 = 60;
  static const int LIEF_ELF_R_SPARC_TLS_LDM_LO10 = 61;
  static const int LIEF_ELF_R_SPARC_TLS_LDM_ADD = 62;
  static const int LIEF_ELF_R_SPARC_TLS_LDM_CALL = 63;
  static const int LIEF_ELF_R_SPARC_TLS_LDO_HIX22 = 64;
  static const int LIEF_ELF_R_SPARC_TLS_LDO_LOX10 = 65;
  static const int LIEF_ELF_R_SPARC_TLS_LDO_ADD = 66;
  static const int LIEF_ELF_R_SPARC_TLS_IE_HI22 = 67;
  static const int LIEF_ELF_R_SPARC_TLS_IE_LO10 = 68;
  static const int LIEF_ELF_R_SPARC_TLS_IE_LD = 69;
  static const int LIEF_ELF_R_SPARC_TLS_IE_LDX = 70;
  static const int LIEF_ELF_R_SPARC_TLS_IE_ADD = 71;
  static const int LIEF_ELF_R_SPARC_TLS_LE_HIX22 = 72;
  static const int LIEF_ELF_R_SPARC_TLS_LE_LOX10 = 73;
  static const int LIEF_ELF_R_SPARC_TLS_DTPMOD32 = 74;
  static const int LIEF_ELF_R_SPARC_TLS_DTPMOD64 = 75;
  static const int LIEF_ELF_R_SPARC_TLS_DTPOFF32 = 76;
  static const int LIEF_ELF_R_SPARC_TLS_DTPOFF64 = 77;
  static const int LIEF_ELF_R_SPARC_TLS_TPOFF32 = 78;
  static const int LIEF_ELF_R_SPARC_TLS_TPOFF64 = 79;
  static const int LIEF_ELF_R_SPARC_GOTDATA_HIX22 = 80;
  static const int LIEF_ELF_R_SPARC_GOTDATA_LOX10 = 81;
  static const int LIEF_ELF_R_SPARC_GOTDATA_OP_HIX22 = 82;
  static const int LIEF_ELF_R_SPARC_GOTDATA_OP_LOX10 = 83;
  static const int LIEF_ELF_R_SPARC_GOTDATA_OP = 84;
}

/// Specific e_flags for PPC64
abstract class LIEF_ELF_PPC64_EFLAGS {
  static const int LIEF_ELF_EF_PPC64_ABI = 3;
}

/// ARM Specific e_flags
abstract class LIEF_ELF_ARM_EFLAGS {
  static const int LIEF_ELF_EF_ARM_SOFT_FLOAT = 512;
  static const int LIEF_ELF_EF_ARM_VFP_FLOAT = 1024;
  static const int LIEF_ELF_EF_ARM_EABI_UNKNOWN = 0;
  static const int LIEF_ELF_EF_ARM_EABI_VER1 = 16777216;
  static const int LIEF_ELF_EF_ARM_EABI_VER2 = 33554432;
  static const int LIEF_ELF_EF_ARM_EABI_VER3 = 50331648;
  static const int LIEF_ELF_EF_ARM_EABI_VER4 = 67108864;
  static const int LIEF_ELF_EF_ARM_EABI_VER5 = 83886080;
  static const int LIEF_ELF_EF_ARM_EABIMASK = -16777216;
}

/// Mips Specific e_flags
abstract class LIEF_ELF_MIPS_EFLAGS {
  static const int LIEF_ELF_EF_MIPS_NOREORDER = 1;
  static const int LIEF_ELF_EF_MIPS_PIC = 2;
  static const int LIEF_ELF_EF_MIPS_CPIC = 4;
  static const int LIEF_ELF_EF_MIPS_ABI2 = 32;
  static const int LIEF_ELF_EF_MIPS_32BITMODE = 256;
  static const int LIEF_ELF_EF_MIPS_FP64 = 512;
  static const int LIEF_ELF_EF_MIPS_NAN2008 = 1024;
  static const int LIEF_ELF_EF_MIPS_ABI_O32 = 4096;
  static const int LIEF_ELF_EF_MIPS_ABI_O64 = 8192;
  static const int LIEF_ELF_EF_MIPS_ABI_EABI32 = 12288;
  static const int LIEF_ELF_EF_MIPS_ABI_EABI64 = 16384;
  static const int LIEF_ELF_EF_MIPS_ABI = 61440;
  static const int LIEF_ELF_EF_MIPS_MACH_3900 = 8454144;
  static const int LIEF_ELF_EF_MIPS_MACH_4010 = 8519680;
  static const int LIEF_ELF_EF_MIPS_MACH_4100 = 8585216;
  static const int LIEF_ELF_EF_MIPS_MACH_4650 = 8716288;
  static const int LIEF_ELF_EF_MIPS_MACH_4120 = 8847360;
  static const int LIEF_ELF_EF_MIPS_MACH_4111 = 8912896;
  static const int LIEF_ELF_EF_MIPS_MACH_SB1 = 9043968;
  static const int LIEF_ELF_EF_MIPS_MACH_OCTEON = 9109504;
  static const int LIEF_ELF_EF_MIPS_MACH_XLR = 9175040;
  static const int LIEF_ELF_EF_MIPS_MACH_OCTEON2 = 9240576;
  static const int LIEF_ELF_EF_MIPS_MACH_OCTEON3 = 9306112;
  static const int LIEF_ELF_EF_MIPS_MACH_5400 = 9502720;
  static const int LIEF_ELF_EF_MIPS_MACH_5900 = 9568256;
  static const int LIEF_ELF_EF_MIPS_MACH_5500 = 9961472;
  static const int LIEF_ELF_EF_MIPS_MACH_9000 = 10027008;
  static const int LIEF_ELF_EF_MIPS_MACH_LS2E = 10485760;
  static const int LIEF_ELF_EF_MIPS_MACH_LS2F = 10551296;
  static const int LIEF_ELF_EF_MIPS_MACH_LS3A = 10616832;
  static const int LIEF_ELF_EF_MIPS_MACH = 16711680;
  static const int LIEF_ELF_EF_MIPS_MICROMIPS = 33554432;
  static const int LIEF_ELF_EF_MIPS_ARCH_ASE_M16 = 67108864;
  static const int LIEF_ELF_EF_MIPS_ARCH_ASE_MDMX = 134217728;
  static const int LIEF_ELF_EF_MIPS_ARCH_ASE = 251658240;
  static const int LIEF_ELF_EF_MIPS_ARCH_1 = 0;
  static const int LIEF_ELF_EF_MIPS_ARCH_2 = 268435456;
  static const int LIEF_ELF_EF_MIPS_ARCH_3 = 536870912;
  static const int LIEF_ELF_EF_MIPS_ARCH_4 = 805306368;
  static const int LIEF_ELF_EF_MIPS_ARCH_5 = 1073741824;
  static const int LIEF_ELF_EF_MIPS_ARCH_32 = 1342177280;
  static const int LIEF_ELF_EF_MIPS_ARCH_64 = 1610612736;
  static const int LIEF_ELF_EF_MIPS_ARCH_32R2 = 1879048192;
  static const int LIEF_ELF_EF_MIPS_ARCH_64R2 = -2147483648;
  static const int LIEF_ELF_EF_MIPS_ARCH_32R6 = -1879048192;
  static const int LIEF_ELF_EF_MIPS_ARCH_64R6 = -1610612736;
  static const int LIEF_ELF_EF_MIPS_ARCH = -268435456;
}

/// Hexagon Specific e_flags */
/// /* Release 5 ABI
abstract class LIEF_ELF_HEXAGON_EFLAGS {
  static const int LIEF_ELF_EF_HEXAGON_MACH_V2 = 1;
  static const int LIEF_ELF_EF_HEXAGON_MACH_V3 = 2;
  static const int LIEF_ELF_EF_HEXAGON_MACH_V4 = 3;
  static const int LIEF_ELF_EF_HEXAGON_MACH_V5 = 4;
  static const int LIEF_ELF_EF_HEXAGON_ISA_MACH = 0;
  static const int LIEF_ELF_EF_HEXAGON_ISA_V2 = 16;
  static const int LIEF_ELF_EF_HEXAGON_ISA_V3 = 32;
  static const int LIEF_ELF_EF_HEXAGON_ISA_V4 = 48;
  static const int LIEF_ELF_EF_HEXAGON_ISA_V5 = 64;
}

/// Special section indices.
abstract class LIEF_ELF_SYMBOL_SECTION_INDEX {
  static const int LIEF_ELF_SHN_UNDEF = 0;
  static const int LIEF_ELF_SHN_LORESERVE = 65280;
  static const int LIEF_ELF_SHN_LOPROC = 65280;
  static const int LIEF_ELF_SHN_HIPROC = 65311;
  static const int LIEF_ELF_SHN_LOOS = 65312;
  static const int LIEF_ELF_SHN_HIOS = 65343;
  static const int LIEF_ELF_SHN_ABS = 65521;
  static const int LIEF_ELF_SHN_COMMON = 65522;
  static const int LIEF_ELF_SHN_XINDEX = 65535;
  static const int LIEF_ELF_SHN_HIRESERVE = 65535;
}

/// Section types.
abstract class LIEF_ELF_ELF_SECTION_TYPES {
  static const int LIEF_ELF_SHT_NULL = 0;
  static const int LIEF_ELF_SHT_PROGBITS = 1;
  static const int LIEF_ELF_SHT_SYMTAB = 2;
  static const int LIEF_ELF_SHT_STRTAB = 3;
  static const int LIEF_ELF_SHT_RELA = 4;
  static const int LIEF_ELF_SHT_HASH = 5;
  static const int LIEF_ELF_SHT_DYNAMIC = 6;
  static const int LIEF_ELF_SHT_NOTE = 7;
  static const int LIEF_ELF_SHT_NOBITS = 8;
  static const int LIEF_ELF_SHT_REL = 9;
  static const int LIEF_ELF_SHT_SHLIB = 10;
  static const int LIEF_ELF_SHT_DYNSYM = 11;
  static const int LIEF_ELF_SHT_INIT_ARRAY = 14;
  static const int LIEF_ELF_SHT_FINI_ARRAY = 15;
  static const int LIEF_ELF_SHT_PREINIT_ARRAY = 16;
  static const int LIEF_ELF_SHT_GROUP = 17;
  static const int LIEF_ELF_SHT_SYMTAB_SHNDX = 18;
  static const int LIEF_ELF_SHT_LOOS = 1610612736;
  static const int LIEF_ELF_SHT_ANDROID_REL = 1610612737;
  static const int LIEF_ELF_SHT_ANDROID_RELA = 1610612738;
  static const int LIEF_ELF_SHT_LLVM_ADDRSIG = 1879002115;
  static const int LIEF_ELF_SHT_RELR = 1879047936;
  static const int LIEF_ELF_SHT_GNU_ATTRIBUTES = 1879048181;
  static const int LIEF_ELF_SHT_GNU_HASH = 1879048182;
  static const int LIEF_ELF_SHT_GNU_verdef = 1879048189;
  static const int LIEF_ELF_SHT_GNU_verneed = 1879048190;
  static const int LIEF_ELF_SHT_GNU_versym = 1879048191;
  static const int LIEF_ELF_SHT_HIOS = 1879048191;
  static const int LIEF_ELF_SHT_LOPROC = 1879048192;
  static const int LIEF_ELF_SHT_ARM_EXIDX = 1879048193;
  static const int LIEF_ELF_SHT_ARM_PREEMPTMAP = 1879048194;
  static const int LIEF_ELF_SHT_ARM_ATTRIBUTES = 1879048195;
  static const int LIEF_ELF_SHT_ARM_DEBUGOVERLAY = 1879048196;
  static const int LIEF_ELF_SHT_ARM_OVERLAYSECTION = 1879048197;
  static const int LIEF_ELF_SHT_HEX_ORDERED = 1879048192;
  static const int LIEF_ELF_SHT_X86_64_UNWIND = 1879048193;
  static const int LIEF_ELF_SHT_MIPS_REGINFO = 1879048198;
  static const int LIEF_ELF_SHT_MIPS_OPTIONS = 1879048205;
  static const int LIEF_ELF_SHT_MIPS_ABIFLAGS = 1879048234;
  static const int LIEF_ELF_SHT_HIPROC = 2147483647;
  static const int LIEF_ELF_SHT_LOUSER = -2147483648;
  static const int LIEF_ELF_SHT_HIUSER = -1;
}

/// Section flags.
abstract class LIEF_ELF_ELF_SECTION_FLAGS {
  static const int LIEF_ELF_SHF_NONE = 0;
  static const int LIEF_ELF_SHF_WRITE = 1;
  static const int LIEF_ELF_SHF_ALLOC = 2;
  static const int LIEF_ELF_SHF_EXECINSTR = 4;
  static const int LIEF_ELF_SHF_MERGE = 16;
  static const int LIEF_ELF_SHF_STRINGS = 32;
  static const int LIEF_ELF_SHF_INFO_LINK = 64;
  static const int LIEF_ELF_SHF_LINK_ORDER = 128;
  static const int LIEF_ELF_SHF_OS_NONCONFORMING = 256;
  static const int LIEF_ELF_SHF_GROUP = 512;
  static const int LIEF_ELF_SHF_TLS = 1024;
  static const int LIEF_ELF_SHF_EXCLUDE = -2147483648;
  static const int LIEF_ELF_XCORE_SHF_CP_SECTION = 2048;
  static const int LIEF_ELF_XCORE_SHF_DP_SECTION = 4096;
  static const int LIEF_ELF_SHF_MASKOS = 267386880;
  static const int LIEF_ELF_SHF_MASKPROC = -268435456;
  static const int LIEF_ELF_SHF_X86_64_LARGE = 268435456;
  static const int LIEF_ELF_SHF_HEX_GPREL = 268435456;
  static const int LIEF_ELF_SHF_MIPS_NODUPES = 16777216;
  static const int LIEF_ELF_SHF_MIPS_NAMES = 33554432;
  static const int LIEF_ELF_SHF_MIPS_LOCAL = 67108864;
  static const int LIEF_ELF_SHF_MIPS_NOSTRIP = 134217728;
  static const int LIEF_ELF_SHF_MIPS_GPREL = 268435456;
  static const int LIEF_ELF_SHF_MIPS_MERGE = 536870912;
  static const int LIEF_ELF_SHF_MIPS_ADDR = 1073741824;
  static const int LIEF_ELF_SHF_MIPS_STRING = -2147483648;
}

/// Symbol bindings.
abstract class LIEF_ELF_SYMBOL_BINDINGS {
  static const int LIEF_ELF_STB_LOCAL = 0;
  static const int LIEF_ELF_STB_GLOBAL = 1;
  static const int LIEF_ELF_STB_WEAK = 2;
  static const int LIEF_ELF_STB_GNU_UNIQUE = 10;
  static const int LIEF_ELF_STB_LOOS = 10;
  static const int LIEF_ELF_STB_HIOS = 12;
  static const int LIEF_ELF_STB_LOPROC = 13;
  static const int LIEF_ELF_STB_HIPROC = 15;
}

/// Symbol types.
abstract class LIEF_ELF_ELF_SYMBOL_TYPES {
  static const int LIEF_ELF_STT_NOTYPE = 0;
  static const int LIEF_ELF_STT_OBJECT = 1;
  static const int LIEF_ELF_STT_FUNC = 2;
  static const int LIEF_ELF_STT_SECTION = 3;
  static const int LIEF_ELF_STT_FILE = 4;
  static const int LIEF_ELF_STT_COMMON = 5;
  static const int LIEF_ELF_STT_TLS = 6;
  static const int LIEF_ELF_STT_GNU_IFUNC = 10;
  static const int LIEF_ELF_STT_LOOS = 10;
  static const int LIEF_ELF_STT_HIOS = 12;
  static const int LIEF_ELF_STT_LOPROC = 13;
  static const int LIEF_ELF_STT_HIPROC = 15;
}

abstract class LIEF_ELF_ELF_SYMBOL_VISIBILITY {
  static const int LIEF_ELF_STV_DEFAULT = 0;
  static const int LIEF_ELF_STV_INTERNAL = 1;
  static const int LIEF_ELF_STV_HIDDEN = 2;
  static const int LIEF_ELF_STV_PROTECTED = 3;
}

/// @brief Segment types.
abstract class LIEF_ELF_SEGMENT_TYPES {
  static const int LIEF_ELF_PT_NULL = 0;
  static const int LIEF_ELF_PT_LOAD = 1;
  static const int LIEF_ELF_PT_DYNAMIC = 2;
  static const int LIEF_ELF_PT_INTERP = 3;
  static const int LIEF_ELF_PT_NOTE = 4;
  static const int LIEF_ELF_PT_SHLIB = 5;
  static const int LIEF_ELF_PT_PHDR = 6;
  static const int LIEF_ELF_PT_TLS = 7;
  static const int LIEF_ELF_PT_LOOS = 1610612736;
  static const int LIEF_ELF_PT_HIOS = 1879048191;
  static const int LIEF_ELF_PT_LOPROC = 1879048192;
  static const int LIEF_ELF_PT_HIPROC = 2147483647;
  static const int LIEF_ELF_PT_GNU_EH_FRAME = 1685382480;
  static const int LIEF_ELF_PT_SUNW_EH_FRAME = 1685382480;
  static const int LIEF_ELF_PT_SUNW_UNWIND = 1684333904;
  static const int LIEF_ELF_PT_GNU_STACK = 1685382481;
  static const int LIEF_ELF_PT_GNU_PROPERTY = 1685382483;
  static const int LIEF_ELF_PT_GNU_RELRO = 1685382482;
  static const int LIEF_ELF_PT_ARM_ARCHEXT = 1879048192;
  static const int LIEF_ELF_PT_ARM_EXIDX = 1879048193;
  static const int LIEF_ELF_PT_ARM_UNWIND = 1879048193;
  static const int LIEF_ELF_PT_MIPS_REGINFO = 1879048192;
  static const int LIEF_ELF_PT_MIPS_RTPROC = 1879048193;
  static const int LIEF_ELF_PT_MIPS_OPTIONS = 1879048194;
  static const int LIEF_ELF_PT_MIPS_ABIFLAGS = 1879048195;
}

/// Segment flags.
abstract class LIEF_ELF_ELF_SEGMENT_FLAGS {
  static const int LIEF_ELF_PF_NONE = 0;
  static const int LIEF_ELF_PF_X = 1;
  static const int LIEF_ELF_PF_W = 2;
  static const int LIEF_ELF_PF_R = 4;
  static const int LIEF_ELF_PF_MASKOS = 267386880;
  static const int LIEF_ELF_PF_MASKPROC = -268435456;
}

/// Dynamic table entry tags.
abstract class LIEF_ELF_DYNAMIC_TAGS {
  static const int LIEF_ELF_DT_NULL = 0;
  static const int LIEF_ELF_DT_NEEDED = 1;
  static const int LIEF_ELF_DT_PLTRELSZ = 2;
  static const int LIEF_ELF_DT_PLTGOT = 3;
  static const int LIEF_ELF_DT_HASH = 4;
  static const int LIEF_ELF_DT_STRTAB = 5;
  static const int LIEF_ELF_DT_SYMTAB = 6;
  static const int LIEF_ELF_DT_RELA = 7;
  static const int LIEF_ELF_DT_RELASZ = 8;
  static const int LIEF_ELF_DT_RELAENT = 9;
  static const int LIEF_ELF_DT_STRSZ = 10;
  static const int LIEF_ELF_DT_SYMENT = 11;
  static const int LIEF_ELF_DT_INIT = 12;
  static const int LIEF_ELF_DT_FINI = 13;
  static const int LIEF_ELF_DT_SONAME = 14;
  static const int LIEF_ELF_DT_RPATH = 15;
  static const int LIEF_ELF_DT_SYMBOLIC = 16;
  static const int LIEF_ELF_DT_REL = 17;
  static const int LIEF_ELF_DT_RELSZ = 18;
  static const int LIEF_ELF_DT_RELENT = 19;
  static const int LIEF_ELF_DT_PLTREL = 20;
  static const int LIEF_ELF_DT_DEBUG = 21;
  static const int LIEF_ELF_DT_TEXTREL = 22;
  static const int LIEF_ELF_DT_JMPREL = 23;
  static const int LIEF_ELF_DT_BIND_NOW = 24;
  static const int LIEF_ELF_DT_INIT_ARRAY = 25;
  static const int LIEF_ELF_DT_FINI_ARRAY = 26;
  static const int LIEF_ELF_DT_INIT_ARRAYSZ = 27;
  static const int LIEF_ELF_DT_FINI_ARRAYSZ = 28;
  static const int LIEF_ELF_DT_RUNPATH = 29;
  static const int LIEF_ELF_DT_FLAGS = 30;
  static const int LIEF_ELF_DT_ENCODING = 32;
  static const int LIEF_ELF_DT_PREINIT_ARRAY = 32;
  static const int LIEF_ELF_DT_PREINIT_ARRAYSZ = 33;
  static const int LIEF_ELF_DT_LOOS = 1610612736;
  static const int LIEF_ELF_DT_HIOS = 1879048191;
  static const int LIEF_ELF_DT_LOPROC = 1879048192;
  static const int LIEF_ELF_DT_HIPROC = 2147483647;
  static const int LIEF_ELF_DT_GNU_HASH = 1879047925;
  static const int LIEF_ELF_DT_RELACOUNT = 1879048185;
  static const int LIEF_ELF_DT_RELCOUNT = 1879048186;
  static const int LIEF_ELF_DT_FLAGS_1 = 1879048187;
  static const int LIEF_ELF_DT_VERSYM = 1879048176;
  static const int LIEF_ELF_DT_VERDEF = 1879048188;
  static const int LIEF_ELF_DT_VERDEFNUM = 1879048189;
  static const int LIEF_ELF_DT_VERNEED = 1879048190;
  static const int LIEF_ELF_DT_VERNEEDNUM = 1879048191;
  static const int LIEF_ELF_DT_MIPS_RLD_VERSION = 1879048193;
  static const int LIEF_ELF_DT_MIPS_TIME_STAMP = 1879048194;
  static const int LIEF_ELF_DT_MIPS_ICHECKSUM = 1879048195;
  static const int LIEF_ELF_DT_MIPS_IVERSION = 1879048196;
  static const int LIEF_ELF_DT_MIPS_FLAGS = 1879048197;
  static const int LIEF_ELF_DT_MIPS_BASE_ADDRESS = 1879048198;
  static const int LIEF_ELF_DT_MIPS_MSYM = 1879048199;
  static const int LIEF_ELF_DT_MIPS_CONFLICT = 1879048200;
  static const int LIEF_ELF_DT_MIPS_LIBLIST = 1879048201;
  static const int LIEF_ELF_DT_MIPS_LOCAL_GOTNO = 1879048202;
  static const int LIEF_ELF_DT_MIPS_CONFLICTNO = 1879048203;
  static const int LIEF_ELF_DT_MIPS_LIBLISTNO = 1879048208;
  static const int LIEF_ELF_DT_MIPS_SYMTABNO = 1879048209;
  static const int LIEF_ELF_DT_MIPS_UNREFEXTNO = 1879048210;
  static const int LIEF_ELF_DT_MIPS_GOTSYM = 1879048211;
  static const int LIEF_ELF_DT_MIPS_HIPAGENO = 1879048212;
  static const int LIEF_ELF_DT_MIPS_RLD_MAP = 1879048214;
  static const int LIEF_ELF_DT_MIPS_DELTA_CLASS = 1879048215;
  static const int LIEF_ELF_DT_MIPS_DELTA_CLASS_NO = 1879048216;
  static const int LIEF_ELF_DT_MIPS_DELTA_INSTANCE = 1879048217;
  static const int LIEF_ELF_DT_MIPS_DELTA_INSTANCE_NO = 1879048218;
  static const int LIEF_ELF_DT_MIPS_DELTA_RELOC = 1879048219;
  static const int LIEF_ELF_DT_MIPS_DELTA_RELOC_NO = 1879048220;
  static const int LIEF_ELF_DT_MIPS_DELTA_SYM = 1879048221;
  static const int LIEF_ELF_DT_MIPS_DELTA_SYM_NO = 1879048222;
  static const int LIEF_ELF_DT_MIPS_DELTA_CLASSSYM = 1879048224;
  static const int LIEF_ELF_DT_MIPS_DELTA_CLASSSYM_NO = 1879048225;
  static const int LIEF_ELF_DT_MIPS_CXX_FLAGS = 1879048226;
  static const int LIEF_ELF_DT_MIPS_PIXIE_INIT = 1879048227;
  static const int LIEF_ELF_DT_MIPS_SYMBOL_LIB = 1879048228;
  static const int LIEF_ELF_DT_MIPS_LOCALPAGE_GOTIDX = 1879048229;
  static const int LIEF_ELF_DT_MIPS_LOCAL_GOTIDX = 1879048230;
  static const int LIEF_ELF_DT_MIPS_HIDDEN_GOTIDX = 1879048231;
  static const int LIEF_ELF_DT_MIPS_PROTECTED_GOTIDX = 1879048232;
  static const int LIEF_ELF_DT_MIPS_OPTIONS = 1879048233;
  static const int LIEF_ELF_DT_MIPS_INTERFACE = 1879048234;
  static const int LIEF_ELF_DT_MIPS_DYNSTR_ALIGN = 1879048235;
  static const int LIEF_ELF_DT_MIPS_INTERFACE_SIZE = 1879048236;
  static const int LIEF_ELF_DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 1879048237;
  static const int LIEF_ELF_DT_MIPS_PERF_SUFFIX = 1879048238;
  static const int LIEF_ELF_DT_MIPS_COMPACT_SIZE = 1879048239;
  static const int LIEF_ELF_DT_MIPS_GP_VALUE = 1879048240;
  static const int LIEF_ELF_DT_MIPS_AUX_DYNAMIC = 1879048241;
  static const int LIEF_ELF_DT_MIPS_PLTGOT = 1879048242;
  static const int LIEF_ELF_DT_MIPS_RWPLT = 1879048244;
  static const int LIEF_ELF_DT_ANDROID_REL_OFFSET = 1610612749;
  static const int LIEF_ELF_DT_ANDROID_REL_SIZE = 1610612750;
  static const int LIEF_ELF_DT_ANDROID_REL = 1610612751;
  static const int LIEF_ELF_DT_ANDROID_RELSZ = 1610612752;
  static const int LIEF_ELF_DT_ANDROID_RELA = 1610612753;
  static const int LIEF_ELF_DT_ANDROID_RELASZ = 1610612754;
  static const int LIEF_ELF_DT_RELR = 1879040000;
  static const int LIEF_ELF_DT_RELRSZ = 1879040001;
  static const int LIEF_ELF_DT_RELRENT = 1879040003;
  static const int LIEF_ELF_DT_RELRCOUNT = 1879040005;
}

/// DT_FLAGS and DT_FLAGS_1 values.
abstract class LIEF_ELF_DYNAMIC_FLAGS {
  static const int LIEF_ELF_DF_ORIGIN = 1;
  static const int LIEF_ELF_DF_SYMBOLIC = 2;
  static const int LIEF_ELF_DF_TEXTREL = 4;
  static const int LIEF_ELF_DF_BIND_NOW = 8;
  static const int LIEF_ELF_DF_STATIC_TLS = 16;
}

abstract class LIEF_ELF_DYNAMIC_FLAGS_1 {
  static const int LIEF_ELF_DF_1_NOW = 1;
  static const int LIEF_ELF_DF_1_GLOBAL = 2;
  static const int LIEF_ELF_DF_1_GROUP = 4;
  static const int LIEF_ELF_DF_1_NODELETE = 8;
  static const int LIEF_ELF_DF_1_LOADFLTR = 16;
  static const int LIEF_ELF_DF_1_INITFIRST = 32;
  static const int LIEF_ELF_DF_1_NOOPEN = 64;
  static const int LIEF_ELF_DF_1_ORIGIN = 128;
  static const int LIEF_ELF_DF_1_DIRECT = 256;
  static const int LIEF_ELF_DF_1_TRANS = 512;
  static const int LIEF_ELF_DF_1_INTERPOSE = 1024;
  static const int LIEF_ELF_DF_1_NODEFLIB = 2048;
  static const int LIEF_ELF_DF_1_NODUMP = 4096;
  static const int LIEF_ELF_DF_1_CONFALT = 8192;
  static const int LIEF_ELF_DF_1_ENDFILTEE = 16384;
  static const int LIEF_ELF_DF_1_DISPRELDNE = 32768;
  static const int LIEF_ELF_DF_1_DISPRELPND = 65536;
  static const int LIEF_ELF_DF_1_NODIRECT = 131072;
  static const int LIEF_ELF_DF_1_IGNMULDEF = 262144;
  static const int LIEF_ELF_DF_1_NOKSYMS = 524288;
  static const int LIEF_ELF_DF_1_NOHDR = 1048576;
  static const int LIEF_ELF_DF_1_EDITED = 2097152;
  static const int LIEF_ELF_DF_1_NORELOC = 4194304;
  static const int LIEF_ELF_DF_1_SYMINTPOSE = 8388608;
  static const int LIEF_ELF_DF_1_GLOBAUDIT = 16777216;
  static const int LIEF_ELF_DF_1_SINGLETON = 33554432;
  static const int LIEF_ELF_DF_1_PIE = 134217728;
}

abstract class LIEF_ELF_AUX_TYPE {
  static const int LIEF_ELF_AT_NULL = 0;
  static const int LIEF_ELF_AT_IGNORE = 1;
  static const int LIEF_ELF_AT_EXECFD = 2;
  static const int LIEF_ELF_AT_PHDR = 3;
  static const int LIEF_ELF_AT_PHENT = 4;
  static const int LIEF_ELF_AT_PHNUM = 5;
  static const int LIEF_ELF_AT_PAGESZ = 6;
  static const int LIEF_ELF_AT_BASE = 7;
  static const int LIEF_ELF_AT_FLAGS = 8;
  static const int LIEF_ELF_AT_ENTRY = 9;
  static const int LIEF_ELF_AT_NOTELF = 10;
  static const int LIEF_ELF_AT_UID = 11;
  static const int LIEF_ELF_AT_EUID = 12;
  static const int LIEF_ELF_AT_GID = 13;
  static const int LIEF_ELF_AT_EGID = 14;
  static const int LIEF_ELF_AT_CLKTCK = 17;
  static const int LIEF_ELF_AT_PLATFORM = 15;
  static const int LIEF_ELF_AT_HWCAP = 16;
  static const int LIEF_ELF_AT_FPUCW = 18;
  static const int LIEF_ELF_AT_DCACHEBSIZE = 19;
  static const int LIEF_ELF_AT_ICACHEBSIZE = 20;
  static const int LIEF_ELF_AT_UCACHEBSIZE = 21;
  static const int LIEF_ELF_AT_IGNOREPPC = 22;
  static const int LIEF_ELF_AT_SECURE = 23;
  static const int LIEF_ELF_AT_BASE_PLATFORM = 24;
  static const int LIEF_ELF_AT_RANDOM = 25;
  static const int LIEF_ELF_AT_HWCAP2 = 26;
  static const int LIEF_ELF_AT_EXECFN = 31;
  static const int LIEF_ELF_AT_SYSINFO = 32;
  static const int LIEF_ELF_AT_SYSINFO_EHDR = 33;
  static const int LIEF_ELF_AT_L1I_CACHESHAPE = 34;
  static const int LIEF_ELF_AT_L1D_CACHESHAPE = 35;
  static const int LIEF_ELF_AT_L2_CACHESHAPE = 36;
  static const int LIEF_ELF_AT_L3_CACHESHAPE = 37;
}

/// Methods that can be used by the LIEF::ELF::Parser
/// to count the number of dynamic symbols
abstract class LIEF_ELF_DYNSYM_COUNT_METHODS {
  static const int LIEF_ELF_COUNT_AUTO = 0;
  static const int LIEF_ELF_COUNT_SECTION = 1;
  static const int LIEF_ELF_COUNT_HASH = 2;
  static const int LIEF_ELF_COUNT_RELOCATIONS = 3;
}

abstract class LIEF_ELF_NOTE_TYPES {
  static const int LIEF_ELF_NT_UNKNOWN = 0;
  static const int LIEF_ELF_NT_GNU_ABI_TAG = 1;
  static const int LIEF_ELF_NT_GNU_HWCAP = 2;
  static const int LIEF_ELF_NT_GNU_BUILD_ID = 3;
  static const int LIEF_ELF_NT_GNU_GOLD_VERSION = 4;
  static const int LIEF_ELF_NT_GNU_PROPERTY_TYPE_0 = 5;
  static const int LIEF_ELF_NT_GNU_BUILD_ATTRIBUTE_OPEN = 256;
  static const int LIEF_ELF_NT_GNU_BUILD_ATTRIBUTE_FUNC = 257;
  static const int LIEF_ELF_NT_CRASHPAD = 1330007625;
}

abstract class LIEF_ELF_NOTE_TYPES_CORE {
  static const int LIEF_ELF_NT_CORE_UNKNOWN = 0;
  static const int LIEF_ELF_NT_PRSTATUS = 1;
  static const int LIEF_ELF_NT_PRFPREG = 2;
  static const int LIEF_ELF_NT_PRPSINFO = 3;
  static const int LIEF_ELF_NT_TASKSTRUCT = 4;
  static const int LIEF_ELF_NT_AUXV = 6;
  static const int LIEF_ELF_NT_SIGINFO = 1397311305;
  static const int LIEF_ELF_NT_FILE = 1179208773;
  static const int LIEF_ELF_NT_PRXFPREG = 1189489535;
  static const int LIEF_ELF_NT_ARM_VFP = 1024;
  static const int LIEF_ELF_NT_ARM_TLS = 1025;
  static const int LIEF_ELF_NT_ARM_HW_BREAK = 1026;
  static const int LIEF_ELF_NT_ARM_HW_WATCH = 1027;
  static const int LIEF_ELF_NT_ARM_SYSTEM_CALL = 1028;
  static const int LIEF_ELF_NT_ARM_SVE = 1029;
  static const int LIEF_ELF_NT_386_TLS = 512;
  static const int LIEF_ELF_NT_386_IOPERM = 513;
  static const int LIEF_ELF_NT_386_XSTATE = 514;
}

abstract class LIEF_ELF_NOTE_ABIS {
  static const int LIEF_ELF_ELF_NOTE_UNKNOWN = -1;
  static const int LIEF_ELF_ELF_NOTE_OS_LINUX = 0;
  static const int LIEF_ELF_ELF_NOTE_OS_GNU = 1;
  static const int LIEF_ELF_ELF_NOTE_OS_SOLARIS2 = 2;
  static const int LIEF_ELF_ELF_NOTE_OS_FREEBSD = 3;
  static const int LIEF_ELF_ELF_NOTE_OS_NETBSD = 4;
  static const int LIEF_ELF_ELF_NOTE_OS_SYLLABLE = 5;
}

abstract class LIEF_ELF_RELOCATION_PURPOSES {
  static const int LIEF_ELF_RELOC_PURPOSE_NONE = 0;
  static const int LIEF_ELF_RELOC_PURPOSE_PLTGOT = 1;
  static const int LIEF_ELF_RELOC_PURPOSE_DYNAMIC = 2;
  static const int LIEF_ELF_RELOC_PURPOSE_OBJECT = 3;
}

final class Pe_DosHeader_t extends ffi.Struct {
  @ffi.Uint16()
  external int magic;

  @ffi.Uint16()
  external int used_bytes_in_the_last_page;

  @ffi.Uint16()
  external int file_size_in_pages;

  @ffi.Uint16()
  external int numberof_relocation;

  @ffi.Uint16()
  external int header_size_in_paragraphs;

  @ffi.Uint16()
  external int minimum_extra_paragraphs;

  @ffi.Uint16()
  external int maximum_extra_paragraphs;

  @ffi.Uint16()
  external int initial_relative_ss;

  @ffi.Uint16()
  external int initial_sp;

  @ffi.Uint16()
  external int checksum;

  @ffi.Uint16()
  external int initial_ip;

  @ffi.Uint16()
  external int initial_relative_cs;

  @ffi.Uint16()
  external int addressof_relocation_table;

  @ffi.Uint16()
  external int overlay_number;

  @ffi.Array.multi([4])
  external ffi.Array<ffi.Uint16> reserved;

  @ffi.Uint16()
  external int oem_id;

  @ffi.Uint16()
  external int oem_info;

  @ffi.Array.multi([10])
  external ffi.Array<ffi.Uint16> reserved2;

  @ffi.Uint32()
  external int addressof_new_exeheader;
}

final class Pe_Header_t extends ffi.Struct {
  @ffi.Array.multi([4])
  external ffi.Array<ffi.Uint8> signature;

  @ffi.Int32()
  external int machine;

  @ffi.Uint16()
  external int numberof_sections;

  @ffi.Uint32()
  external int time_date_stamp;

  @ffi.Uint32()
  external int pointerto_symbol_table;

  @ffi.Uint32()
  external int numberof_symbols;

  @ffi.Uint16()
  external int sizeof_optional_header;

  @ffi.Uint16()
  external int characteristics;
}

final class Pe_OptionalHeader_t extends ffi.Struct {
  @ffi.Int32()
  external int magic;

  @ffi.Uint8()
  external int major_linker_version;

  @ffi.Uint8()
  external int minor_linker_version;

  @ffi.Uint32()
  external int sizeof_code;

  @ffi.Uint32()
  external int sizeof_initialized_data;

  @ffi.Uint32()
  external int sizeof_uninitialized_data;

  @ffi.Uint32()
  external int addressof_entrypoint;

  @ffi.Uint32()
  external int baseof_code;

  @ffi.Uint32()
  external int baseof_data;

  @ffi.Uint64()
  external int imagebase;

  @ffi.Uint32()
  external int section_alignment;

  @ffi.Uint32()
  external int file_alignment;

  @ffi.Uint16()
  external int major_operating_system_version;

  @ffi.Uint16()
  external int minor_operating_system_version;

  @ffi.Uint16()
  external int major_image_version;

  @ffi.Uint16()
  external int minor_image_version;

  @ffi.Uint16()
  external int major_subsystem_version;

  @ffi.Uint16()
  external int minor_subsystem_version;

  @ffi.Uint32()
  external int win32_version_value;

  @ffi.Uint32()
  external int sizeof_image;

  @ffi.Uint32()
  external int sizeof_headers;

  @ffi.Uint32()
  external int checksum;

  @ffi.Int32()
  external int subsystem;

  @ffi.Uint32()
  external int dll_characteristics;

  @ffi.Uint64()
  external int sizeof_stack_reserve;

  @ffi.Uint64()
  external int sizeof_stack_commit;

  @ffi.Uint64()
  external int sizeof_heap_reserve;

  @ffi.Uint64()
  external int sizeof_heap_commit;

  @ffi.Uint32()
  external int loader_flags;

  @ffi.Uint32()
  external int numberof_rva_and_size;
}

final class Pe_DataDirectory_t extends ffi.Struct {
  @ffi.Uint32()
  external int rva;

  @ffi.Uint32()
  external int size;
}

final class Pe_Section_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint64()
  external int virtual_address;

  @ffi.Uint64()
  external int size;

  @ffi.Uint64()
  external int offset;

  @ffi.Uint32()
  external int virtual_size;

  @ffi.Uint32()
  external int pointerto_relocation;

  @ffi.Uint32()
  external int pointerto_line_numbers;

  @ffi.Uint32()
  external int characteristics;

  external ffi.Pointer<ffi.Uint8> content;

  @ffi.Uint64()
  external int content_size;

  @ffi.Double()
  external double entropy;
}

final class Pe_ImportEntry_t extends ffi.Struct {
  @bool()
  external int is_ordinal;

  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint16()
  external int ordinal;

  @ffi.Uint64()
  external int hint_name_rva;

  @ffi.Uint16()
  external int hint;

  @ffi.Uint64()
  external int iat_value;

  @ffi.Uint64()
  external int data;

  @ffi.Uint64()
  external int iat_address;
}

typedef bool = ffi.Int;
typedef Dartbool = int;

final class Pe_Import_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint32()
  external int forwarder_chain;

  @ffi.Uint32()
  external int timedatestamp;

  external ffi.Pointer<ffi.Pointer<Pe_ImportEntry_t>> entries;

  @ffi.Uint32()
  external int import_address_table_rva;

  @ffi.Uint32()
  external int import_lookup_table_rva;
}

/// @brief LIEF::PE::Binary C Handler
final class Pe_Binary_t extends ffi.Struct {
  external ffi.Pointer<ffi.Void> handler;

  external ffi.Pointer<ffi.Char> name;

  external Pe_DosHeader_t dos_header;

  external Pe_Header_t header;

  external Pe_OptionalHeader_t optional_header;

  external ffi.Pointer<ffi.Pointer<Pe_DataDirectory_t>> data_directories;

  external ffi.Pointer<ffi.Pointer<Pe_Section_t>> sections;

  external ffi.Pointer<ffi.Pointer<Pe_Import_t>> imports;
}

final class Elf_Section_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Uint32()
  external int flags;

  @ffi.Int32()
  external int type;

  @ffi.Uint64()
  external int virtual_address;

  @ffi.Uint64()
  external int offset;

  @ffi.Uint64()
  external int original_size;

  @ffi.Uint32()
  external int link;

  @ffi.Uint32()
  external int info;

  @ffi.Uint64()
  external int alignment;

  @ffi.Uint64()
  external int entry_size;

  @ffi.Uint64()
  external int size;

  external ffi.Pointer<ffi.Uint8> content;

  @ffi.Double()
  external double entropy;
}

final class Elf_Segment_t extends ffi.Struct {
  @ffi.Int32()
  external int type;

  @ffi.Uint32()
  external int flags;

  @ffi.Uint64()
  external int virtual_address;

  @ffi.Uint64()
  external int virtual_size;

  @ffi.Uint64()
  external int offset;

  @ffi.Uint64()
  external int alignment;

  @ffi.Uint64()
  external int size;

  external ffi.Pointer<ffi.Uint8> content;
}

final class Elf_Header_t extends ffi.Struct {
  @ffi.Array.multi([16])
  external ffi.Array<ffi.Uint8> identity;

  @ffi.Int32()
  external int file_type;

  @ffi.Int32()
  external int machine_type;

  @ffi.Int32()
  external int object_file_version;

  @ffi.Uint64()
  external int entrypoint;

  @ffi.Uint64()
  external int program_headers_offset;

  @ffi.Uint64()
  external int section_headers_offset;

  @ffi.Uint32()
  external int processor_flags;

  @ffi.Uint32()
  external int header_size;

  @ffi.Uint32()
  external int program_header_size;

  @ffi.Uint32()
  external int numberof_segments;

  @ffi.Uint32()
  external int section_header_size;

  @ffi.Uint32()
  external int numberof_sections;

  @ffi.Uint32()
  external int name_string_table_idx;
}

final class Elf_DynamicEntry_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;
}

final class Elf_DynamicEntry_Library_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Char> name;
}

final class Elf_DynamicEntry_SharedObject_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Char> name;
}

final class Elf_DynamicEntry_Array_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Uint64> array;
}

final class Elf_DynamicEntry_Rpath_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Char> rpath;
}

final class Elf_DynamicEntry_RunPath_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Char> runpath;
}

final class Elf_DynamicEntry_Flags_t extends ffi.Struct {
  @ffi.Uint64()
  external int tag;

  @ffi.Uint64()
  external int value;

  external ffi.Pointer<ffi.Int32> flags;

  external ffi.Pointer<ffi.Int32> flags_1;
}

final class Elf_Symbol_t extends ffi.Struct {
  external ffi.Pointer<ffi.Char> name;

  @ffi.Int32()
  external int type;

  @ffi.Int32()
  external int binding;

  @ffi.Uint8()
  external int information;

  @ffi.Uint8()
  external int other;

  @ffi.Uint16()
  external int shndx;

  @ffi.Uint64()
  external int value;

  @ffi.Uint64()
  external int size;

  /// < Whether or not the symbol is exported
  @bool()
  external int is_exported;

  /// < Whether or not the symbol is imported
  @bool()
  external int is_imported;
}

/// @brief LIEF::ELF::Binary C Handler
final class Elf_Binary_t extends ffi.Struct {
  external ffi.Pointer<ffi.Void> handler;

  external ffi.Pointer<ffi.Char> name;

  external ffi.Pointer<ffi.Char> interpreter;

  @ffi.Int32()
  external int type;

  external Elf_Header_t header;

  external ffi.Pointer<ffi.Pointer<Elf_Section_t>> sections;

  external ffi.Pointer<ffi.Pointer<Elf_Segment_t>> segments;

  external ffi.Pointer<ffi.Pointer<Elf_DynamicEntry_t>> dynamic_entries;

  external ffi.Pointer<ffi.Pointer<Elf_Symbol_t>> dynamic_symbols;

  external ffi.Pointer<ffi.Pointer<Elf_Symbol_t>> static_symbols;
}

const int LIEF_MACHO_LC_REQ_DYLD = -2147483648;

const int LIEF_MACHO_REBASE_OPCODE_MASK = 240;

const int LIEF_MACHO_REBASE_IMMEDIATE_MASK = 15;

const int LIEF_MACHO_BIND_SYMBOL_FLAGS_WEAK_IMPORT = 1;

const int LIEF_MACHO_BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION = 8;

const int LIEF_MACHO_BIND_OPCODE_MASK = 240;

const int LIEF_MACHO_BIND_IMMEDIATE_MASK = 15;

const int LIEF_MACHO_R_ABS = 0;

const int LIEF_MACHO_R_SCATTERED = -2147483648;

const int LIEF_MACHO_CPU_ARCH_MASK = -16777216;

const int LIEF_MACHO_CPU_ARCH_ABI64 = 16777216;

const int LIEF_MACHO_CPU_SUBTYPE_MASK = -16777216;

const int LIEF_MACHO_CPU_SUBTYPE_LIB64 = -2147483648;

const int LIEF_MACHO_CPU_SUBTYPE_MULTIPLE = -1;

const int LIEF_MACHO_CPU_SUBTYPE_INTEL_FAMILY_MAX = 15;

const int LIEF_MACHO_CPU_SUBTYPE_INTEL_MODEL_ALL = 0;

const int LIEF_ELF_RHF_NONE = 0;

const int LIEF_ELF_RHF_QUICKSTART = 1;

const int LIEF_ELF_RHF_NOTPOT = 2;

const int LIEF_ELF_RHS_NO_LIBRARY_REPLACEMENT = 4;

const int LIEF_ELF_RHF_NO_MOVE = 8;

const int LIEF_ELF_RHF_SGI_ONLY = 16;

const int LIEF_ELF_RHF_GUARANTEE_INIT = 32;

const int LIEF_ELF_RHF_DELTA_C_PLUS_PLUS = 64;

const int LIEF_ELF_RHF_GUARANTEE_START_INIT = 128;

const int LIEF_ELF_RHF_PIXIE = 256;

const int LIEF_ELF_RHF_DEFAULT_DELAY_LOAD = 512;

const int LIEF_ELF_RHF_REQUICKSTART = 1024;

const int LIEF_ELF_RHF_REQUICKSTARTED = 2048;

const int LIEF_ELF_RHF_CORD = 4096;

const int LIEF_ELF_RHF_NO_UNRES_UNDEF = 8192;

const int LIEF_ELF_RHF_RLD_ORDER_SAFE = 16384;

const int LIEF_ELF_VER_DEF_NONE = 0;

const int LIEF_ELF_VER_DEF_CURRENT = 1;

const int LIEF_ELF_VER_FLG_BASE = 1;

const int LIEF_ELF_VER_FLG_WEAK = 2;

const int LIEF_ELF_VER_FLG_INFO = 4;

const int LIEF_ELF_VER_NDX_LOCAL = 0;

const int LIEF_ELF_VER_NDX_GLOBAL = 1;

const int LIEF_ELF_VERSYM_VERSION = 32767;

const int LIEF_ELF_VERSYM_HIDDEN = 32768;

const int LIEF_ELF_VER_NEED_NONE = 0;

const int LIEF_ELF_VER_NEED_CURRENT = 1;

const int _VCRT_COMPILER_PREPROCESSOR = 1;

const int _SAL_VERSION = 20;

const int __SAL_H_VERSION = 180000000;

const int _USE_DECLSPECS_FOR_SAL = 0;

const int _USE_ATTRIBUTES_FOR_SAL = 0;

const int _CRT_PACKING = 8;

const int _VCRUNTIME_DISABLED_WARNINGS = 4514;

const int _HAS_EXCEPTIONS = 1;

const int _WCHAR_T_DEFINED = 1;

const int NULL = 0;

const int _HAS_CXX17 = 0;

const int _HAS_CXX20 = 0;

const int _HAS_CXX23 = 0;

const int _HAS_NODISCARD = 1;

const int INT8_MIN = -128;

const int INT16_MIN = -32768;

const int INT32_MIN = -2147483648;

const int INT64_MIN = -9223372036854775808;

const int INT8_MAX = 127;

const int INT16_MAX = 32767;

const int INT32_MAX = 2147483647;

const int INT64_MAX = 9223372036854775807;

const int UINT8_MAX = 255;

const int UINT16_MAX = 65535;

const int UINT32_MAX = 4294967295;

const int UINT64_MAX = -1;

const int INT_LEAST8_MIN = -128;

const int INT_LEAST16_MIN = -32768;

const int INT_LEAST32_MIN = -2147483648;

const int INT_LEAST64_MIN = -9223372036854775808;

const int INT_LEAST8_MAX = 127;

const int INT_LEAST16_MAX = 32767;

const int INT_LEAST32_MAX = 2147483647;

const int INT_LEAST64_MAX = 9223372036854775807;

const int UINT_LEAST8_MAX = 255;

const int UINT_LEAST16_MAX = 65535;

const int UINT_LEAST32_MAX = 4294967295;

const int UINT_LEAST64_MAX = -1;

const int INT_FAST8_MIN = -128;

const int INT_FAST16_MIN = -2147483648;

const int INT_FAST32_MIN = -2147483648;

const int INT_FAST64_MIN = -9223372036854775808;

const int INT_FAST8_MAX = 127;

const int INT_FAST16_MAX = 2147483647;

const int INT_FAST32_MAX = 2147483647;

const int INT_FAST64_MAX = 9223372036854775807;

const int UINT_FAST8_MAX = 255;

const int UINT_FAST16_MAX = 4294967295;

const int UINT_FAST32_MAX = 4294967295;

const int UINT_FAST64_MAX = -1;

const int INTPTR_MIN = -9223372036854775808;

const int INTPTR_MAX = 9223372036854775807;

const int UINTPTR_MAX = -1;

const int INTMAX_MIN = -9223372036854775808;

const int INTMAX_MAX = 9223372036854775807;

const int UINTMAX_MAX = -1;

const int PTRDIFF_MIN = -9223372036854775808;

const int PTRDIFF_MAX = 9223372036854775807;

const int SIZE_MAX = -1;

const int SIG_ATOMIC_MIN = -2147483648;

const int SIG_ATOMIC_MAX = 2147483647;

const int WCHAR_MIN = 0;

const int WCHAR_MAX = 65535;

const int WINT_MIN = 0;

const int WINT_MAX = 65535;

const int _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE = 1;

const int _CRT_BUILD_DESKTOP_APP = 1;

const int _UCRT_DISABLED_WARNINGS = 4324;

const int _ARGMAX = 100;

const int _TRUNCATE = -1;

const int _CRT_INT_MAX = 2147483647;

const int _CRT_SIZE_MAX = -1;

const String __FILEW__ = 'C';

const int _CRT_FUNCTIONS_REQUIRED = 1;

const int _CRT_HAS_CXX17 = 0;

const int _CRT_HAS_C11 = 0;

const int _CRT_INTERNAL_NONSTDC_NAMES = 1;

const int __STDC_SECURE_LIB__ = 200411;

const int __GOT_SECURE_LIB__ = 200411;

const int __STDC_WANT_SECURE_LIB__ = 1;

const int _SECURECRT_FILL_BUFFER_PATTERN = 254;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES = 0;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT = 0;

const int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES = 1;

const int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY = 0;

const int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY = 0;

const String PRId8 = 'hhd';

const String PRId16 = 'hd';

const String PRId32 = 'd';

const String PRId64 = 'lld';

const String PRIdLEAST8 = 'hhd';

const String PRIdLEAST16 = 'hd';

const String PRIdLEAST32 = 'd';

const String PRIdLEAST64 = 'lld';

const String PRIdFAST8 = 'hhd';

const String PRIdFAST16 = 'd';

const String PRIdFAST32 = 'd';

const String PRIdFAST64 = 'lld';

const String PRIdMAX = 'lld';

const String PRIdPTR = 'lld';

const String PRIi8 = 'hhi';

const String PRIi16 = 'hi';

const String PRIi32 = 'i';

const String PRIi64 = 'lli';

const String PRIiLEAST8 = 'hhi';

const String PRIiLEAST16 = 'hi';

const String PRIiLEAST32 = 'i';

const String PRIiLEAST64 = 'lli';

const String PRIiFAST8 = 'hhi';

const String PRIiFAST16 = 'i';

const String PRIiFAST32 = 'i';

const String PRIiFAST64 = 'lli';

const String PRIiMAX = 'lli';

const String PRIiPTR = 'lli';

const String PRIo8 = 'hho';

const String PRIo16 = 'ho';

const String PRIo32 = 'o';

const String PRIo64 = 'llo';

const String PRIoLEAST8 = 'hho';

const String PRIoLEAST16 = 'ho';

const String PRIoLEAST32 = 'o';

const String PRIoLEAST64 = 'llo';

const String PRIoFAST8 = 'hho';

const String PRIoFAST16 = 'o';

const String PRIoFAST32 = 'o';

const String PRIoFAST64 = 'llo';

const String PRIoMAX = 'llo';

const String PRIoPTR = 'llo';

const String PRIu8 = 'hhu';

const String PRIu16 = 'hu';

const String PRIu32 = 'u';

const String PRIu64 = 'llu';

const String PRIuLEAST8 = 'hhu';

const String PRIuLEAST16 = 'hu';

const String PRIuLEAST32 = 'u';

const String PRIuLEAST64 = 'llu';

const String PRIuFAST8 = 'hhu';

const String PRIuFAST16 = 'u';

const String PRIuFAST32 = 'u';

const String PRIuFAST64 = 'llu';

const String PRIuMAX = 'llu';

const String PRIuPTR = 'llu';

const String PRIx8 = 'hhx';

const String PRIx16 = 'hx';

const String PRIx32 = 'x';

const String PRIx64 = 'llx';

const String PRIxLEAST8 = 'hhx';

const String PRIxLEAST16 = 'hx';

const String PRIxLEAST32 = 'x';

const String PRIxLEAST64 = 'llx';

const String PRIxFAST8 = 'hhx';

const String PRIxFAST16 = 'x';

const String PRIxFAST32 = 'x';

const String PRIxFAST64 = 'llx';

const String PRIxMAX = 'llx';

const String PRIxPTR = 'llx';

const String PRIX8 = 'hhX';

const String PRIX16 = 'hX';

const String PRIX32 = 'X';

const String PRIX64 = 'llX';

const String PRIXLEAST8 = 'hhX';

const String PRIXLEAST16 = 'hX';

const String PRIXLEAST32 = 'X';

const String PRIXLEAST64 = 'llX';

const String PRIXFAST8 = 'hhX';

const String PRIXFAST16 = 'X';

const String PRIXFAST32 = 'X';

const String PRIXFAST64 = 'llX';

const String PRIXMAX = 'llX';

const String PRIXPTR = 'llX';

const String SCNd8 = 'hhd';

const String SCNd16 = 'hd';

const String SCNd32 = 'd';

const String SCNd64 = 'lld';

const String SCNdLEAST8 = 'hhd';

const String SCNdLEAST16 = 'hd';

const String SCNdLEAST32 = 'd';

const String SCNdLEAST64 = 'lld';

const String SCNdFAST8 = 'hhd';

const String SCNdFAST16 = 'd';

const String SCNdFAST32 = 'd';

const String SCNdFAST64 = 'lld';

const String SCNdMAX = 'lld';

const String SCNdPTR = 'lld';

const String SCNi8 = 'hhi';

const String SCNi16 = 'hi';

const String SCNi32 = 'i';

const String SCNi64 = 'lli';

const String SCNiLEAST8 = 'hhi';

const String SCNiLEAST16 = 'hi';

const String SCNiLEAST32 = 'i';

const String SCNiLEAST64 = 'lli';

const String SCNiFAST8 = 'hhi';

const String SCNiFAST16 = 'i';

const String SCNiFAST32 = 'i';

const String SCNiFAST64 = 'lli';

const String SCNiMAX = 'lli';

const String SCNiPTR = 'lli';

const String SCNo8 = 'hho';

const String SCNo16 = 'ho';

const String SCNo32 = 'o';

const String SCNo64 = 'llo';

const String SCNoLEAST8 = 'hho';

const String SCNoLEAST16 = 'ho';

const String SCNoLEAST32 = 'o';

const String SCNoLEAST64 = 'llo';

const String SCNoFAST8 = 'hho';

const String SCNoFAST16 = 'o';

const String SCNoFAST32 = 'o';

const String SCNoFAST64 = 'llo';

const String SCNoMAX = 'llo';

const String SCNoPTR = 'llo';

const String SCNu8 = 'hhu';

const String SCNu16 = 'hu';

const String SCNu32 = 'u';

const String SCNu64 = 'llu';

const String SCNuLEAST8 = 'hhu';

const String SCNuLEAST16 = 'hu';

const String SCNuLEAST32 = 'u';

const String SCNuLEAST64 = 'llu';

const String SCNuFAST8 = 'hhu';

const String SCNuFAST16 = 'u';

const String SCNuFAST32 = 'u';

const String SCNuFAST64 = 'llu';

const String SCNuMAX = 'llu';

const String SCNuPTR = 'llu';

const String SCNx8 = 'hhx';

const String SCNx16 = 'hx';

const String SCNx32 = 'x';

const String SCNx64 = 'llx';

const String SCNxLEAST8 = 'hhx';

const String SCNxLEAST16 = 'hx';

const String SCNxLEAST32 = 'x';

const String SCNxLEAST64 = 'llx';

const String SCNxFAST8 = 'hhx';

const String SCNxFAST16 = 'x';

const String SCNxFAST32 = 'x';

const String SCNxFAST64 = 'llx';

const String SCNxMAX = 'llx';

const String SCNxPTR = 'llx';
